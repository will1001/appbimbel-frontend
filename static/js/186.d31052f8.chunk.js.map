{"version":3,"sources":["Demo/UIElements/Basic/Collapse.js","../node_modules/react-bootstrap/esm/Collapse.js"],"names":["BasicCollapse","state","isBasic","isMultiTarget","accordionKey","targetHandler","target","some","item","setState","prevState","filter","multiTargetHandler","map","this","className","sm","Header","href","DEMO","BLANK_LINK","onClick","aria-controls","aria-expanded","in","id","Body","Text","Title","as","Component","_collapseStyles","MARGINS","height","width","getDefaultDimensionValue","dimension","elem","value","toUpperCase","slice","margins","parseInt","css","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","defaultProps","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","Collapse","React","forwardRef","_ref","ref","onEnter","onEntering","onEntered","onExit","onExiting","children","_ref$dimension","_ref$getDimensionValu","props","_objectWithoutPropertiesLoose","computedDimension","handleEnter","useMemo","createChainedFunction","style","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","createElement","Transition","_extends","addEndListener","transitionEndListener","role","innerProps","cloneElement","classNames"],"mappings":"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","file":"static/js/186.d31052f8.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Card,\r\n    Collapse\r\n} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport DEMO from \"../../../store/constant\";\r\n\r\nclass BasicCollapse extends Component {\r\n    state = {\r\n        isBasic: false,\r\n        isMultiTarget: [],\r\n        accordionKey: 1\r\n    };\r\n\r\n    targetHandler = target => {\r\n        if(this.state.isMultiTarget.some(item => item === target)) {\r\n            this.setState(prevState => {\r\n                return {\r\n                    isMultiTarget: prevState.isMultiTarget.filter(item => item !== target)\r\n                }\r\n            });\r\n        } else {\r\n            this.setState(prevState => {\r\n                return {\r\n                    isMultiTarget: [...prevState.isMultiTarget, target]\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    multiTargetHandler = () => {\r\n        const allTarget = ['target1', 'target2'];\r\n        allTarget.map(target => {\r\n            this.targetHandler(target);\r\n            return false;\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { isBasic, isMultiTarget, accordionKey } = this.state;\r\n\r\n        return (\r\n            <Aux>\r\n                <Row className='btn-page'>\r\n                    <Col sm={12}>\r\n                        <h5>Basic Collapse</h5>\r\n                        <hr/>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Button href={DEMO.BLANK_LINK} onClick={() => this.setState({ isBasic: !isBasic })} aria-controls=\"basic-collapse\" aria-expanded={isBasic}>Collapse Link</Button>\r\n                                <Button onClick={() => this.setState({ isBasic: !isBasic })}>Collapse Button</Button>\r\n                            </Card.Header>\r\n                            <Collapse in={this.state.isBasic}>\r\n                                <div id=\"basic-collapse\">\r\n                                    <Card.Body>\r\n                                        <Card.Text>\r\n                                            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident.\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </div>\r\n                            </Collapse>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={12}>\r\n                        <h5>Multiple Targets</h5>\r\n                        <hr/>\r\n                        <Button onClick={() => this.targetHandler('target1')} aria-controls=\"target1\" aria-expanded={isMultiTarget.some(target => target === 'target1')}>Toggle first element</Button>\r\n                        <Button onClick={() => this.targetHandler('target2')} aria-controls=\"target2\" aria-expanded={isMultiTarget.some(target => target === 'target2')}>Toggle second element</Button>\r\n                        <Button onClick={this.multiTargetHandler}>Toggle both elements</Button>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card className=\"mt-2\">\r\n                                    <Collapse in={isMultiTarget.some(target => target === 'target1')}>\r\n                                        <div id=\"target1\">\r\n                                            <Card.Header>\r\n                                                <Card.Title as='h5'>First Element</Card.Title>\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                <Card.Text>\r\n                                                    Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident.\r\n                                                </Card.Text>\r\n                                            </Card.Body>\r\n                                        </div>\r\n                                    </Collapse>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col>\r\n                                <Card className=\"mt-2\">\r\n                                    <Collapse in={isMultiTarget.some(target => target === 'target2')}>\r\n                                        <div id=\"target2\">\r\n                                            <Card.Header>\r\n                                                <Card.Title as='h5'>Second Element</Card.Title>\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                <Card.Text>\r\n                                                    Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident.\r\n                                                </Card.Text>\r\n                                            </Card.Body>\r\n                                        </div>\r\n                                    </Collapse>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col sm={12} className=\"accordion\">\r\n                        <h5>Accordion Example</h5>\r\n                        <hr/>\r\n                        <Card className=\"mt-2\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">\r\n                                    <a href={DEMO.BLANK_LINK}\r\n                                       onClick={() => this.setState({ accordionKey: (accordionKey !== 1) ? 1 : 0 })}\r\n                                       aria-controls=\"accordion1\"\r\n                                       aria-expanded={accordionKey=== 1}>\r\n                                        Collapsible Group Item #1\r\n                                    </a>\r\n                                </Card.Title>\r\n                            </Card.Header>\r\n                            <Collapse in={this.state.accordionKey === 1}>\r\n                                <div id=\"accordion1\">\r\n                                    <Card.Body>\r\n                                        <Card.Text>\r\n                                            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia\r\n                                            aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor,\r\n                                            sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica,\r\n                                            craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings\r\n                                            occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus\r\n                                            labore sustainable VHS.\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </div>\r\n                            </Collapse>\r\n                        </Card>\r\n                        <Card className=\"mt-2\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">\r\n                                    <a href={DEMO.BLANK_LINK}\r\n                                       onClick={() => this.setState({ accordionKey: (accordionKey !== 2) ? 2 : 0 })}\r\n                                       aria-controls=\"accordion2\"\r\n                                       aria-expanded={accordionKey === 2}>\r\n                                        Collapsible Group Item #2\r\n                                    </a>\r\n                                </Card.Title>\r\n                            </Card.Header>\r\n                            <Collapse in={this.state.accordionKey === 2}>\r\n                                <div id=\"accordion2\">\r\n                                    <Card.Body>\r\n                                        <Card.Text>\r\n                                            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia\r\n                                            aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor,\r\n                                            sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica,\r\n                                            craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings\r\n                                            occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus\r\n                                            labore sustainable VHS.\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </div>\r\n                            </Collapse>\r\n                        </Card>\r\n                        <Card className=\"mt-2\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">\r\n                                    <a href={DEMO.BLANK_LINK}\r\n                                       onClick={() => this.setState({ accordionKey: (accordionKey !== 3) ? 3 : 0 })}\r\n                                       aria-controls=\"accordion3\"\r\n                                       aria-expanded={accordionKey === 3}>\r\n                                        Collapsible Group Item #3\r\n                                    </a>\r\n                                </Card.Title>\r\n                            </Card.Header>\r\n                            <Collapse in={this.state.accordionKey === 3}>\r\n                                <div id=\"accordion3\">\r\n                                    <Card.Body>\r\n                                        <Card.Text>\r\n                                            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia\r\n                                            aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor,\r\n                                            sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica,\r\n                                            craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings\r\n                                            occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus\r\n                                            labore sustainable VHS.\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </div>\r\n                            </Collapse>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BasicCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _collapseStyles;\n\nimport classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport Transition, { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nvar MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  var offset = \"offset\" + dimension[0].toUpperCase() + dimension.slice(1);\n  var value = elem[offset];\n  var margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nvar collapseStyles = (_collapseStyles = {}, _collapseStyles[EXITED] = 'collapse', _collapseStyles[EXITING] = 'collapsing', _collapseStyles[ENTERING] = 'collapsing', _collapseStyles[ENTERED] = 'collapse show', _collapseStyles);\nvar defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nvar Collapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var onEnter = _ref.onEnter,\n      onEntering = _ref.onEntering,\n      onEntered = _ref.onEntered,\n      onExit = _ref.onExit,\n      onExiting = _ref.onExiting,\n      className = _ref.className,\n      children = _ref.children,\n      _ref$dimension = _ref.dimension,\n      dimension = _ref$dimension === void 0 ? 'height' : _ref$dimension,\n      _ref$getDimensionValu = _ref.getDimensionValue,\n      getDimensionValue = _ref$getDimensionValu === void 0 ? getDefaultDimensionValue : _ref$getDimensionValu,\n      props = _objectWithoutPropertiesLoose(_ref, [\"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"className\", \"children\", \"dimension\", \"getDimensionValue\"]);\n\n  /* Compute dimension */\n  var computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  var handleEnter = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = '0';\n    }, onEnter);\n  }, [computedDimension, onEnter]);\n  var handleEntering = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      var scroll = \"scroll\" + computedDimension[0].toUpperCase() + computedDimension.slice(1);\n      elem.style[computedDimension] = elem[scroll] + \"px\";\n    }, onEntering);\n  }, [computedDimension, onEntering]);\n  var handleEntered = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = null;\n    }, onEntered);\n  }, [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  var handleExit = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = getDimensionValue(computedDimension, elem) + \"px\";\n      triggerBrowserReflow(elem);\n    }, onExit);\n  }, [onExit, getDimensionValue, computedDimension]);\n  var handleExiting = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = null;\n    }, onExiting);\n  }, [computedDimension, onExiting]);\n  return /*#__PURE__*/React.createElement(Transition // @ts-ignore\n  , _extends({\n    ref: ref,\n    addEndListener: transitionEndListener\n  }, props, {\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting\n  }), function (state, innerProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({}, innerProps, {\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'width')\n    }));\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;"],"sourceRoot":""}