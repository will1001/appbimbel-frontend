{"version":3,"sources":["../node_modules/datatables.net-responsive-bs/js/responsive.bootstrap.js","../node_modules/datatables.net-responsive/js/dataTables.responsive.js"],"names":["define","$","window","document","undefined","DataTable","fn","dataTable","_display","Responsive","display","_original","modal","_modal","options","row","update","render","header","find","button","detach","empty","append","prepend","appendTo","factory","settings","opts","versionCheck","this","s","dt","Api","columns","current","responsive","details","type","c","extend","defaults","_constructor","prototype","that","dtPrivateSettings","oldWindowWidth","innerWidth","_responsive","on","util","throttle","width","_resize","oApi","_fnCallbackReg","tr","data","idx","inArray","each","i","column","index","css","off","table","body","cells","nodes","to$","removeClass","val","_setColumnVis","breakpoints","sort","a","b","_classLogic","_resizeAuto","_detailsInit","_timer","clearTimeout","setTimeout","_redrawChildren","node","addClass","e","rowIds","rows","every","child","isShown","push","id","one","_detailsDisplay","_controlClass","namespace","adjust","_columnsVisiblity","breakpoint","ien","order","map","col","columnIdx","priority","visible","auto","minWidth","includeIn","requiredWidth","length","scrolling","oScroll","bar","sY","sX","iBarWidth","usedWidth","container","offsetWidth","control","colIdx","showControl","never","eq","className","aoColumns","responsivePriority","dataPriority","getAttribute","match","add","name","operator","matched","size","_find","indexOf","classNames","split","hasClass","k","ken","trim","j","brokenPoint","re","RegExp","columnsVis","firstVisible","page","filter","res","renderer","_detailsObj","triggerHandler","target","_tabIndexes","keyCode","click","selector","closest","get","toArray","targetIdx","cell","trigger","rowIdx","dtCol","sClass","columnIndex","orthogonal","hidden","rowIndex","title","sTitle","text","iterator","forceRedraw","oldVis","slice","collapsedClass","toggleClass","changed","info","recordsDisplay","attr","isEmptyObject","_childNodeStore","key","_childNodesRestore","clonedTable","cloneNode","clonedHeader","clonedBody","clone","style","headerCells","footer","clonedFooter","footerCells","removeAttr","inserted","height","overflow","clear","insertBefore","remove","_responsiveOnlyHidden","v","showHide","indexes","ctx","removeData","iTabIndex","Infinity","childRow","show","childRowImmediate","hasHidden","close","stopPropagation","parentChildren","parentNode","childNodes","jen","appendChild","listHiddenNodes","api","ul","found","klass","children","_childNodes","listHidden","join","tableAll","tableClass","register","li","parent","context","registerPlural","version","json","nTable","oInit","init","isPlainObject"],"mappings":"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","file":"static/js/2.b5a748be.chunk.js","sourcesContent":["/*! Bootstrap integration for DataTables' Responsive\n * ©2015-2016 SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net-bs', 'datatables.net-responsive'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net-bs')(root, $).$;\n\t\t\t}\n\n\t\t\tif ( ! $.fn.dataTable.Responsive ) {\n\t\t\t\trequire('datatables.net-responsive')(root, $);\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\nvar _display = DataTable.Responsive.display;\nvar _original = _display.modal;\nvar _modal = $(\n\t'<div class=\"modal fade dtr-bs-modal\" role=\"dialog\">'+\n\t\t'<div class=\"modal-dialog\" role=\"document\">'+\n\t\t\t'<div class=\"modal-content\">'+\n\t\t\t\t'<div class=\"modal-header\">'+\n\t\t\t\t\t'<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>'+\n\t\t\t\t'</div>'+\n\t\t\t\t'<div class=\"modal-body\"/>'+\n\t\t\t'</div>'+\n\t\t'</div>'+\n\t'</div>'\n);\n\n_display.modal = function ( options ) {\n\treturn function ( row, update, render ) {\n\t\tif ( ! $.fn.modal ) {\n\t\t\t_original( row, update, render );\n\t\t}\n\t\telse {\n\t\t\tif ( ! update ) {\n\t\t\t\tif ( options && options.header ) {\n\t\t\t\t\tvar header = _modal.find('div.modal-header');\n\t\t\t\t\tvar button = header.find('button').detach();\n\t\t\t\t\t\n\t\t\t\t\theader\n\t\t\t\t\t\t.empty()\n\t\t\t\t\t\t.append( '<h4 class=\"modal-title\">'+options.header( row )+'</h4>' )\n\t\t\t\t\t\t.prepend( button );\n\t\t\t\t}\n\n\t\t\t\t_modal.find( 'div.modal-body' )\n\t\t\t\t\t.empty()\n\t\t\t\t\t.append( render() );\n\n\t\t\t\t_modal\n\t\t\t\t\t.appendTo( 'body' )\n\t\t\t\t\t.modal();\n\t\t\t}\n\t\t}\n\t};\n};\n\n\nreturn DataTable.Responsive;\n}));\n","/*! Responsive 2.2.7\n * 2014-2021 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     Responsive\n * @description Responsive tables plug-in for DataTables\n * @version     2.2.7\n * @file        dataTables.responsive.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2014-2021 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n/**\n * Responsive is a plug-in for the DataTables library that makes use of\n * DataTables' ability to change the visibility of columns, changing the\n * visibility of columns so the displayed columns fit into the table container.\n * The end result is that complex tables will be dynamically adjusted to fit\n * into the viewport, be it on a desktop, tablet or mobile browser.\n *\n * Responsive for DataTables has two modes of operation, which can used\n * individually or combined:\n *\n * * Class name based control - columns assigned class names that match the\n *   breakpoint logic can be shown / hidden as required for each breakpoint.\n * * Automatic control - columns are automatically hidden when there is no\n *   room left to display them. Columns removed from the right.\n *\n * In additional to column visibility control, Responsive also has built into\n * options to use DataTables' child row display to show / hide the information\n * from the table that has been hidden. There are also two modes of operation\n * for this child row display:\n *\n * * Inline - when the control element that the user can use to show / hide\n *   child rows is displayed inside the first column of the table.\n * * Column - where a whole column is dedicated to be the show / hide control.\n *\n * Initialisation of Responsive is performed by:\n *\n * * Adding the class `responsive` or `dt-responsive` to the table. In this case\n *   Responsive will automatically be initialised with the default configuration\n *   options when the DataTable is created.\n * * Using the `responsive` option in the DataTables configuration options. This\n *   can also be used to specify the configuration options, or simply set to\n *   `true` to use the defaults.\n *\n *  @class\n *  @param {object} settings DataTables settings object for the host table\n *  @param {object} [opts] Configuration options\n *  @requires jQuery 1.7+\n *  @requires DataTables 1.10.3+\n *\n *  @example\n *      $('#example').DataTable( {\n *        responsive: true\n *      } );\n *    } );\n */\nvar Responsive = function ( settings, opts ) {\n\t// Sanity check that we are using DataTables 1.10 or newer\n\tif ( ! DataTable.versionCheck || ! DataTable.versionCheck( '1.10.10' ) ) {\n\t\tthrow 'DataTables Responsive requires DataTables 1.10.10 or newer';\n\t}\n\n\tthis.s = {\n\t\tdt: new DataTable.Api( settings ),\n\t\tcolumns: [],\n\t\tcurrent: []\n\t};\n\n\t// Check if responsive has already been initialised on this table\n\tif ( this.s.dt.settings()[0].responsive ) {\n\t\treturn;\n\t}\n\n\t// details is an object, but for simplicity the user can give it as a string\n\t// or a boolean\n\tif ( opts && typeof opts.details === 'string' ) {\n\t\topts.details = { type: opts.details };\n\t}\n\telse if ( opts && opts.details === false ) {\n\t\topts.details = { type: false };\n\t}\n\telse if ( opts && opts.details === true ) {\n\t\topts.details = { type: 'inline' };\n\t}\n\n\tthis.c = $.extend( true, {}, Responsive.defaults, DataTable.defaults.responsive, opts );\n\tsettings.responsive = this;\n\tthis._constructor();\n};\n\n$.extend( Responsive.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Initialise the Responsive instance\n\t *\n\t * @private\n\t */\n\t_constructor: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar dtPrivateSettings = dt.settings()[0];\n\t\tvar oldWindowWidth = $(window).innerWidth();\n\n\t\tdt.settings()[0]._responsive = this;\n\n\t\t// Use DataTables' throttle function to avoid processor thrashing on\n\t\t// resize\n\t\t$(window).on( 'resize.dtr orientationchange.dtr', DataTable.util.throttle( function () {\n\t\t\t// iOS has a bug whereby resize can fire when only scrolling\n\t\t\t// See: http://stackoverflow.com/questions/8898412\n\t\t\tvar width = $(window).innerWidth();\n\n\t\t\tif ( width !== oldWindowWidth ) {\n\t\t\t\tthat._resize();\n\t\t\t\toldWindowWidth = width;\n\t\t\t}\n\t\t} ) );\n\n\t\t// DataTables doesn't currently trigger an event when a row is added, so\n\t\t// we need to hook into its private API to enforce the hidden rows when\n\t\t// new data is added\n\t\tdtPrivateSettings.oApi._fnCallbackReg( dtPrivateSettings, 'aoRowCreatedCallback', function (tr, data, idx) {\n\t\t\tif ( $.inArray( false, that.s.current ) !== -1 ) {\n\t\t\t\t$('>td, >th', tr).each( function ( i ) {\n\t\t\t\t\tvar idx = dt.column.index( 'toData', i );\n\n\t\t\t\t\tif ( that.s.current[idx] === false ) {\n\t\t\t\t\t\t$(this).css('display', 'none');\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t// Destroy event handler\n\t\tdt.on( 'destroy.dtr', function () {\n\t\t\tdt.off( '.dtr' );\n\t\t\t$( dt.table().body() ).off( '.dtr' );\n\t\t\t$(window).off( 'resize.dtr orientationchange.dtr' );\n\t\t\tdt.cells('.dtr-control').nodes().to$().removeClass('dtr-control');\n\n\t\t\t// Restore the columns that we've hidden\n\t\t\t$.each( that.s.current, function ( i, val ) {\n\t\t\t\tif ( val === false ) {\n\t\t\t\t\tthat._setColumnVis( i, true );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Reorder the breakpoints array here in case they have been added out\n\t\t// of order\n\t\tthis.c.breakpoints.sort( function (a, b) {\n\t\t\treturn a.width < b.width ? 1 :\n\t\t\t\ta.width > b.width ? -1 : 0;\n\t\t} );\n\n\t\tthis._classLogic();\n\t\tthis._resizeAuto();\n\n\t\t// Details handler\n\t\tvar details = this.c.details;\n\n\t\tif ( details.type !== false ) {\n\t\t\tthat._detailsInit();\n\n\t\t\t// DataTables will trigger this event on every column it shows and\n\t\t\t// hides individually\n\t\t\tdt.on( 'column-visibility.dtr', function () {\n\t\t\t\t// Use a small debounce to allow multiple columns to be set together\n\t\t\t\tif ( that._timer ) {\n\t\t\t\t\tclearTimeout( that._timer );\n\t\t\t\t}\n\n\t\t\t\tthat._timer = setTimeout( function () {\n\t\t\t\t\tthat._timer = null;\n\n\t\t\t\t\tthat._classLogic();\n\t\t\t\t\tthat._resizeAuto();\n\t\t\t\t\tthat._resize(true);\n\n\t\t\t\t\tthat._redrawChildren();\n\t\t\t\t}, 100 );\n\t\t\t} );\n\n\t\t\t// Redraw the details box on each draw which will happen if the data\n\t\t\t// has changed. This is used until DataTables implements a native\n\t\t\t// `updated` event for rows\n\t\t\tdt.on( 'draw.dtr', function () {\n\t\t\t\tthat._redrawChildren();\n\t\t\t} );\n\n\t\t\t$(dt.table().node()).addClass( 'dtr-'+details.type );\n\t\t}\n\n\t\tdt.on( 'column-reorder.dtr', function (e, settings, details) {\n\t\t\tthat._classLogic();\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize(true);\n\t\t} );\n\n\t\t// Change in column sizes means we need to calc\n\t\tdt.on( 'column-sizing.dtr', function () {\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize();\n\t\t});\n\n\t\t// On Ajax reload we want to reopen any child rows which are displayed\n\t\t// by responsive\n\t\tdt.on( 'preXhr.dtr', function () {\n\t\t\tvar rowIds = [];\n\t\t\tdt.rows().every( function () {\n\t\t\t\tif ( this.child.isShown() ) {\n\t\t\t\t\trowIds.push( this.id(true) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tdt.one( 'draw.dtr', function () {\n\t\t\t\tthat._resizeAuto();\n\t\t\t\tthat._resize();\n\n\t\t\t\tdt.rows( rowIds ).every( function () {\n\t\t\t\t\tthat._detailsDisplay( this, false );\n\t\t\t\t} );\n\t\t\t} );\n\t\t});\n\n\t\tdt\n\t\t\t.on( 'draw.dtr', function () {\n\t\t\t\tthat._controlClass();\n\t\t\t})\n\t\t\t.on( 'init.dtr', function (e, settings, details) {\n\t\t\t\tif ( e.namespace !== 'dt' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthat._resizeAuto();\n\t\t\t\tthat._resize();\n\n\t\t\t\t// If columns were hidden, then DataTables needs to adjust the\n\t\t\t\t// column sizing\n\t\t\t\tif ( $.inArray( false, that.s.current ) ) {\n\t\t\t\t\tdt.columns.adjust();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t// First pass - draw the table for the current viewport size\n\t\tthis._resize();\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Calculate the visibility for the columns in a table for a given\n\t * breakpoint. The result is pre-determined based on the class logic if\n\t * class names are used to control all columns, but the width of the table\n\t * is also used if there are columns which are to be automatically shown\n\t * and hidden.\n\t *\n\t * @param  {string} breakpoint Breakpoint name to use for the calculation\n\t * @return {array} Array of boolean values initiating the visibility of each\n\t *   column.\n\t *  @private\n\t */\n\t_columnsVisiblity: function ( breakpoint )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\n\t\t// Create an array that defines the column ordering based first on the\n\t\t// column's priority, and secondly the column index. This allows the\n\t\t// columns to be removed from the right if the priority matches\n\t\tvar order = columns\n\t\t\t.map( function ( col, idx ) {\n\t\t\t\treturn {\n\t\t\t\t\tcolumnIdx: idx,\n\t\t\t\t\tpriority: col.priority\n\t\t\t\t};\n\t\t\t} )\n\t\t\t.sort( function ( a, b ) {\n\t\t\t\tif ( a.priority !== b.priority ) {\n\t\t\t\t\treturn a.priority - b.priority;\n\t\t\t\t}\n\t\t\t\treturn a.columnIdx - b.columnIdx;\n\t\t\t} );\n\n\t\t// Class logic - determine which columns are in this breakpoint based\n\t\t// on the classes. If no class control (i.e. `auto`) then `-` is used\n\t\t// to indicate this to the rest of the function\n\t\tvar display = $.map( columns, function ( col, i ) {\n\t\t\tif ( dt.column(i).visible() === false ) {\n\t\t\t\treturn 'not-visible';\n\t\t\t}\n\t\t\treturn col.auto && col.minWidth === null ?\n\t\t\t\tfalse :\n\t\t\t\tcol.auto === true ?\n\t\t\t\t\t'-' :\n\t\t\t\t\t$.inArray( breakpoint, col.includeIn ) !== -1;\n\t\t} );\n\n\t\t// Auto column control - first pass: how much width is taken by the\n\t\t// ones that must be included from the non-auto columns\n\t\tvar requiredWidth = 0;\n\t\tfor ( i=0, ien=display.length ; i<ien ; i++ ) {\n\t\t\tif ( display[i] === true ) {\n\t\t\t\trequiredWidth += columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Second pass, use up any remaining width for other columns. For\n\t\t// scrolling tables we need to subtract the width of the scrollbar. It\n\t\t// may not be requires which makes this sub-optimal, but it would\n\t\t// require another full redraw to make complete use of those extra few\n\t\t// pixels\n\t\tvar scrolling = dt.settings()[0].oScroll;\n\t\tvar bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;\n\t\tvar widthAvailable = dt.table().container().offsetWidth - bar;\n\t\tvar usedWidth = widthAvailable - requiredWidth;\n\n\t\t// Control column needs to always be included. This makes it sub-\n\t\t// optimal in terms of using the available with, but to stop layout\n\t\t// thrashing or overflow. Also we need to account for the control column\n\t\t// width first so we know how much width is available for the other\n\t\t// columns, since the control column might not be the first one shown\n\t\tfor ( i=0, ien=display.length ; i<ien ; i++ ) {\n\t\t\tif ( columns[i].control ) {\n\t\t\t\tusedWidth -= columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Allow columns to be shown (counting by priority and then right to\n\t\t// left) until we run out of room\n\t\tvar empty = false;\n\t\tfor ( i=0, ien=order.length ; i<ien ; i++ ) {\n\t\t\tvar colIdx = order[i].columnIdx;\n\n\t\t\tif ( display[colIdx] === '-' && ! columns[colIdx].control && columns[colIdx].minWidth ) {\n\t\t\t\t// Once we've found a column that won't fit we don't let any\n\t\t\t\t// others display either, or columns might disappear in the\n\t\t\t\t// middle of the table\n\t\t\t\tif ( empty || usedWidth - columns[colIdx].minWidth < 0 ) {\n\t\t\t\t\tempty = true;\n\t\t\t\t\tdisplay[colIdx] = false;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdisplay[colIdx] = true;\n\t\t\t\t}\n\n\t\t\t\tusedWidth -= columns[colIdx].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Determine if the 'control' column should be shown (if there is one).\n\t\t// This is the case when there is a hidden column (that is not the\n\t\t// control column). The two loops look inefficient here, but they are\n\t\t// trivial and will fly through. We need to know the outcome from the\n\t\t// first , before the action in the second can be taken\n\t\tvar showControl = false;\n\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tif ( ! columns[i].control && ! columns[i].never && display[i] === false ) {\n\t\t\t\tshowControl = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tif ( columns[i].control ) {\n\t\t\t\tdisplay[i] = showControl;\n\t\t\t}\n\n\t\t\t// Replace not visible string with false from the control column detection above\n\t\t\tif ( display[i] === 'not-visible' ) {\n\t\t\t\tdisplay[i] = false;\n\t\t\t}\n\t\t}\n\n\t\t// Finally we need to make sure that there is at least one column that\n\t\t// is visible\n\t\tif ( $.inArray( true, display ) === -1 ) {\n\t\t\tdisplay[0] = true;\n\t\t}\n\n\t\treturn display;\n\t},\n\n\n\t/**\n\t * Create the internal `columns` array with information about the columns\n\t * for the table. This includes determining which breakpoints the column\n\t * will appear in, based upon class names in the column, which makes up the\n\t * vast majority of this method.\n\t *\n\t * @private\n\t */\n\t_classLogic: function ()\n\t{\n\t\tvar that = this;\n\t\tvar calc = {};\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar dt = this.s.dt;\n\t\tvar columns = dt.columns().eq(0).map( function (i) {\n\t\t\tvar column = this.column(i);\n\t\t\tvar className = column.header().className;\n\t\t\tvar priority = dt.settings()[0].aoColumns[i].responsivePriority;\n\t\t\tvar dataPriority = column.header().getAttribute('data-priority');\n\n\t\t\tif ( priority === undefined ) {\n\t\t\t\tpriority = dataPriority === undefined || dataPriority === null?\n\t\t\t\t\t10000 :\n\t\t\t\t\tdataPriority * 1;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tclassName: className,\n\t\t\t\tincludeIn: [],\n\t\t\t\tauto:      false,\n\t\t\t\tcontrol:   false,\n\t\t\t\tnever:     className.match(/\\bnever\\b/) ? true : false,\n\t\t\t\tpriority:  priority\n\t\t\t};\n\t\t} );\n\n\t\t// Simply add a breakpoint to `includeIn` array, ensuring that there are\n\t\t// no duplicates\n\t\tvar add = function ( colIdx, name ) {\n\t\t\tvar includeIn = columns[ colIdx ].includeIn;\n\n\t\t\tif ( $.inArray( name, includeIn ) === -1 ) {\n\t\t\t\tincludeIn.push( name );\n\t\t\t}\n\t\t};\n\n\t\tvar column = function ( colIdx, name, operator, matched ) {\n\t\t\tvar size, i, ien;\n\n\t\t\tif ( ! operator ) {\n\t\t\t\tcolumns[ colIdx ].includeIn.push( name );\n\t\t\t}\n\t\t\telse if ( operator === 'max-' ) {\n\t\t\t\t// Add this breakpoint and all smaller\n\t\t\t\tsize = that._find( name ).width;\n\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( breakpoints[i].width <= size ) {\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( operator === 'min-' ) {\n\t\t\t\t// Add this breakpoint and all larger\n\t\t\t\tsize = that._find( name ).width;\n\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( breakpoints[i].width >= size ) {\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( operator === 'not-' ) {\n\t\t\t\t// Add all but this breakpoint\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( breakpoints[i].name.indexOf( matched ) === -1 ) {\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Loop over each column and determine if it has a responsive control\n\t\t// class\n\t\tcolumns.each( function ( col, i ) {\n\t\t\tvar classNames = col.className.split(' ');\n\t\t\tvar hasClass = false;\n\n\t\t\t// Split the class name up so multiple rules can be applied if needed\n\t\t\tfor ( var k=0, ken=classNames.length ; k<ken ; k++ ) {\n\t\t\t\tvar className = classNames[k].trim();\n\n\t\t\t\tif ( className === 'all' ) {\n\t\t\t\t\t// Include in all\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.includeIn = $.map( breakpoints, function (a) {\n\t\t\t\t\t\treturn a.name;\n\t\t\t\t\t} );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if ( className === 'none' || col.never ) {\n\t\t\t\t\t// Include in none (default) and no auto\n\t\t\t\t\thasClass = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if ( className === 'control' || className === 'dtr-control' ) {\n\t\t\t\t\t// Special column that is only visible, when one of the other\n\t\t\t\t\t// columns is hidden. This is used for the details control\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.control = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$.each( breakpoints, function ( j, breakpoint ) {\n\t\t\t\t\t// Does this column have a class that matches this breakpoint?\n\t\t\t\t\tvar brokenPoint = breakpoint.name.split('-');\n\t\t\t\t\tvar re = new RegExp( '(min\\\\-|max\\\\-|not\\\\-)?('+brokenPoint[0]+')(\\\\-[_a-zA-Z0-9])?' );\n\t\t\t\t\tvar match = className.match( re );\n\n\t\t\t\t\tif ( match ) {\n\t\t\t\t\t\thasClass = true;\n\n\t\t\t\t\t\tif ( match[2] === brokenPoint[0] && match[3] === '-'+brokenPoint[1] ) {\n\t\t\t\t\t\t\t// Class name matches breakpoint name fully\n\t\t\t\t\t\t\tcolumn( i, breakpoint.name, match[1], match[2]+match[3] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( match[2] === brokenPoint[0] && ! match[3] ) {\n\t\t\t\t\t\t\t// Class name matched primary breakpoint name with no qualifier\n\t\t\t\t\t\t\tcolumn( i, breakpoint.name, match[1], match[2] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// If there was no control class, then automatic sizing is used\n\t\t\tif ( ! hasClass ) {\n\t\t\t\tcol.auto = true;\n\t\t\t}\n\t\t} );\n\n\t\tthis.s.columns = columns;\n\t},\n\n\t/**\n\t * Update the cells to show the correct control class / button\n\t * @private\n\t */\n\t_controlClass: function ()\n\t{\n\t\tif ( this.c.details.type === 'inline' ) {\n\t\t\tvar dt = this.s.dt;\n\t\t\tvar columnsVis = this.s.current;\n\t\t\tvar firstVisible = $.inArray(true, columnsVis);\n\n\t\t\t// Remove from any cells which shouldn't have it\n\t\t\tdt.cells(\n\t\t\t\tnull,\n\t\t\t\tfunction(idx) {\n\t\t\t\t\treturn idx !== firstVisible;\n\t\t\t\t},\n\t\t\t\t{page: 'current'}\n\t\t\t)\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.filter('.dtr-control')\n\t\t\t\t.removeClass('dtr-control');\n\n\t\t\tdt.cells(null, firstVisible, {page: 'current'})\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.addClass('dtr-control');\n\t\t}\n\t},\n\n\t/**\n\t * Show the details for the child row\n\t *\n\t * @param  {DataTables.Api} row    API instance for the row\n\t * @param  {boolean}        update Update flag\n\t * @private\n\t */\n\t_detailsDisplay: function ( row, update )\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar details = this.c.details;\n\n\t\tif ( details && details.type !== false ) {\n\t\t\tvar res = details.display( row, update, function () {\n\t\t\t\treturn details.renderer(\n\t\t\t\t\tdt, row[0], that._detailsObj(row[0])\n\t\t\t\t);\n\t\t\t} );\n\n\t\t\tif ( res === true || res === false ) {\n\t\t\t\t$(dt.table().node()).triggerHandler( 'responsive-display.dt', [dt, row, res, update] );\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Initialisation for the details handler\n\t *\n\t * @private\n\t */\n\t_detailsInit: function ()\n\t{\n\t\tvar that    = this;\n\t\tvar dt      = this.s.dt;\n\t\tvar details = this.c.details;\n\n\t\t// The inline type always uses the first child as the target\n\t\tif ( details.type === 'inline' ) {\n\t\t\tdetails.target = 'td.dtr-control, th.dtr-control';\n\t\t}\n\n\t\t// Keyboard accessibility\n\t\tdt.on( 'draw.dtr', function () {\n\t\t\tthat._tabIndexes();\n\t\t} );\n\t\tthat._tabIndexes(); // Initial draw has already happened\n\n\t\t$( dt.table().body() ).on( 'keyup.dtr', 'td, th', function (e) {\n\t\t\tif ( e.keyCode === 13 && $(this).data('dtr-keyboard') ) {\n\t\t\t\t$(this).click();\n\t\t\t}\n\t\t} );\n\n\t\t// type.target can be a string jQuery selector or a column index\n\t\tvar target   = details.target;\n\t\tvar selector = typeof target === 'string' ? target : 'td, th';\n\n\t\tif ( target !== undefined || target !== null ) {\n\t\t\t// Click handler to show / hide the details rows when they are available\n\t\t\t$( dt.table().body() )\n\t\t\t\t.on( 'click.dtr mousedown.dtr mouseup.dtr', selector, function (e) {\n\t\t\t\t\t// If the table is not collapsed (i.e. there is no hidden columns)\n\t\t\t\t\t// then take no action\n\t\t\t\t\tif ( ! $(dt.table().node()).hasClass('collapsed' ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check that the row is actually a DataTable's controlled node\n\t\t\t\t\tif ( $.inArray( $(this).closest('tr').get(0), dt.rows().nodes().toArray() ) === -1 ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// For column index, we determine if we should act or not in the\n\t\t\t\t\t// handler - otherwise it is already okay\n\t\t\t\t\tif ( typeof target === 'number' ) {\n\t\t\t\t\t\tvar targetIdx = target < 0 ?\n\t\t\t\t\t\t\tdt.columns().eq(0).length + target :\n\t\t\t\t\t\t\ttarget;\n\n\t\t\t\t\t\tif ( dt.cell( this ).index().column !== targetIdx ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// $().closest() includes itself in its check\n\t\t\t\t\tvar row = dt.row( $(this).closest('tr') );\n\n\t\t\t\t\t// Check event type to do an action\n\t\t\t\t\tif ( e.type === 'click' ) {\n\t\t\t\t\t\t// The renderer is given as a function so the caller can execute it\n\t\t\t\t\t\t// only when they need (i.e. if hiding there is no point is running\n\t\t\t\t\t\t// the renderer)\n\t\t\t\t\t\tthat._detailsDisplay( row, false );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( e.type === 'mousedown' ) {\n\t\t\t\t\t\t// For mouse users, prevent the focus ring from showing\n\t\t\t\t\t\t$(this).css('outline', 'none');\n\t\t\t\t\t}\n\t\t\t\t\telse if ( e.type === 'mouseup' ) {\n\t\t\t\t\t\t// And then re-allow at the end of the click\n\t\t\t\t\t\t$(this).trigger('blur').css('outline', '');\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}\n\t},\n\n\n\t/**\n\t * Get the details to pass to a renderer for a row\n\t * @param  {int} rowIdx Row index\n\t * @private\n\t */\n\t_detailsObj: function ( rowIdx )\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map( this.s.columns, function( col, i ) {\n\t\t\t// Never and control columns should not be passed to the renderer\n\t\t\tif ( col.never || col.control ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar dtCol = dt.settings()[0].aoColumns[ i ];\n\n\t\t\treturn {\n\t\t\t\tclassName:   dtCol.sClass,\n\t\t\t\tcolumnIndex: i,\n\t\t\t\tdata:        dt.cell( rowIdx, i ).render( that.c.orthogonal ),\n\t\t\t\thidden:      dt.column( i ).visible() && !that.s.current[ i ],\n\t\t\t\trowIndex:    rowIdx,\n\t\t\t\ttitle:       dtCol.sTitle !== null ?\n\t\t\t\t\tdtCol.sTitle :\n\t\t\t\t\t$(dt.column(i).header()).text()\n\t\t\t};\n\t\t} );\n\t},\n\n\n\t/**\n\t * Find a breakpoint object from a name\n\t *\n\t * @param  {string} name Breakpoint name to find\n\t * @return {object}      Breakpoint description object\n\t * @private\n\t */\n\t_find: function ( name )\n\t{\n\t\tvar breakpoints = this.c.breakpoints;\n\n\t\tfor ( var i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\tif ( breakpoints[i].name === name ) {\n\t\t\t\treturn breakpoints[i];\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Re-create the contents of the child rows as the display has changed in\n\t * some way.\n\t *\n\t * @private\n\t */\n\t_redrawChildren: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\tdt.rows( {page: 'current'} ).iterator( 'row', function ( settings, idx ) {\n\t\t\tvar row = dt.row( idx );\n\n\t\t\tthat._detailsDisplay( dt.row( idx ), true );\n\t\t} );\n\t},\n\n\n\t/**\n\t * Alter the table display for a resized viewport. This involves first\n\t * determining what breakpoint the window currently is in, getting the\n\t * column visibilities to apply and then setting them.\n\t *\n\t * @param  {boolean} forceRedraw Force a redraw\n\t * @private\n\t */\n\t_resize: function (forceRedraw)\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar width = $(window).innerWidth();\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar breakpoint = breakpoints[0].name;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\t\tvar oldVis = this.s.current.slice();\n\n\t\t// Determine what breakpoint we are currently at\n\t\tfor ( i=breakpoints.length-1 ; i>=0 ; i-- ) {\n\t\t\tif ( width <= breakpoints[i].width ) {\n\t\t\t\tbreakpoint = breakpoints[i].name;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Show the columns for that break point\n\t\tvar columnsVis = this._columnsVisiblity( breakpoint );\n\t\tthis.s.current = columnsVis;\n\n\t\t// Set the class before the column visibility is changed so event\n\t\t// listeners know what the state is. Need to determine if there are\n\t\t// any columns that are not visible but can be shown\n\t\tvar collapsedClass = false;\n\t\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tif ( columnsVis[i] === false && ! columns[i].never && ! columns[i].control && ! dt.column(i).visible() === false ) {\n\t\t\t\tcollapsedClass = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$( dt.table().node() ).toggleClass( 'collapsed', collapsedClass );\n\n\t\tvar changed = false;\n\t\tvar visible = 0;\n\n\t\tdt.columns().eq(0).each( function ( colIdx, i ) {\n\t\t\tif ( columnsVis[i] === true ) {\n\t\t\t\tvisible++;\n\t\t\t}\n\n\t\t\tif ( forceRedraw || columnsVis[i] !== oldVis[i] ) {\n\t\t\t\tchanged = true;\n\t\t\t\tthat._setColumnVis( colIdx, columnsVis[i] );\n\t\t\t}\n\t\t} );\n\n\t\tif ( changed ) {\n\t\t\tthis._redrawChildren();\n\n\t\t\t// Inform listeners of the change\n\t\t\t$(dt.table().node()).trigger( 'responsive-resize.dt', [dt, this.s.current] );\n\n\t\t\t// If no records, update the \"No records\" display element\n\t\t\tif ( dt.page.info().recordsDisplay === 0 ) {\n\t\t\t\t$('td', dt.table().body()).eq(0).attr('colspan', visible);\n\t\t\t}\n\t\t}\n\n\t\tthat._controlClass();\n\t},\n\n\n\t/**\n\t * Determine the width of each column in the table so the auto column hiding\n\t * has that information to work with. This method is never going to be 100%\n\t * perfect since column widths can change slightly per page, but without\n\t * seriously compromising performance this is quite effective.\n\t *\n\t * @private\n\t */\n\t_resizeAuto: function ()\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\n\t\t// Are we allowed to do auto sizing?\n\t\tif ( ! this.c.auto ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Are there any columns that actually need auto-sizing, or do they all\n\t\t// have classes defined\n\t\tif ( $.inArray( true, $.map( columns, function (c) { return c.auto; } ) ) === -1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Need to restore all children. They will be reinstated by a re-render\n\t\tif ( ! $.isEmptyObject( _childNodeStore ) ) {\n\t\t\t$.each( _childNodeStore, function ( key ) {\n\t\t\t\tvar idx = key.split('-');\n\n\t\t\t\t_childNodesRestore( dt, idx[0]*1, idx[1]*1 );\n\t\t\t} );\n\t\t}\n\n\t\t// Clone the table with the current data in it\n\t\tvar tableWidth   = dt.table().node().offsetWidth;\n\t\tvar columnWidths = dt.columns;\n\t\tvar clonedTable  = dt.table().node().cloneNode( false );\n\t\tvar clonedHeader = $( dt.table().header().cloneNode( false ) ).appendTo( clonedTable );\n\t\tvar clonedBody   = $( dt.table().body() ).clone( false, false ).empty().appendTo( clonedTable ); // use jQuery because of IE8\n\n\t\tclonedTable.style.width = 'auto';\n\n\t\t// Header\n\t\tvar headerCells = dt.columns()\n\t\t\t.header()\n\t\t\t.filter( function (idx) {\n\t\t\t\treturn dt.column(idx).visible();\n\t\t\t} )\n\t\t\t.to$()\n\t\t\t.clone( false )\n\t\t\t.css( 'display', 'table-cell' )\n\t\t\t.css( 'width', 'auto' )\n\t\t\t.css( 'min-width', 0 );\n\n\t\t// Body rows - we don't need to take account of DataTables' column\n\t\t// visibility since we implement our own here (hence the `display` set)\n\t\t$(clonedBody)\n\t\t\t.append( $(dt.rows( { page: 'current' } ).nodes()).clone( false ) )\n\t\t\t.find( 'th, td' ).css( 'display', '' );\n\n\t\t// Footer\n\t\tvar footer = dt.table().footer();\n\t\tif ( footer ) {\n\t\t\tvar clonedFooter = $( footer.cloneNode( false ) ).appendTo( clonedTable );\n\t\t\tvar footerCells = dt.columns()\n\t\t\t\t.footer()\n\t\t\t\t.filter( function (idx) {\n\t\t\t\t\treturn dt.column(idx).visible();\n\t\t\t\t} )\n\t\t\t\t.to$()\n\t\t\t\t.clone( false )\n\t\t\t\t.css( 'display', 'table-cell' );\n\n\t\t\t$('<tr/>')\n\t\t\t\t.append( footerCells )\n\t\t\t\t.appendTo( clonedFooter );\n\t\t}\n\n\t\t$('<tr/>')\n\t\t\t.append( headerCells )\n\t\t\t.appendTo( clonedHeader );\n\n\t\t// In the inline case extra padding is applied to the first column to\n\t\t// give space for the show / hide icon. We need to use this in the\n\t\t// calculation\n\t\tif ( this.c.details.type === 'inline' ) {\n\t\t\t$(clonedTable).addClass( 'dtr-inline collapsed' );\n\t\t}\n\t\t\n\t\t// It is unsafe to insert elements with the same name into the DOM\n\t\t// multiple times. For example, cloning and inserting a checked radio\n\t\t// clears the chcecked state of the original radio.\n\t\t$( clonedTable ).find( '[name]' ).removeAttr( 'name' );\n\n\t\t// A position absolute table would take the table out of the flow of\n\t\t// our container element, bypassing the height and width (Scroller)\n\t\t$( clonedTable ).css( 'position', 'relative' )\n\t\t\n\t\tvar inserted = $('<div/>')\n\t\t\t.css( {\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1,\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tclear: 'both'\n\t\t\t} )\n\t\t\t.append( clonedTable );\n\n\t\tinserted.insertBefore( dt.table().node() );\n\n\t\t// The cloned header now contains the smallest that each column can be\n\t\theaderCells.each( function (i) {\n\t\t\tvar idx = dt.column.index( 'fromVisible', i );\n\t\t\tcolumns[ idx ].minWidth =  this.offsetWidth || 0;\n\t\t} );\n\n\t\tinserted.remove();\n\t},\n\n\t/**\n\t * Get the state of the current hidden columns - controlled by Responsive only\n\t */\n\t_responsiveOnlyHidden: function ()\n\t{\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map( this.s.current, function (v, i) {\n\t\t\t// If the column is hidden by DataTables then it can't be hidden by\n\t\t\t// Responsive!\n\t\t\tif ( dt.column(i).visible() === false ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn v;\n\t\t} );\n\t},\n\n\t/**\n\t * Set a column's visibility.\n\t *\n\t * We don't use DataTables' column visibility controls in order to ensure\n\t * that column visibility can Responsive can no-exist. Since only IE8+ is\n\t * supported (and all evergreen browsers of course) the control of the\n\t * display attribute works well.\n\t *\n\t * @param {integer} col      Column index\n\t * @param {boolean} showHide Show or hide (true or false)\n\t * @private\n\t */\n\t_setColumnVis: function ( col, showHide )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar display = showHide ? '' : 'none'; // empty string will remove the attr\n\n\t\t$( dt.column( col ).header() ).css( 'display', display );\n\t\t$( dt.column( col ).footer() ).css( 'display', display );\n\t\tdt.column( col ).nodes().to$().css( 'display', display );\n\n\t\t// If the are child nodes stored, we might need to reinsert them\n\t\tif ( ! $.isEmptyObject( _childNodeStore ) ) {\n\t\t\tdt.cells( null, col ).indexes().each( function (idx) {\n\t\t\t\t_childNodesRestore( dt, idx.row, idx.column );\n\t\t\t} );\n\t\t}\n\t},\n\n\n\t/**\n\t * Update the cell tab indexes for keyboard accessibility. This is called on\n\t * every table draw - that is potentially inefficient, but also the least\n\t * complex option given that column visibility can change on the fly. Its a\n\t * shame user-focus was removed from CSS 3 UI, as it would have solved this\n\t * issue with a single CSS statement.\n\t *\n\t * @private\n\t */\n\t_tabIndexes: function ()\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar cells = dt.cells( { page: 'current' } ).nodes().to$();\n\t\tvar ctx = dt.settings()[0];\n\t\tvar target = this.c.details.target;\n\n\t\tcells.filter( '[data-dtr-keyboard]' ).removeData( '[data-dtr-keyboard]' );\n\n\t\tif ( typeof target === 'number' ) {\n\t\t\tdt.cells( null, target, { page: 'current' } ).nodes().to$()\n\t\t\t\t.attr( 'tabIndex', ctx.iTabIndex )\n\t\t\t\t.data( 'dtr-keyboard', 1 );\n\t\t}\n\t\telse {\n\t\t\t// This is a bit of a hack - we need to limit the selected nodes to just\n\t\t\t// those of this table\n\t\t\tif ( target === 'td:first-child, th:first-child' ) {\n\t\t\t\ttarget = '>td:first-child, >th:first-child';\n\t\t\t}\n\n\t\t\t$( target, dt.rows( { page: 'current' } ).nodes() )\n\t\t\t\t.attr( 'tabIndex', ctx.iTabIndex )\n\t\t\t\t.data( 'dtr-keyboard', 1 );\n\t\t}\n\t}\n} );\n\n\n/**\n * List of default breakpoints. Each item in the array is an object with two\n * properties:\n *\n * * `name` - the breakpoint name.\n * * `width` - the breakpoint width\n *\n * @name Responsive.breakpoints\n * @static\n */\nResponsive.breakpoints = [\n\t{ name: 'desktop',  width: Infinity },\n\t{ name: 'tablet-l', width: 1024 },\n\t{ name: 'tablet-p', width: 768 },\n\t{ name: 'mobile-l', width: 480 },\n\t{ name: 'mobile-p', width: 320 }\n];\n\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.display = {\n\tchildRow: function ( row, update, render ) {\n\t\tif ( update ) {\n\t\t\tif ( $(row.node()).hasClass('parent') ) {\n\t\t\t\trow.child( render(), 'child' ).show();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif ( ! row.child.isShown()  ) {\n\t\t\t\trow.child( render(), 'child' ).show();\n\t\t\t\t$( row.node() ).addClass( 'parent' );\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow.child( false );\n\t\t\t\t$( row.node() ).removeClass( 'parent' );\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\n\tchildRowImmediate: function ( row, update, render ) {\n\t\tif ( (! update && row.child.isShown()) || ! row.responsive.hasHidden() ) {\n\t\t\t// User interaction and the row is show, or nothing to show\n\t\t\trow.child( false );\n\t\t\t$( row.node() ).removeClass( 'parent' );\n\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\t// Display\n\t\t\trow.child( render(), 'child' ).show();\n\t\t\t$( row.node() ).addClass( 'parent' );\n\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t// This is a wrapper so the modal options for Bootstrap and jQuery UI can\n\t// have options passed into them. This specific one doesn't need to be a\n\t// function but it is for consistency in the `modal` name\n\tmodal: function ( options ) {\n\t\treturn function ( row, update, render ) {\n\t\t\tif ( ! update ) {\n\t\t\t\t// Show a modal\n\t\t\t\tvar close = function () {\n\t\t\t\t\tmodal.remove(); // will tidy events for us\n\t\t\t\t\t$(document).off( 'keypress.dtr' );\n\t\t\t\t};\n\n\t\t\t\tvar modal = $('<div class=\"dtr-modal\"/>')\n\t\t\t\t\t.append( $('<div class=\"dtr-modal-display\"/>')\n\t\t\t\t\t\t.append( $('<div class=\"dtr-modal-content\"/>')\n\t\t\t\t\t\t\t.append( render() )\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.append( $('<div class=\"dtr-modal-close\">&times;</div>' )\n\t\t\t\t\t\t\t.click( function () {\n\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.append( $('<div class=\"dtr-modal-background\"/>')\n\t\t\t\t\t\t.click( function () {\n\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo( 'body' );\n\n\t\t\t\t$(document).on( 'keyup.dtr', function (e) {\n\t\t\t\t\tif ( e.keyCode === 27 ) {\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tclose();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$('div.dtr-modal-content')\n\t\t\t\t\t.empty()\n\t\t\t\t\t.append( render() );\n\t\t\t}\n\n\t\t\tif ( options && options.header ) {\n\t\t\t\t$('div.dtr-modal-content').prepend(\n\t\t\t\t\t'<h2>'+options.header( row )+'</h2>'\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t}\n};\n\n\nvar _childNodeStore = {};\n\nfunction _childNodes( dt, row, col ) {\n\tvar name = row+'-'+col;\n\n\tif ( _childNodeStore[ name ] ) {\n\t\treturn _childNodeStore[ name ];\n\t}\n\n\t// https://jsperf.com/childnodes-array-slice-vs-loop\n\tvar nodes = [];\n\tvar children = dt.cell( row, col ).node().childNodes;\n\tfor ( var i=0, ien=children.length ; i<ien ; i++ ) {\n\t\tnodes.push( children[i] );\n\t}\n\n\t_childNodeStore[ name ] = nodes;\n\n\treturn nodes;\n}\n\nfunction _childNodesRestore( dt, row, col ) {\n\tvar name = row+'-'+col;\n\n\tif ( ! _childNodeStore[ name ] ) {\n\t\treturn;\n\t}\n\n\tvar node = dt.cell( row, col ).node();\n\tvar store = _childNodeStore[ name ];\n\tvar parent = store[0].parentNode;\n\tvar parentChildren = parent.childNodes;\n\tvar a = [];\n\n\tfor ( var i=0, ien=parentChildren.length ; i<ien ; i++ ) {\n\t\ta.push( parentChildren[i] );\n\t}\n\n\tfor ( var j=0, jen=a.length ; j<jen ; j++ ) {\n\t\tnode.appendChild( a[j] );\n\t}\n\n\t_childNodeStore[ name ] = undefined;\n}\n\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.renderer = {\n\tlistHiddenNodes: function () {\n\t\treturn function ( api, rowIdx, columns ) {\n\t\t\tvar ul = $('<ul data-dtr-index=\"'+rowIdx+'\" class=\"dtr-details\"/>');\n\t\t\tvar found = false;\n\n\t\t\tvar data = $.each( columns, function ( i, col ) {\n\t\t\t\tif ( col.hidden ) {\n\t\t\t\t\tvar klass = col.className ?\n\t\t\t\t\t\t'class=\"'+ col.className +'\"' :\n\t\t\t\t\t\t'';\n\t\n\t\t\t\t\t$(\n\t\t\t\t\t\t'<li '+klass+' data-dtr-index=\"'+col.columnIndex+'\" data-dt-row=\"'+col.rowIndex+'\" data-dt-column=\"'+col.columnIndex+'\">'+\n\t\t\t\t\t\t\t'<span class=\"dtr-title\">'+\n\t\t\t\t\t\t\t\tcol.title+\n\t\t\t\t\t\t\t'</span> '+\n\t\t\t\t\t\t'</li>'\n\t\t\t\t\t)\n\t\t\t\t\t\t.append( $('<span class=\"dtr-data\"/>').append( _childNodes( api, col.rowIndex, col.columnIndex ) ) )// api.cell( col.rowIndex, col.columnIndex ).node().childNodes ) )\n\t\t\t\t\t\t.appendTo( ul );\n\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn found ?\n\t\t\t\tul :\n\t\t\t\tfalse;\n\t\t};\n\t},\n\n\tlistHidden: function () {\n\t\treturn function ( api, rowIdx, columns ) {\n\t\t\tvar data = $.map( columns, function ( col ) {\n\t\t\t\tvar klass = col.className ?\n\t\t\t\t\t'class=\"'+ col.className +'\"' :\n\t\t\t\t\t'';\n\n\t\t\t\treturn col.hidden ?\n\t\t\t\t\t'<li '+klass+' data-dtr-index=\"'+col.columnIndex+'\" data-dt-row=\"'+col.rowIndex+'\" data-dt-column=\"'+col.columnIndex+'\">'+\n\t\t\t\t\t\t'<span class=\"dtr-title\">'+\n\t\t\t\t\t\t\tcol.title+\n\t\t\t\t\t\t'</span> '+\n\t\t\t\t\t\t'<span class=\"dtr-data\">'+\n\t\t\t\t\t\t\tcol.data+\n\t\t\t\t\t\t'</span>'+\n\t\t\t\t\t'</li>' :\n\t\t\t\t\t'';\n\t\t\t} ).join('');\n\n\t\t\treturn data ?\n\t\t\t\t$('<ul data-dtr-index=\"'+rowIdx+'\" class=\"dtr-details\"/>').append( data ) :\n\t\t\t\tfalse;\n\t\t}\n\t},\n\n\ttableAll: function ( options ) {\n\t\toptions = $.extend( {\n\t\t\ttableClass: ''\n\t\t}, options );\n\n\t\treturn function ( api, rowIdx, columns ) {\n\t\t\tvar data = $.map( columns, function ( col ) {\n\t\t\t\tvar klass = col.className ?\n\t\t\t\t\t'class=\"'+ col.className +'\"' :\n\t\t\t\t\t'';\n\n\t\t\t\treturn '<tr '+klass+' data-dt-row=\"'+col.rowIndex+'\" data-dt-column=\"'+col.columnIndex+'\">'+\n\t\t\t\t\t\t'<td>'+col.title+':'+'</td> '+\n\t\t\t\t\t\t'<td>'+col.data+'</td>'+\n\t\t\t\t\t'</tr>';\n\t\t\t} ).join('');\n\n\t\t\treturn $('<table class=\"'+options.tableClass+' dtr-details\" width=\"100%\"/>').append( data );\n\t\t}\n\t}\n};\n\n/**\n * Responsive default settings for initialisation\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.defaults = {\n\t/**\n\t * List of breakpoints for the instance. Note that this means that each\n\t * instance can have its own breakpoints. Additionally, the breakpoints\n\t * cannot be changed once an instance has been creased.\n\t *\n\t * @type {Array}\n\t * @default Takes the value of `Responsive.breakpoints`\n\t */\n\tbreakpoints: Responsive.breakpoints,\n\n\t/**\n\t * Enable / disable auto hiding calculations. It can help to increase\n\t * performance slightly if you disable this option, but all columns would\n\t * need to have breakpoint classes assigned to them\n\t *\n\t * @type {Boolean}\n\t * @default  `true`\n\t */\n\tauto: true,\n\n\t/**\n\t * Details control. If given as a string value, the `type` property of the\n\t * default object is set to that value, and the defaults used for the rest\n\t * of the object - this is for ease of implementation.\n\t *\n\t * The object consists of the following properties:\n\t *\n\t * * `display` - A function that is used to show and hide the hidden details\n\t * * `renderer` - function that is called for display of the child row data.\n\t *   The default function will show the data from the hidden columns\n\t * * `target` - Used as the selector for what objects to attach the child\n\t *   open / close to\n\t * * `type` - `false` to disable the details display, `inline` or `column`\n\t *   for the two control types\n\t *\n\t * @type {Object|string}\n\t */\n\tdetails: {\n\t\tdisplay: Responsive.display.childRow,\n\n\t\trenderer: Responsive.renderer.listHidden(),\n\n\t\ttarget: 0,\n\n\t\ttype: 'inline'\n\t},\n\n\t/**\n\t * Orthogonal data request option. This is used to define the data type\n\t * requested when Responsive gets the data to show in the child row.\n\t *\n\t * @type {String}\n\t */\n\torthogonal: 'display'\n};\n\n\n/*\n * API\n */\nvar Api = $.fn.dataTable.Api;\n\n// Doesn't do anything - work around for a bug in DT... Not documented\nApi.register( 'responsive()', function () {\n\treturn this;\n} );\n\nApi.register( 'responsive.index()', function ( li ) {\n\tli = $(li);\n\n\treturn {\n\t\tcolumn: li.data('dtr-index'),\n\t\trow:    li.parent().data('dtr-index')\n\t};\n} );\n\nApi.register( 'responsive.rebuild()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._responsive ) {\n\t\t\tctx._responsive._classLogic();\n\t\t}\n\t} );\n} );\n\nApi.register( 'responsive.recalc()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._responsive ) {\n\t\t\tctx._responsive._resizeAuto();\n\t\t\tctx._responsive._resize();\n\t\t}\n\t} );\n} );\n\nApi.register( 'responsive.hasHidden()', function () {\n\tvar ctx = this.context[0];\n\n\treturn ctx._responsive ?\n\t\t$.inArray( false, ctx._responsive._responsiveOnlyHidden() ) !== -1 :\n\t\tfalse;\n} );\n\nApi.registerPlural( 'columns().responsiveHidden()', 'column().responsiveHidden()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings._responsive ?\n\t\t\tsettings._responsive._responsiveOnlyHidden()[ column ] :\n\t\t\tfalse;\n\t}, 1 );\n} );\n\n\n/**\n * Version information\n *\n * @name Responsive.version\n * @static\n */\nResponsive.version = '2.2.7';\n\n\n$.fn.dataTable.Responsive = Responsive;\n$.fn.DataTable.Responsive = Responsive;\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on( 'preInit.dt.dtr', function (e, settings, json) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tif ( $(settings.nTable).hasClass( 'responsive' ) ||\n\t\t $(settings.nTable).hasClass( 'dt-responsive' ) ||\n\t\t settings.oInit.responsive ||\n\t\t DataTable.defaults.responsive\n\t) {\n\t\tvar init = settings.oInit.responsive;\n\n\t\tif ( init !== false ) {\n\t\t\tnew Responsive( settings, $.isPlainObject( init ) ? init : {}  );\n\t\t}\n\t}\n} );\n\n\nreturn Responsive;\n}));\n"],"sourceRoot":""}