{"version":3,"sources":["Demo/UIElements/Basic/Badges.js","App/components/MainCard.js","App/components/UcFirst.js"],"names":["Badges","buttonVariants","buttonBadges","map","variant","idx","key","text","className","contextualBadges","pillBadges","pill","linkBadges","href","DEMO","BLANK_LINK","title","Component","MainCard","state","isOption","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","this","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","Header","Title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","children","windowSize","UcFirst","string","charAt","toUpperCase","slice","React"],"mappings":"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","file":"static/js/144.cf02236d.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Badge,\r\n    Button\r\n} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Card from \"../../../App/components/MainCard\";\r\nimport UcFirst from \"../../../App/components/UcFirst\";\r\nimport DEMO from \"../../../store/constant\";\r\n\r\nclass Badges extends Component {\r\n    render() {\r\n        const buttonVariants = [\r\n            'primary',\r\n            'secondary',\r\n            'success',\r\n            'danger',\r\n            'warning',\r\n            'info',\r\n            'light',\r\n            'dark',\r\n        ];\r\n\r\n        const buttonBadges = buttonVariants.map((variant, idx) => (\r\n            <Button key={idx} variant={variant}>\r\n                <UcFirst text={variant} />\r\n                <Badge variant=\"light\" className=\"ml-1\">4</Badge>\r\n            </Button>\r\n        ));\r\n\r\n        const contextualBadges = buttonVariants.map((variant, idx) => (\r\n                <Badge key={idx} variant={variant} className=\"mr-1\"><UcFirst text={variant} /></Badge>\r\n        ));\r\n\r\n        const pillBadges = buttonVariants.map((variant, idx) => (\r\n                <Badge key={idx} pill variant={variant} className=\"mr-1\"><UcFirst text={variant} /></Badge>\r\n        ));\r\n\r\n        const linkBadges = buttonVariants.map((variant, idx) => (\r\n            <a key={idx} href={DEMO.BLANK_LINK}><Badge variant={variant} className=\"mr-1\"><UcFirst text={variant} /></Badge></a>\r\n        ));\r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col className='btn-page'>\r\n                        <Card title=\"Basic Badges\">\r\n                            <h1>\r\n                                Example heading <Badge variant=\"secondary\">New</Badge>\r\n                            </h1>\r\n                            <h2>\r\n                                Example heading <Badge variant=\"secondary\">New</Badge>\r\n                            </h2>\r\n                            <h3>\r\n                                Example heading <Badge variant=\"secondary\">New</Badge>\r\n                            </h3>\r\n                            <h4>\r\n                                Example heading <Badge variant=\"secondary\">New</Badge>\r\n                            </h4>\r\n                            <h5>\r\n                                Example heading <Badge variant=\"secondary\">New</Badge>\r\n                            </h5>\r\n                            <h6>\r\n                                Example heading <Badge variant=\"secondary\">New</Badge>\r\n                            </h6>\r\n                        </Card>\r\n                        <Card title=\"Button Badges\">\r\n                            {buttonBadges}\r\n                        </Card>\r\n                        <Card title=\"Contextual Variations\">\r\n                            {contextualBadges}\r\n                        </Card>\r\n                        <Card title=\"Pill Badges\">\r\n                            {pillBadges}\r\n                        </Card>\r\n                        <Card title=\"Links\">\r\n                            {linkBadges}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Badges;","import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: false,\r\n        cardRemove: false\r\n    };\r\n\r\n    cardReloadHandler = () => {\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [];\r\n\r\n        if (this.state.isOption) {\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-horizontal\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n","import React from 'react';\r\n\r\nclass UcFirst extends React.Component {\r\n    render() {\r\n        const string = this.props.text;\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n}\r\n\r\nexport default UcFirst;"],"sourceRoot":""}