{"version":3,"sources":["config.js","App/layout/Loader/index.js","hoc/_Aux/index.js","store/actions.js","App/layout/ScrollToTop/index.js","route.js","App/index.js","serviceWorker.js","store/reducer.js","index.js"],"names":["defaultPath","basename","layout","subLayout","collapseMenu","layoutType","headerBackColor","rtlLayout","navFixedLayout","headerFixedLayout","boxLayout","loader","className","Aux","props","children","COLLAPSE_MENU","COLLAPSE_TOGGLE","FULL_SCREEN","FULL_SCREEN_EXIT","CHANGE_LAYOUT","CHANGE_SUB_LAYOUT","LAYOUT_TYPE","RESET","NAV_BACK_COLOR","HEADER_BACK_COLOR","RTL_LAYOUT","NAV_FIXED_LAYOUT","HEADER_FIXED_LAYOUT","BOX_LAYOUT","NAV_CONTENT_LEAVE","NAV_COLLAPSE_LEAVE","ScrollToTop","prevProps","this","location","window","scrollTo","React","Component","SignUp1","lazy","SignUp2","Signin1","Signin2","ResetPassword1","ResetPassword2","ChangePassword","ProfileSettings","TabsAuth","Error","OfflineUI","route","path","exact","name","component","AdminLayout","Loadable","loading","Loader","App","menu","routes","map","index","key","render","fallback","Boolean","hostname","match","initialState","isOpen","isTrigger","config","isFullScreen","reducer","state","action","trigger","open","type","actionTypes","triggerIndex","indexOf","id","filter","item","store","createStore","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8FAAe,KACXA,YAAa,sBACbC,SAAU,sBACVC,OAAQ,WACRC,UAAW,GACXC,cAAc,EACdC,WAAY,aACZC,gBAAiB,cACjBC,WAAW,EACXC,gBAAgB,EAChBC,mBAAmB,EACnBC,WAAW,I,gCCXf,oBAYeC,IAVA,WACX,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,oB,gCCJhBC,IAFH,SAACC,GAAD,OAAWA,EAAMC,W,oDCA7B,giBAAO,IAAMC,EAAgB,gBAChBC,EAAkB,kBAClBC,EAAc,cACdC,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAoB,oBACpBC,EAAc,cACdC,EAAQ,QACRC,EAAiB,iBAEjBC,EAAoB,oBACpBC,EAAa,aACbC,EAAmB,mBACnBC,EAAsB,sBACtBC,EAAa,aACbC,EAAoB,oBACpBC,EAAqB,sB,wNCDnBC,E,wKAXX,SAAmBC,GACXC,KAAKpB,MAAMqB,WAAaF,EAAUE,UAClCC,OAAOC,SAAS,EAAG,K,oBAI3B,WACI,OAAOH,KAAKpB,MAAMC,a,GARAuB,IAAMC,WCD1BC,EAAUF,IAAMG,MAAK,kBAAM,0DAC3BC,EAAUJ,IAAMG,MAAK,kBAAM,0DAC3BE,EAAUL,IAAMG,MAAK,kBAAM,0DAC3BG,EAAUN,IAAMG,MAAK,kBAAM,0DAC3BI,EAAiBP,IAAMG,MAAK,kBAAM,0DAClCK,EAAiBR,IAAMG,MAAK,kBAAM,0DAClCM,EAAiBT,IAAMG,MAAK,kBAAM,0DAClCO,EAAkBV,IAAMG,MAAK,kBAAM,0DACnCQ,EAAWX,IAAMG,MAAK,kBAAM,0DAC5BS,EAAQZ,IAAMG,MAAK,kBAAM,0DACzBU,EAAYb,IAAMG,MAAK,kBAAM,0DAkBpBW,EAfD,CACV,CAAEC,KAAM,iBAAkBC,OAAO,EAAMC,KAAM,WAAYC,UAAWhB,GACpE,CAAEa,KAAM,iBAAkBC,OAAO,EAAMC,KAAM,WAAYC,UAAWd,GACpE,CAAEW,KAAM,iBAAkBC,OAAO,EAAMC,KAAM,WAAYC,UAAWb,GACpE,CAAEU,KAAM,iBAAkBC,OAAO,EAAMC,KAAM,WAAYC,UAAWZ,GACpE,CAAES,KAAM,yBAA0BC,OAAO,EAAMC,KAAM,mBAAoBC,UAAWX,GACpF,CAAEQ,KAAM,yBAA0BC,OAAO,EAAMC,KAAM,mBAAoBC,UAAWV,GACpF,CAAEO,KAAM,wBAAyBC,OAAO,EAAMC,KAAM,kBAAmBC,UAAWT,GAClF,CAAEM,KAAM,yBAA0BC,OAAO,EAAMC,KAAM,mBAAoBC,UAAWR,GACpF,CAAEK,KAAM,kBAAmBC,OAAO,EAAMC,KAAM,sBAAuBC,UAAWP,GAChF,CAAEI,KAAM,qBAAsBC,OAAO,EAAMC,KAAM,QAASC,UAAWN,GACrE,CAAEG,KAAM,2BAA4BC,OAAO,EAAMC,KAAM,cAAeC,UAbvDlB,IAAMG,MAAK,kBAAM,2DAchC,CAAEY,KAAM,0BAA2BC,OAAO,EAAMC,KAAM,aAAcC,UAAWL,IChB7EM,EAAcC,IAAS,CACzB/C,OAAQ,kBAAM,gEACdgD,QAASC,MAiCEC,E,4JA7BX,WACI,IAAMC,EAAOC,EAAOC,KAAI,SAACZ,EAAOa,GAC9B,OAAQb,EAAMI,UACV,kBAAC,IAAD,CACIU,IAAKD,EACLZ,KAAMD,EAAMC,KACZC,MAAOF,EAAME,MACbC,KAAMH,EAAMG,KACZY,OAAQ,SAAArD,GAAK,OACT,kBAACsC,EAAMI,UAAc1C,MAE5B,QAGP,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,KACI,kBAAC,WAAD,CAAUsD,SAAU,kBAACR,EAAA,EAAD,OAChB,kBAAC,IAAD,KACKE,EACD,kBAAC,IAAD,CAAOT,KAAK,IAAIG,UAAWC,Y,GArBrClB,aCJE8B,QACW,cAA7BjC,OAAOD,SAASmC,UAEe,UAA7BlC,OAAOD,SAASmC,UAEhBlC,OAAOD,SAASmC,SAASC,MACvB,2D,kCCfAC,EAAY,yBACdC,OAAQ,GACRC,UAAW,IACRC,KAHW,IAIdC,cAAc,IA0IHC,EAvIC,WAAmC,IAAlCC,EAAiC,uDAAzBN,EAAcO,EAAW,uCAC1CC,EAAU,GACVC,EAAO,GAEX,OAAQF,EAAOG,MACX,KAAKC,IACD,OAAO,2BACAL,GADP,IAEI1E,cAAe0E,EAAM1E,eAE7B,KAAK+E,IACD,GAAyB,QAArBJ,EAAOjB,KAAKoB,KAAgB,CAC5BD,EAAOH,EAAML,OAGb,IAAMW,GAFNJ,EAAUF,EAAMJ,WAEaW,QAAQN,EAAOjB,KAAKwB,IAC7CF,GAAgB,IAChBH,EAAOA,EAAKM,QAAO,SAAAC,GAAI,OAAIA,IAAST,EAAOjB,KAAKwB,MAChDN,EAAUA,EAAQO,QAAO,SAAAC,GAAI,OAAIA,IAAST,EAAOjB,KAAKwB,QAGpC,IAAlBF,IACAH,EAAI,sBAAOA,GAAP,CAAaF,EAAOjB,KAAKwB,KAC7BN,EAAO,sBAAOA,GAAP,CAAgBD,EAAOjB,KAAKwB,UAEpC,CACHL,EAAOH,EAAML,OACb,IAAMW,EAAgBN,EAAMJ,UAAWW,QAAQN,EAAOjB,KAAKwB,IAC3DN,GAA6B,IAAlBI,EAAuB,CAACL,EAAOjB,KAAKwB,IAAM,GACrDL,GAA0B,IAAlBG,EAAuB,CAACL,EAAOjB,KAAKwB,IAAM,GAGtD,OAAO,2BACAR,GADP,IAEIL,OAAQQ,EACRP,UAAWM,IAEnB,KAAKG,IACD,OAAO,2BACAL,GADP,IAEIL,OAAQQ,EACRP,UAAWM,IAEnB,KAAKG,IACD,GAAyB,QAArBJ,EAAOjB,KAAKoB,KAAgB,CAC5BD,EAAOH,EAAML,OAGb,IAAMW,GAFNJ,EAAUF,EAAMJ,WAEaW,QAAQN,EAAOjB,KAAKwB,IAKjD,OAJIF,GAAgB,IAChBH,EAAOA,EAAKM,QAAO,SAAAC,GAAI,OAAIA,IAAST,EAAOjB,KAAKwB,MAChDN,EAAUA,EAAQO,QAAO,SAAAC,GAAI,OAAIA,IAAST,EAAOjB,KAAKwB,OAEnD,2BACAR,GADP,IAEIL,OAAQQ,EACRP,UAAWM,IAGnB,OAAO,eAAIF,GACf,KAAKK,IACD,OAAO,2BACAL,GADP,IAEIF,cAAeE,EAAMF,eAE7B,KAAKO,IACD,OAAO,2BACAL,GADP,IAEIF,cAAc,IAEtB,KAAKO,IACD,OAAO,2BACAL,GADP,IAEI5E,OAAQ6E,EAAO7E,SAEvB,KAAKiF,IACD,OAAO,2BACAL,GADP,IAEI3E,UAAW4E,EAAO5E,YAE1B,KAAKgF,IACD,OAAO,2BACAL,GADP,IAEIzE,WAAY0E,EAAO1E,WACnBC,gBAAiBkE,EAAalE,kBAEtC,KAAK6E,IACD,OAAO,2BACAL,GADP,IAEIzE,WAAkC,eAArByE,EAAMzE,WAA+B,YAAcyE,EAAMzE,aAE9E,KAAK8E,IACD,OAAO,2BACAL,GADP,IAEIxE,gBAAiByE,EAAOzE,kBAEhC,KAAK6E,IACD,OAAO,2BACAL,GADP,IAEIvE,WAAYuE,EAAMvE,YAE1B,KAAK4E,IACD,OAAO,2BACAL,GADP,IAEItE,gBAAiBsE,EAAMtE,iBAE/B,KAAK2E,IACD,OAAO,2BACAL,GADP,IAEIrE,mBAAoBqE,EAAMrE,kBAC1BH,gBAAmBwE,EAAMrE,mBAAsD,mBAAjC+D,EAAalE,gBAAwDwE,EAAMxE,gBAAtB,gBAE3G,KAAK6E,IACD,OAAO,2BACAL,GADP,IAEIpE,WAAYoE,EAAMpE,YAE1B,KAAKyE,IACD,OAAO,2BACAL,GADP,IAEI5E,OAAQsE,EAAatE,OACrBC,UAAWqE,EAAarE,UACxBC,aAAcoE,EAAapE,aAC3BC,WAAYmE,EAAanE,WACzBC,gBAAiBkE,EAAalE,gBAC9BC,UAAWiE,EAAajE,UACxBC,eAAgBgE,EAAahE,eAC7BC,kBAAmB+D,EAAa/D,kBAChCC,UAAW8D,EAAa9D,YAEhC,QACI,OAAOoE,IChIbW,G,MAAQC,YAAYb,IAEpBc,EACF,kBAAC,IAAD,CAAUF,MAAOA,GACb,kBAAC,IAAD,CAAexF,SAAU0E,IAAO1E,UAC5B,kBAAC,EAAD,QAKZ2F,IAASzB,OAAOwB,EAAKE,SAASC,eAAe,SF0GvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1a404d81.chunk.js","sourcesContent":["export default {\r\n    defaultPath: '/dashboard/HomeSoal',\r\n    basename: '/appbimbel-frontend', // only at build time to set, like ///able-pro/react/default\r\n    layout: 'vertical', // vertical, horizontal\r\n    subLayout: '', // horizontal-2\r\n    collapseMenu: false, // mini-menu\r\n    layoutType: 'menu-light', // menu-dark, menu-light, dark\r\n    headerBackColor: 'header-blue', // background-blue, background-red, background-purple, background-info, background-green, background-dark, background-grd-blue, background-grd-red, background-grd-purple, background-grd-info, background-grd-green, background-grd-dark, background-img-1, background-img-2, background-img-3, background-img-4, background-img-5, background-img-6\r\n    rtlLayout: false,\r\n    navFixedLayout: true,\r\n    headerFixedLayout: false,\r\n    boxLayout: false\r\n};\r\n","import React from 'react';\r\n\r\nconst loader = () => {\r\n    return (\r\n        <div className=\"loader-bg\">\r\n            <div className=\"loader-track\">\r\n                <div className=\"loader-fill\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default loader;","const Aux = (props) => props.children;\r\n\r\nexport default Aux;","export const COLLAPSE_MENU = 'COLLAPSE_MENU';\r\nexport const COLLAPSE_TOGGLE = 'COLLAPSE_TOGGLE';\r\nexport const FULL_SCREEN = 'FULL_SCREEN';\r\nexport const FULL_SCREEN_EXIT = 'FULL_SCREEN_EXIT';\r\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\r\nexport const CHANGE_SUB_LAYOUT = 'CHANGE_SUB_LAYOUT';\r\nexport const LAYOUT_TYPE = 'LAYOUT_TYPE';\r\nexport const RESET = 'RESET';\r\nexport const NAV_BACK_COLOR = 'NAV_BACK_COLOR';\r\nexport const NAV_BRAND_COLOR = 'NAV_BRAND_COLOR';\r\nexport const HEADER_BACK_COLOR = 'HEADER_BACK_COLOR';\r\nexport const RTL_LAYOUT = 'RTL_LAYOUT';\r\nexport const NAV_FIXED_LAYOUT = 'NAV_FIXED_LAYOUT';\r\nexport const HEADER_FIXED_LAYOUT = 'HEADER_FIXED_LAYOUT';\r\nexport const BOX_LAYOUT = 'BOX_LAYOUT';\r\nexport const NAV_CONTENT_LEAVE = 'NAV_CONTENT_LEAVE';\r\nexport const NAV_COLLAPSE_LEAVE = 'NAV_COLLAPSE_LEAVE';","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            window.scrollTo(0, 0)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ScrollToTop;","import React from 'react';\r\n\r\nconst SignUp1 = React.lazy(() => import('./Demo/Authentication/SignUp/SignUp1'));\r\nconst SignUp2 = React.lazy(() => import('./Demo/Authentication/SignUp/SignUp2'));\r\nconst Signin1 = React.lazy(() => import('./Demo/Authentication/SignIn/SignIn1'));\r\nconst Signin2 = React.lazy(() => import('./Demo/Authentication/SignIn/SignIn2'));\r\nconst ResetPassword1 = React.lazy(() => import('./Demo/Authentication/ResetPassword/ResetPassword1'));\r\nconst ResetPassword2 = React.lazy(() => import('./Demo/Authentication/ResetPassword/ResetPassword2'));\r\nconst ChangePassword = React.lazy(() => import('./Demo/Authentication/ChangePassword'));\r\nconst ProfileSettings = React.lazy(() => import('./Demo/Authentication/ProfileSettings'));\r\nconst TabsAuth = React.lazy(() => import('./Demo/Authentication/TabsAuth'));\r\nconst Error = React.lazy(() => import('./Demo/Maintenance/Error'));\r\nconst OfflineUI = React.lazy(() => import('./Demo/Maintenance/OfflineUI'));\r\nconst ComingSoon = React.lazy(() => import('./Demo/Maintenance/ComingSoon'));\r\n\r\nconst route = [\r\n    { path: '/auth/signup-1', exact: true, name: 'Signup 1', component: SignUp1 },\r\n    { path: '/auth/signup-2', exact: true, name: 'Signup 2', component: SignUp2 },\r\n    { path: '/auth/signin-1', exact: true, name: 'Signin 1', component: Signin1 },\r\n    { path: '/auth/signin-2', exact: true, name: 'Signin 2', component: Signin2 },\r\n    { path: '/auth/reset-password-1', exact: true, name: 'Reset Password 1', component: ResetPassword1 },\r\n    { path: '/auth/reset-password-2', exact: true, name: 'Reset Password 2', component: ResetPassword2 },\r\n    { path: '/auth/change-password', exact: true, name: 'Change Password', component: ChangePassword },\r\n    { path: '/auth/profile-settings', exact: true, name: 'Profile Settings', component: ProfileSettings },\r\n    { path: '/auth/tabs-auth', exact: true, name: 'Tabs Authentication', component: TabsAuth },\r\n    { path: '/maintenance/error', exact: true, name: 'Error', component: Error },\r\n    { path: '/maintenance/coming-soon', exact: true, name: 'Coming Soon', component: ComingSoon },\r\n    { path: '/maintenance/offline-ui', exact: true, name: 'Offline UI', component: OfflineUI },\r\n];\r\n\r\nexport default route;","import React, { Component, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Loadable from 'react-loadable';\n\nimport '../../node_modules/font-awesome/scss/font-awesome.scss';\n\nimport Loader from './layout/Loader'\nimport Aux from \"../hoc/_Aux\";\nimport ScrollToTop from './layout/ScrollToTop';\nimport routes from \"../route\";\n\nconst AdminLayout = Loadable({\n    loader: () => import('./layout/AdminLayout'),\n    loading: Loader\n});\n\nclass App extends Component {\n    render() {\n        const menu = routes.map((route, index) => {\n          return (route.component) ? (\n              <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={props => (\n                      <route.component {...props} />\n                  )} />\n          ) : (null);\n        });\n\n        return (\n            <Aux>\n                <ScrollToTop>\n                    <Suspense fallback={<Loader/>}>\n                        <Switch>\n                            {menu}\n                            <Route path=\"/\" component={AdminLayout} />\n                        </Switch>\n                    </Suspense>\n                </ScrollToTop>\n            </Aux>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actions';\r\nimport config from './../config';\r\n\r\nconst initialState = {\r\n    isOpen: [], //for active default menu\r\n    isTrigger: [], //for active default menu, set blank for horizontal\r\n    ...config,\r\n    isFullScreen: false, // static can't change\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let trigger = [];\r\n    let open = [];\r\n\r\n    switch (action.type) {\r\n        case actionTypes.COLLAPSE_MENU:\r\n            return {\r\n                ...state,\r\n                collapseMenu: !state.collapseMenu\r\n            };\r\n        case actionTypes.COLLAPSE_TOGGLE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter(item => item !== action.menu.id);\r\n                    trigger = trigger.filter(item => item !== action.menu.id);\r\n                }\r\n\r\n                if (triggerIndex === -1) {\r\n                    open = [...open, action.menu.id];\r\n                    trigger = [...trigger, action.menu.id];\r\n                }\r\n            } else {\r\n                open = state.isOpen;\r\n                const triggerIndex = (state.isTrigger).indexOf(action.menu.id);\r\n                trigger = (triggerIndex === -1) ? [action.menu.id] : [];\r\n                open = (triggerIndex === -1) ? [action.menu.id] : [];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger\r\n            };\r\n        case actionTypes.NAV_CONTENT_LEAVE:\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger,\r\n            };\r\n        case actionTypes.NAV_COLLAPSE_LEAVE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter(item => item !== action.menu.id);\r\n                    trigger = trigger.filter(item => item !== action.menu.id);\r\n                }\r\n                return {\r\n                    ...state,\r\n                    isOpen: open,\r\n                    isTrigger: trigger,\r\n                };\r\n            }\r\n            return {...state};\r\n        case actionTypes.FULL_SCREEN :\r\n            return {\r\n                ...state,\r\n                isFullScreen: !state.isFullScreen\r\n            };\r\n        case actionTypes.FULL_SCREEN_EXIT:\r\n            return {\r\n                ...state,\r\n                isFullScreen: false\r\n            };\r\n        case actionTypes.CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layout: action.layout\r\n            };\r\n        case actionTypes.CHANGE_SUB_LAYOUT:\r\n            return {\r\n                ...state,\r\n                subLayout: action.subLayout\r\n            };\r\n        case actionTypes.LAYOUT_TYPE:\r\n            return {\r\n                ...state,\r\n                layoutType: action.layoutType,\r\n                headerBackColor: initialState.headerBackColor\r\n            };\r\n        case actionTypes.NAV_BACK_COLOR:\r\n            return {\r\n                ...state,\r\n                layoutType: (state.layoutType === 'menu-light') ? 'menu-dark' : state.layoutType\r\n            };\r\n        case actionTypes.HEADER_BACK_COLOR:\r\n            return {\r\n                ...state,\r\n                headerBackColor: action.headerBackColor\r\n            };\r\n        case actionTypes.RTL_LAYOUT:\r\n            return {\r\n                ...state,\r\n                rtlLayout: !state.rtlLayout\r\n            };\r\n        case actionTypes.NAV_FIXED_LAYOUT:\r\n            return {\r\n                ...state,\r\n                navFixedLayout: !state.navFixedLayout\r\n            };\r\n        case actionTypes.HEADER_FIXED_LAYOUT:\r\n            return {\r\n                ...state,\r\n                headerFixedLayout: !state.headerFixedLayout,\r\n                headerBackColor: (!state.headerFixedLayout && initialState.headerBackColor === 'header-default') ? 'header-blue' : state.headerBackColor,\r\n            };\r\n        case actionTypes.BOX_LAYOUT:\r\n            return {\r\n                ...state,\r\n                boxLayout: !state.boxLayout\r\n            };\r\n        case actionTypes.RESET:\r\n            return {\r\n                ...state,\r\n                layout: initialState.layout,\r\n                subLayout: initialState.subLayout,\r\n                collapseMenu: initialState.collapseMenu,\r\n                layoutType: initialState.layoutType,\r\n                headerBackColor: initialState.headerBackColor,\r\n                rtlLayout: initialState.rtlLayout,\r\n                navFixedLayout: initialState.navFixedLayout,\r\n                headerFixedLayout: initialState.headerFixedLayout,\r\n                boxLayout: initialState.boxLayout\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport App from './App/index';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer';\nimport config from './config';\n\nimport './assets/scss/style.scss';\n\nconst store = createStore(reducer);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter basename={config.basename}>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}