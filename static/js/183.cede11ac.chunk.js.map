{"version":3,"sources":["Demo/UIElements/Advance/Tour.js","App/components/MainCard.js"],"names":["steps","selector","content","stepsRide","placement","locale","skip","aria-label","target","AdvanceTour","state","isTourOpen","run","handleJoyrideCallback","data","status","STATUS","FINISHED","SKIPPED","includes","setState","className","Header","Title","as","Body","onClick","isOpen","this","onRequestClose","callback","continuous","scrollToFirstStep","showProgress","showSkipButton","styles","options","zIndex","isOption","title","cardClass","Text","React","Component","MainCard","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","alignRight","Toggle","id","Menu","Item","prevState","href","DEMO","BLANK_LINK","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","children","windowSize"],"mappings":"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","file":"static/js/183.cede11ac.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Row, Col, Card, Button} from 'react-bootstrap';\r\nimport Tour from 'reactour';\r\nimport Joyride, { STATUS } from 'react-joyride';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport MainCard from \"../../../App/components/MainCard\";\r\n\r\nconst steps = [\r\n    {\r\n        selector: '.tour-1',\r\n        content: 'Click hear customize basic card layout',\r\n    },\r\n    {\r\n        selector: '.card-option',\r\n        content: 'Click hear open card options',\r\n    },\r\n    {\r\n        selector: '.displayChatbox',\r\n        content: 'Click chat open chat conversation',\r\n    },\r\n    {\r\n        selector: '.mobile-menu',\r\n        content: 'Click to see collapse menu layout',\r\n    },\r\n    {\r\n        selector: '.pcoded-menu-caption',\r\n        content: 'Menu caption',\r\n    }\r\n];\r\n\r\nconst stepsRide = [\r\n    {\r\n        content: <h5>Let's begin our journey!</h5>,\r\n        placement: 'center',\r\n        locale: { skip: <strong aria-label=\"skip\">S-K-I-P</strong> },\r\n        target: 'body',\r\n    },\r\n    {\r\n        target: '.tour-1',\r\n        content: 'Click hear customize basic card layout',\r\n        placement: 'top'\r\n    },\r\n    {\r\n        target: '.card-option',\r\n        content: 'Click hear open card options',\r\n    },\r\n    {\r\n        target: '.displayChatbox',\r\n        content: 'Click chat open chat conversation',\r\n    },\r\n    {\r\n        target: '.mobile-menu',\r\n        content: 'Click to see collapse menu layout',\r\n    },\r\n    {\r\n        target: '.pcoded-menu-caption',\r\n        content: 'Menu caption',\r\n    }\r\n];\r\n\r\nclass AdvanceTour extends React.Component {\r\n    state = {\r\n        isTourOpen: false,\r\n        run: false,\r\n        steps: stepsRide\r\n    };\r\n\r\n    handleJoyrideCallback = data => {\r\n        const { status } = data;\r\n\r\n        if ([STATUS.FINISHED, STATUS.SKIPPED].includes(status)) {\r\n            this.setState({ run: false });\r\n        }\r\n\r\n        /*console.groupCollapsed(type);\r\n        console.log(data);\r\n        console.groupEnd();*/\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Row className='btn-page'>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Tour</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Button onClick={() => this.setState({isTourOpen: true})}>Start Basic Tour</Button>\r\n                                <Button onClick={() => this.setState({run: true})}>Joy Ride</Button>\r\n                                <Tour\r\n                                    steps={steps}\r\n                                    isOpen={this.state.isTourOpen}\r\n                                    onRequestClose={() => this.setState({isTourOpen: false})} />\r\n                                <Joyride\r\n                                    callback={this.handleJoyrideCallback}\r\n                                    run={this.state.run}\r\n                                    continuous\r\n                                    scrollToFirstStep\r\n                                    showProgress\r\n                                    showSkipButton\r\n                                    steps={this.state.steps}\r\n                                    styles={{\r\n                                        options: {\r\n                                            zIndex: 10000,\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <MainCard isOption title=\"Hello tour\" cardClass=\"tour-1 card-test\">\r\n                            <h1>H1 Able Pro</h1>\r\n                            <h2>H2 Able Pro</h2>\r\n                            <h3>H3 Able Pro</h3>\r\n                            <h4>H4 Able Pro</h4>\r\n                            <h5>H5 Able Pro</h5>\r\n                            <h6>H6 Able Pro</h6>\r\n                            <Card.Text>Paragraph Able Pro</Card.Text>\r\n                            <Card.Text>Paragraph Able Pro</Card.Text>\r\n                        </MainCard>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdvanceTour;","import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: false,\r\n        cardRemove: false\r\n    };\r\n\r\n    cardReloadHandler = () => {\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [];\r\n\r\n        if (this.state.isOption) {\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-horizontal\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n"],"sourceRoot":""}