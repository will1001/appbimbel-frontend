{"version":3,"sources":["Demo/UIElements/Basic/Button.js","App/components/MainCard.js","App/components/UcFirst.js"],"names":["BasicButton","buttonVariants","buttonOptions","variant","icon","basicButtons","map","idx","key","overlay","text","outlineButtons","squareButtons","className","disabledButtons","disabled","roundedButtons","glowButtons","iconButtons","button","outlineIconButtons","onlyIconButtons","onlyOutlineIconButtons","onlyIconRoundedButtons","onlyOutlineIconRoundedButtons","basicDropdownButton","title","id","Item","eventKey","splitDropdownButton","Divider","basicOutlineDropdownButton","splitOutlineDropdownButton","basicIconDropdownButton","outlineIconDropdownButton","basicIconDropdownRoundedButton","outlineIconDropdownRoundedButton","md","size","type","defaultValue","value","name","aria-label","xl","as","ButtonGroup","vertical","React","Component","MainCard","state","isOption","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","this","alignRight","Toggle","Menu","onClick","prevState","href","DEMO","BLANK_LINK","Header","Title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","children","windowSize","UcFirst","string","charAt","toUpperCase","slice"],"mappings":"oSAoBMA,E,4JACF,WACI,IAAMC,EAAiB,CACnB,UACA,YACA,UACA,SACA,UACA,OACA,QACA,QAGEC,EAAgB,CAClB,CAACC,QAAS,UAAWC,KAAK,0BAC1B,CAACD,QAAS,YAAaC,KAAK,uBAC5B,CAACD,QAAS,UAAWC,KAAK,6BAC1B,CAACD,QAAS,SAAUC,KAAK,sBACzB,CAACD,QAAS,UAAWC,KAAK,+BAC1B,CAACD,QAAS,OAAQC,KAAK,sBAGrBC,EAAeJ,EAAeK,KAAI,SAACH,EAASI,GAAV,OACpC,kBAAC,IAAD,CAAgBC,IAAKD,EAAKE,QAAS,kBAAC,IAAD,KAAUN,IACzC,kBAAC,IAAD,CAAQA,QAASA,GAAS,kBAAC,IAAD,CAASO,KAAMP,SAI3CQ,EAAiBV,EAAeK,KAAI,SAACH,EAASI,GAAV,OACtC,kBAAC,IAAD,CAAgBC,IAAKD,EAAKE,QAAS,kBAAC,IAAD,KAAU,WAAWN,IACpD,kBAAC,IAAD,CAAQA,QAAS,WAAWA,GAAS,kBAAC,IAAD,CAASO,KAAMP,SAItDS,EAAgBX,EAAeK,KAAI,SAACH,EAASI,GAAV,OAAkB,kBAAC,IAAD,CAAQC,IAAKD,EAAKM,UAAU,aAAaV,QAASA,GAAS,kBAAC,IAAD,CAASO,KAAMP,QAC/HW,EAAkBb,EAAeK,KAAI,SAACH,EAASI,GAAV,OAAkB,kBAAC,IAAD,CAAQC,IAAKD,EAAKQ,UAAQ,EAACZ,QAASA,GAAS,kBAAC,IAAD,CAASO,KAAMP,QACnHa,EAAiBf,EAAeK,KAAI,SAACH,EAASI,GAAV,OAAkB,kBAAC,IAAD,CAAQC,IAAKD,EAAKM,UAAU,cAAcV,QAASA,GAAS,kBAAC,IAAD,CAASO,KAAMP,QAEjIc,EAAchB,EAAeK,KAAI,SAACH,EAASI,GAAV,OACnC,kBAAC,IAAD,CAAgBC,IAAKD,EAAKE,QAAS,kBAAC,IAAD,KAAU,YAAYN,IACrD,kBAAC,IAAD,CAAQU,UAAW,YAAYV,EAASA,QAASA,GAAS,kBAAC,IAAD,CAASO,KAAMP,SAI3Ee,EAAchB,EAAcI,KAAI,SAACa,EAAQZ,GAAT,OAC9B,kBAAC,IAAD,CAAQC,IAAKD,EAAKJ,QAASgB,EAAOhB,SAC9B,uBAAGU,UAAWM,EAAOf,OACrB,kBAAC,IAAD,CAASM,KAAMS,EAAOhB,cAK5BiB,EAAqBlB,EAAcI,KAAI,SAACa,EAAQZ,GAAT,OACrC,kBAAC,IAAD,CAAQC,IAAKD,EAAKJ,QAAS,WAAWgB,EAAOhB,SACzC,uBAAGU,UAAWM,EAAOf,OACrB,kBAAC,IAAD,CAASM,KAAMS,EAAOhB,cAK5BkB,EAAkBnB,EAAcI,KAAI,SAACa,EAAQZ,GAAT,OAClC,kBAAC,IAAD,CAAQM,UAAU,WAAWL,IAAKD,EAAKJ,QAASgB,EAAOhB,SACnD,uBAAGU,UAAWM,EAAOf,WAK3BkB,EAAyBpB,EAAcI,KAAI,SAACa,EAAQZ,GAAT,OACzC,kBAAC,IAAD,CAAQM,UAAU,WAAWL,IAAKD,EAAKJ,QAAS,WAAWgB,EAAOhB,SAC9D,uBAAGU,UAAWM,EAAOf,WAK3BmB,EAAyBrB,EAAcI,KAAI,SAACa,EAAQZ,GAAT,OACzC,kBAAC,IAAD,CAAQM,UAAU,uBAAuBL,IAAKD,EAAKJ,QAASgB,EAAOhB,SAC/D,uBAAGU,UAAWM,EAAOf,WAK3BoB,EAAgCtB,EAAcI,KAAI,SAACa,EAAQZ,GAAT,OAChD,kBAAC,IAAD,CAAQM,UAAU,uBAAuBL,IAAKD,EAAKJ,QAAS,WAAWgB,EAAOhB,SAC1E,uBAAGU,UAAWM,EAAOf,WAK3BqB,EAAsBvB,EAAcI,KACtC,SAAAa,GACI,IAAMO,EAAQ,kBAAC,IAAD,CAAShB,KAAMS,EAAOhB,UACpC,OACA,kBAAC,IAAD,CACIuB,MAAOA,EACPvB,QAASgB,EAAOhB,QAChBwB,GAAE,4BAAuBR,EAAOhB,SAChCK,IAAKW,EAAOhB,SAEZ,kBAAC,IAASyB,KAAV,CAAeC,SAAS,KAAxB,UACA,kBAAC,IAASD,KAAV,CAAeC,SAAS,KAAxB,kBACA,kBAAC,IAASD,KAAV,CAAeC,SAAS,KAAxB,2BAKNC,EAAsB5B,EAAcI,KACtC,SAAAa,GACI,IAAMO,EAAQ,kBAAC,IAAD,CAAShB,KAAMS,EAAOhB,UACpC,OACA,kBAAC,IAAD,CACIuB,MAAOA,EACPvB,QAASgB,EAAOhB,QAChBwB,GAAE,kCAA6BR,EAAOhB,SACtCK,IAAKW,EAAOhB,QACZU,UAAU,aAEV,kBAAC,IAASe,KAAV,CAAeC,SAAS,KAAxB,UACA,kBAAC,IAASD,KAAV,CAAeC,SAAS,KAAxB,kBACA,kBAAC,IAASD,KAAV,CAAeC,SAAS,KAAxB,uBACA,kBAAC,IAASE,QAAV,MACA,kBAAC,IAASH,KAAV,CAAeC,SAAS,KAAxB,sBAKNG,EAA6B9B,EAAcI,KAC7C,SAAAa,GACI,IAAMO,EAAQ,kBAAC,IAAD,CAAShB,KAAMS,EAAOhB,UACpC,OACA,kBAAC,IAAD,CACIuB,MAAOA,EACPvB,QAAS,WAAWgB,EAAOhB,QAC3BwB,GAAE,4BAAuBR,EAAOhB,SAChCK,IAAKW,EAAOhB,SAEZ,kBAAC,IAASyB,KAAV,CAAeC,SAAS,KAAxB,UACA,kBAAC,IAASD,KAAV,CAAeC,SAAS,KAAxB,kBACA,kBAAC,IAASD,KAAV,CAAeC,SAAS,KAAxB,2BAKNI,EAA6B/B,EAAcI,KAC7C,SAAAa,GACI,IAAMO,EAAQ,kBAAC,IAAD,CAAShB,KAAMS,EAAOhB,UACpC,OACA,kBAAC,IAAD,CACIuB,MAAOA,EACPvB,QAAS,WAAWgB,EAAOhB,QAC3BwB,GAAE,kCAA6BR,EAAOhB,SACtCK,IAAKW,EAAOhB,QACZU,UAAU,aAEV,kBAAC,IAASe,KAAV,CAAeC,SAAS,KAAxB,UACA,kBAAC,IAASD,KAAV,CAAeC,SAAS,KAAxB,kBACA,kBAAC,IAASD,KAAV,CAAeC,SAAS,KAAxB,uBACA,kBAAC,IAASE,QAAV,MACA,kBAAC,IAASH,KAAV,CAAeC,SAAS,KAAxB,sBAKNK,EAA0BhC,EAAcI,KAC1C,SAAAa,GACI,IAAMO,EAAQ,uBAAGb,UAAWM,EAAOf,OACnC,OACI,kBAAC,IAAD,CACIsB,MAAOA,EACPvB,QAASgB,EAAOhB,QAChBwB,GAAE,4BAAuBR,EAAOhB,SAChCK,IAAKW,EAAOhB,QACZU,UAAU,YAEV,kBAAC,IAASe,KAAV,CAAeC,SAAS,KAAxB,UACA,kBAAC,IAASD,KAAV,CAAeC,SAAS,KAAxB,kBACA,kBAAC,IAASD,KAAV,CAAeC,SAAS,KAAxB,2BAKVM,EAA4BjC,EAAcI,KAC5C,SAAAa,GACI,IAAMO,EAAQ,uBAAGb,UAAWM,EAAOf,OACnC,OACI,kBAAC,IAAD,CACIsB,MAAOA,EACPvB,QAAS,WAAWgB,EAAOhB,QAC3BwB,GAAE,4BAAuBR,EAAOhB,SAChCK,IAAKW,EAAOhB,QACZU,UAAU,YAEV,kBAAC,IAASe,KAAV,CAAeC,SAAS,KAAxB,UACA,kBAAC,IAASD,KAAV,CAAeC,SAAS,KAAxB,kBACA,kBAAC,IAASD,KAAV,CAAeC,SAAS,KAAxB,2BAKVO,EAAiClC,EAAcI,KACjD,SAAAa,GACI,IAAMO,EAAQ,uBAAGb,UAAWM,EAAOf,OACnC,OACI,kBAAC,IAAD,CACIsB,MAAOA,EACPvB,QAASgB,EAAOhB,QAChBwB,GAAE,4BAAuBR,EAAOhB,SAChCK,IAAKW,EAAOhB,QACZU,UAAU,wBAEV,kBAAC,IAASe,KAAV,CAAeC,SAAS,KAAxB,UACA,kBAAC,IAASD,KAAV,CAAeC,SAAS,KAAxB,kBACA,kBAAC,IAASD,KAAV,CAAeC,SAAS,KAAxB,2BAKVQ,EAAmCnC,EAAcI,KACnD,SAAAa,GACI,IAAMO,EAAQ,uBAAGb,UAAWM,EAAOf,OACnC,OACI,kBAAC,IAAD,CACIsB,MAAOA,EACPvB,QAAS,WAAWgB,EAAOhB,QAC3BwB,GAAE,4BAAuBR,EAAOhB,SAChCK,IAAKW,EAAOhB,QACZU,UAAU,wBAEV,kBAAC,IAASe,KAAV,CAAeC,SAAS,KAAxB,UACA,kBAAC,IAASD,KAAV,CAAeC,SAAS,KAAxB,kBACA,kBAAC,IAASD,KAAV,CAAeC,SAAS,KAAxB,2BAKhB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKhB,UAAU,YACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMa,MAAM,WACR,kCAAO,6CAAP,uBAAmD,wCAAnD,0BACCrB,EACD,kBAAC,IAAD,CAAgBI,QAAS,kBAAC,IAAD,cACrB,kBAAC,IAAD,CAAQN,QAAQ,QAAhB,UAGR,kBAAC,IAAD,CAAMuB,MAAM,WACR,kCAAO,qDAAP,uBAA2D,wCAA3D,kCACCf,GAEL,kBAAC,IAAD,CAAMe,MAAM,iBACR,kCAAO,wDAAP,uBAA8D,wCAA9D,yBACCd,GAEL,kBAAC,IAAD,CAAMc,MAAM,mBACR,kCAAO,0CAAP,uBAAgD,wCAAhD,2BACCZ,GAEL,kBAAC,IAAD,CAAMY,MAAM,kBACR,kCAAO,yDAAP,uBAA+D,wCAA/D,0BACCV,GAEL,kBAAC,IAAD,CAAMU,MAAM,eACR,kCAAO,sDAAP,uBAA4D,wCAA5D,uBACCT,GAEL,kBAAC,IAAD,CAAMS,MAAM,iBACR,kCAAO,2EAAP,uBAAiF,wCAAjF,yBACA,kBAAC,IAAD,CAAgBjB,QAAS,kBAAC,IAAD,kBACrB,kBAAC,IAAD,CAAQI,UAAU,WAAWV,QAAQ,WAArC,aAEJ,kBAAC,IAAD,CAAgBM,QAAS,kBAAC,IAAD,kBACrB,kBAAC,IAAD,CAAQI,UAAU,WAAWV,QAAQ,WAArC,aAEJ,kBAAC,IAAD,CAAgBM,QAAS,kBAAC,IAAD,kBACrB,kBAAC,IAAD,CAAQI,UAAU,WAAWV,QAAQ,UAArC,aAEJ,kBAAC,IAAD,CAAgBM,QAAS,kBAAC,IAAD,kBACrB,kBAAC,IAAD,CAAQI,UAAU,WAAWV,QAAQ,WAArC,aAEJ,kBAAC,IAAD,CAAgBM,QAAS,kBAAC,IAAD,kBACrB,kBAAC,IAAD,CAAQI,UAAU,WAAWV,QAAQ,QAArC,gBAKhB,kBAAC,IAAD,CAAKU,UAAU,YACX,kBAAC,IAAD,CAAKyB,GAAI,GACL,kBAAC,IAAD,CAAMZ,MAAM,mBACR,kCAAO,2CAAP,uBAAiD,wCAAjD,wBACA,kBAAC,IAAD,CAAQvB,QAAQ,UAAUoC,KAAK,MAA/B,gBACA,kBAAC,IAAD,CAAQpC,QAAQ,YAAYoC,KAAK,MAAjC,kBAGR,kBAAC,IAAD,CAAKD,GAAI,GACL,kBAAC,IAAD,CAAMZ,MAAM,mBACR,kCAAO,2CAAP,uBAAiD,wCAAjD,wBACA,kBAAC,IAAD,CAAQvB,QAAQ,UAAUoC,KAAK,MAA/B,gBACA,kBAAC,IAAD,CAAQpC,QAAQ,YAAYoC,KAAK,MAAjC,kBAGR,kBAAC,IAAD,CAAKD,GAAI,GACL,kBAAC,IAAD,CAAMZ,MAAM,mBACR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAmBc,KAAK,WAAWC,aAAc,GAC7C,kBAAC,IAAD,CAActC,QAAQ,YAAYuC,MAAO,GAAzC,YACA,kBAAC,IAAD,CAAcvC,QAAQ,YAAYuC,MAAO,GAAzC,gBAKhB,kBAAC,IAAD,CAAKJ,GAAI,GACL,kBAAC,IAAD,CAAMZ,MAAM,gBACR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAmBc,KAAK,QAAQG,KAAK,UAAUF,aAAc,GACzD,kBAAC,IAAD,CAActC,QAAQ,YAAYuC,MAAO,GAAzC,UACA,kBAAC,IAAD,CAAcvC,QAAQ,YAAYuC,MAAO,GAAzC,SACA,kBAAC,IAAD,CAAcvC,QAAQ,YAAYuC,MAAO,GAAzC,aAKhB,kBAAC,IAAD,CAAKJ,GAAI,GACL,kBAAC,IAAD,CAAMZ,MAAM,oBACPR,IAGT,kBAAC,IAAD,CAAKoB,GAAI,GACL,kBAAC,IAAD,CAAMZ,MAAM,wBACPN,IAGT,kBAAC,IAAD,CAAKkB,GAAI,GACL,kBAAC,IAAD,CAAMZ,MAAM,aACPL,IAGT,kBAAC,IAAD,CAAKiB,GAAI,GACL,kBAAC,IAAD,CAAMZ,MAAM,gBACPJ,IAGT,kBAAC,IAAD,CAAKgB,GAAI,GACL,kBAAC,IAAD,CAAMZ,MAAM,uBACPH,IAGT,kBAAC,IAAD,CAAKe,GAAI,GACL,kBAAC,IAAD,CAAMZ,MAAM,+BACPF,KAIb,kBAAC,IAAD,CAAKX,UAAU,YACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMa,MAAM,yBACR,kBAAC,IAAD,KACKD,IAGT,kBAAC,IAAD,CAAMC,MAAM,yBACR,kBAAC,IAAD,KACKI,IAGT,kBAAC,IAAD,CAAMJ,MAAM,iCACR,kBAAC,IAAD,KACKM,IAGT,kBAAC,IAAD,CAAMN,MAAM,iCACR,kBAAC,IAAD,KACKO,MAKjB,kBAAC,IAAD,CAAKpB,UAAU,YACX,kBAAC,IAAD,CAAKyB,GAAI,GACL,kBAAC,IAAD,CAAMZ,MAAM,uBACR,kBAAC,IAAD,KACKQ,KAIb,kBAAC,IAAD,CAAKI,GAAI,GACL,kBAAC,IAAD,CAAMZ,MAAM,yBACR,kBAAC,IAAD,KACKS,KAIb,kBAAC,IAAD,CAAKG,GAAI,GACL,kBAAC,IAAD,CAAMZ,MAAM,+BACR,kBAAC,IAAD,KACKU,KAIb,kBAAC,IAAD,CAAKE,GAAI,GACL,kBAAC,IAAD,CAAMZ,MAAM,iCACR,kBAAC,IAAD,KACKW,KAIb,kBAAC,IAAD,CAAKC,GAAI,GACL,kBAAC,IAAD,CAAMZ,MAAM,sBACR,kBAAC,IAAD,CAAakB,aAAW,iBACpB,kBAAC,IAAD,CAAQzC,QAAQ,aAAhB,QACA,kBAAC,IAAD,CAAQA,QAAQ,aAAhB,UACA,kBAAC,IAAD,CAAQA,QAAQ,aAAhB,YAIZ,kBAAC,IAAD,CAAKmC,GAAI,GACL,kBAAC,IAAD,CAAMZ,MAAM,kBACR,kBAAC,IAAD,CAAekB,aAAW,8BACtB,kBAAC,IAAD,CAAa/B,UAAU,OAAO+B,aAAW,eACrC,kBAAC,IAAD,CAAQzC,QAAQ,aAAhB,KACA,kBAAC,IAAD,CAAQA,QAAQ,aAAhB,KACA,kBAAC,IAAD,CAAQA,QAAQ,aAAhB,KACA,kBAAC,IAAD,CAAQA,QAAQ,aAAhB,MAGJ,kBAAC,IAAD,CAAaU,UAAU,OAAO+B,aAAW,gBACrC,kBAAC,IAAD,CAAQzC,QAAQ,aAAhB,KACA,kBAAC,IAAD,CAAQA,QAAQ,aAAhB,KACA,kBAAC,IAAD,CAAQA,QAAQ,aAAhB,MAGJ,kBAAC,IAAD,CAAayC,aAAW,eACpB,kBAAC,IAAD,CAAQzC,QAAQ,aAAhB,UAMpB,kBAAC,IAAD,CAAKU,UAAU,YACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMa,MAAM,uBACR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKmB,GAAI,EAAGP,GAAI,IACZ,kCAAO,2CAAP,uBAAiD,6CAAjD,gCACA,kBAAC,IAAD,CAAaC,KAAK,MACd,kBAAC,IAAD,CAAQpC,QAAQ,aAAhB,QACA,kBAAC,IAAD,CAAQA,QAAQ,aAAhB,UACA,kBAAC,IAAD,CAAQA,QAAQ,aAAhB,WAGR,kBAAC,IAAD,CAAK0C,GAAI,EAAGP,GAAI,GACZ,mDACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQnC,QAAQ,aAAhB,QACA,kBAAC,IAAD,CAAQA,QAAQ,aAAhB,UACA,kBAAC,IAAD,CAAQA,QAAQ,aAAhB,WAGR,kBAAC,IAAD,CAAK0C,GAAI,EAAGP,GAAI,GACZ,kCAAO,2CAAP,uBAAiD,6CAAjD,gCACA,kBAAC,IAAD,CAAaC,KAAK,MACd,kBAAC,IAAD,CAAQpC,QAAQ,aAAhB,QACA,kBAAC,IAAD,CAAQA,QAAQ,aAAhB,UACA,kBAAC,IAAD,CAAQA,QAAQ,aAAhB,eAOxB,kBAAC,IAAD,CAAKU,UAAU,YACX,kBAAC,IAAD,CAAKyB,GAAI,GACL,kBAAC,IAAD,CAAMZ,MAAM,WACR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQvB,QAAQ,aAAhB,KACA,kBAAC,IAAD,CAAQA,QAAQ,aAAhB,KACA,kBAAC,IAAD,CAAgBA,QAAQ,YAAY2C,GAAIC,IAAarB,MAAM,WAAWC,GAAG,sBACrE,kBAAC,IAASC,KAAV,CAAeC,SAAS,KAAxB,iBACA,kBAAC,IAASD,KAAV,CAAeC,SAAS,KAAxB,qBAKhB,kBAAC,IAAD,CAAKS,GAAI,GACL,kBAAC,IAAD,CAAMZ,MAAM,sBACR,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAasB,UAAQ,GACjB,kBAAC,IAAD,CAAQ7C,QAAQ,YAAYU,UAAU,aAAtC,KACA,kBAAC,IAAD,CAAQV,QAAQ,YAAYU,UAAU,aAAtC,KACA,kBAAC,IAAD,CAAQV,QAAQ,YAAYU,UAAU,aAAtC,OAGR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAamC,UAAQ,GACjB,kBAAC,IAAD,CAAQ7C,QAAQ,YAAYU,UAAU,aAAtC,KACA,kBAAC,IAAD,CAAQV,QAAQ,YAAYU,UAAU,aAAtC,KACA,kBAAC,IAAD,CAAgBV,QAAQ,YAAY2C,GAAIC,IAAarB,MAAM,WAAWC,GAAG,sBACrE,kBAAC,IAASC,KAAV,CAAeC,SAAS,KAAxB,iBACA,kBAAC,IAASD,KAAV,CAAeC,SAAS,KAAxB,6B,GAlflBoB,IAAMC,WA+fjBlD,a,yJC5gBTmD,E,4MACFC,MAAQ,CACJC,SAAU,EAAKC,MAAMD,SACrBE,UAAU,EACVC,cAAc,EACdC,UAAU,EACVC,YAAY,G,EAGhBC,kBAAoB,WAChB,EAAKC,SAAS,CAACH,UAAU,IACzBI,aAAY,WACR,EAAKD,SAAS,CAACH,UAAU,MAC1B,M,EAGPK,kBAAoB,WAChB,EAAKF,SAAS,CAACF,YAAY,K,4CAG/B,WAAU,IACFK,EAAiBC,EAAQC,EAAiBC,EAC1CC,EAFC,OAGDC,EAAY,GA2EhB,OAzEIC,KAAKjB,MAAMC,WACXY,EACI,yBAAKpD,UAAU,qBACX,kBAAC,IAAD,CAAUyD,YAAY,EAAMzD,UAAU,yBAClC,kBAAC,IAAS0D,OAAV,CAAiB5C,GAAG,iBAAiBd,UAAU,YAC3C,uBAAGA,UAAU,kCAEjB,kBAAC,IAAS2D,KAAV,CAAe1B,GAAG,KAAKjC,UAAU,6BAC7B,kBAAC,IAASe,KAAV,CAAekB,GAAG,KAAKjC,UAAU,gBAAgB4D,QAAS,WAAO,EAAKb,UAAS,SAAAc,GAAc,MAAO,CAACnB,UAAWmB,EAAUnB,eACtH,uBAAG1C,UAAWwD,KAAKjB,MAAMG,SAAW,wBAA0B,0BAC9D,uBAAGoB,KAAMC,IAAKC,YAAd,IAA4BR,KAAKjB,MAAMG,SAAW,UAAY,WAA9D,MAEJ,kBAAC,IAAS3B,KAAV,CAAekB,GAAG,KAAKjC,UAAU,gBAAgB4D,QAAS,WAAO,EAAKb,UAAS,SAAAc,GAAc,MAAO,CAAClB,cAAekB,EAAUlB,mBAC1H,uBAAG3C,UAAWwD,KAAKjB,MAAMI,aAAe,oBAAsB,uBAC9D,uBAAGmB,KAAMC,IAAKC,YAAd,IAA4BR,KAAKjB,MAAMI,aAAe,SAAW,WAAjE,MAEJ,kBAAC,IAAS5B,KAAV,CAAekB,GAAG,KAAKjC,UAAU,gBAAgB4D,QAASJ,KAAKV,mBAC3D,uBAAG9C,UAAU,4BACb,uBAAG8D,KAAMC,IAAKC,YAAd,aAEJ,kBAAC,IAASjD,KAAV,CAAekB,GAAG,KAAKjC,UAAU,gBAAgB4D,QAASJ,KAAKP,mBAC3D,uBAAGjD,UAAU,uBACb,uBAAG8D,KAAMC,IAAKC,YAAd,iBAQxBX,EACI,kBAAC,IAAKY,OAAN,KACI,kBAAC,IAAKC,MAAN,CAAYjC,GAAG,MAAMuB,KAAKf,MAAM5B,OAC/BuC,GAILI,KAAKjB,MAAMG,WACXa,EAAS,sBAAOA,GAAP,CAAkB,cAC3BL,EAAkB,CAACiB,SAAU,QAASC,IAAK,EAAGC,KAAM,EAAGC,MAAO,EAAGC,MAAOf,KAAKf,MAAM+B,YAAaC,OAAQjB,KAAKf,MAAMiC,eAGnHlB,KAAKjB,MAAMK,WACXW,EAAS,sBAAOA,GAAP,CAAkB,cAC3BJ,EACI,yBAAKnD,UAAU,eACX,uBAAGA,UAAU,8BAKrBwD,KAAKjB,MAAMM,aACXU,EAAS,sBAAOA,GAAP,CAAkB,YAG3BC,KAAKf,MAAMc,YACXA,EAAS,sBAAOA,GAAP,CAAkBC,KAAKf,MAAMc,aAG1CD,EACI,kBAAC,IAAD,CAAMtD,UAAWuD,EAAUoB,KAAK,KAAMC,MAAO1B,GACxCG,EACD,kBAAC,IAAD,CAAUwB,IAAKrB,KAAKjB,MAAMI,cACtB,6BACI,kBAAC,IAAKmC,KAAN,KACKtB,KAAKf,MAAMsC,YAIvB5B,GAKL,kBAAC,IAAD,KACKG,O,GApGMjB,aA0GR2C,QAAW1C,I,4EC/GpB2C,E,4JACF,WACI,IAAMC,EAAS1B,KAAKf,MAAM5C,KAC1B,OAAOqF,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,O,UAHvCjD,EAAMC,WAOb4C","file":"static/js/166.a4f919e2.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button,\r\n    OverlayTrigger,\r\n    Tooltip,\r\n    ButtonToolbar,\r\n    ToggleButtonGroup,\r\n    ToggleButton,\r\n    Dropdown,\r\n    DropdownButton,\r\n    SplitButton,\r\n    ButtonGroup\r\n} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Card from \"../../../App/components/MainCard\";\r\nimport UcFirst from \"../../../App/components/UcFirst\";\r\n\r\nclass BasicButton extends React.Component {\r\n    render() {\r\n        const buttonVariants = [\r\n            'primary',\r\n            'secondary',\r\n            'success',\r\n            'danger',\r\n            'warning',\r\n            'info',\r\n            'light',\r\n            'dark',\r\n        ];\r\n\r\n        const buttonOptions = [\r\n            {variant: 'primary', icon:'feather icon-thumbs-up'},\r\n            {variant: 'secondary', icon:'feather icon-camera'},\r\n            {variant: 'success', icon:'feather icon-check-circle'},\r\n            {variant: 'danger', icon:'feather icon-slash'},\r\n            {variant: 'warning', icon:'feather icon-alert-triangle'},\r\n            {variant: 'info', icon:'feather icon-info'}\r\n        ];\r\n\r\n        const basicButtons = buttonVariants.map((variant, idx) => (\r\n            <OverlayTrigger key={idx} overlay={<Tooltip>{variant}</Tooltip>}>\r\n                <Button variant={variant}><UcFirst text={variant} /></Button>\r\n            </OverlayTrigger>\r\n        ));\r\n\r\n        const outlineButtons = buttonVariants.map((variant, idx) => (\r\n            <OverlayTrigger key={idx} overlay={<Tooltip>{'outline-'+variant}</Tooltip>}>\r\n                <Button variant={'outline-'+variant}><UcFirst text={variant} /></Button>\r\n            </OverlayTrigger>\r\n        ));\r\n\r\n        const squareButtons = buttonVariants.map((variant, idx) => <Button key={idx} className='btn-square' variant={variant}><UcFirst text={variant} /></Button>);\r\n        const disabledButtons = buttonVariants.map((variant, idx) => <Button key={idx} disabled variant={variant}><UcFirst text={variant} /></Button>);\r\n        const roundedButtons = buttonVariants.map((variant, idx) => <Button key={idx} className='btn-rounded' variant={variant}><UcFirst text={variant} /></Button>);\r\n\r\n        const glowButtons = buttonVariants.map((variant, idx) => (\r\n            <OverlayTrigger key={idx} overlay={<Tooltip>{'btn-glow-'+variant}</Tooltip>}>\r\n                <Button className={'btn-glow-'+variant} variant={variant}><UcFirst text={variant} /></Button>\r\n            </OverlayTrigger>\r\n        ));\r\n\r\n        const iconButtons = buttonOptions.map((button, idx) => (\r\n                <Button key={idx} variant={button.variant}>\r\n                    <i className={button.icon} />\r\n                    <UcFirst text={button.variant} />\r\n                </Button>\r\n            )\r\n        );\r\n\r\n        const outlineIconButtons = buttonOptions.map((button, idx) => (\r\n                <Button key={idx} variant={'outline-'+button.variant}>\r\n                    <i className={button.icon} />\r\n                    <UcFirst text={button.variant} />\r\n                </Button>\r\n            )\r\n        );\r\n\r\n        const onlyIconButtons = buttonOptions.map((button, idx) => (\r\n                <Button className='btn-icon' key={idx} variant={button.variant}>\r\n                    <i className={button.icon} />\r\n                </Button>\r\n            )\r\n        );\r\n\r\n        const onlyOutlineIconButtons = buttonOptions.map((button, idx) => (\r\n                <Button className='btn-icon' key={idx} variant={'outline-'+button.variant}>\r\n                    <i className={button.icon} />\r\n                </Button>\r\n            )\r\n        );\r\n\r\n        const onlyIconRoundedButtons = buttonOptions.map((button, idx) => (\r\n                <Button className='btn-icon btn-rounded' key={idx} variant={button.variant}>\r\n                    <i className={button.icon} />\r\n                </Button>\r\n            )\r\n        );\r\n\r\n        const onlyOutlineIconRoundedButtons = buttonOptions.map((button, idx) => (\r\n                <Button className='btn-icon btn-rounded' key={idx} variant={'outline-'+button.variant}>\r\n                    <i className={button.icon} />\r\n                </Button>\r\n            )\r\n        );\r\n\r\n        const basicDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <UcFirst text={button.variant} />;\r\n                return (\r\n                <DropdownButton\r\n                    title={title}\r\n                    variant={button.variant}\r\n                    id={`dropdown-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                </DropdownButton>\r\n            );\r\n        });\r\n\r\n        const splitDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <UcFirst text={button.variant} />;\r\n                return (\r\n                <SplitButton\r\n                    title={title}\r\n                    variant={button.variant}\r\n                    id={`dropdown-split-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                    className=\"mr-2 mb-2\"\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                </SplitButton>\r\n            );\r\n        });\r\n\r\n        const basicOutlineDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <UcFirst text={button.variant} />;\r\n                return (\r\n                <DropdownButton\r\n                    title={title}\r\n                    variant={'outline-'+button.variant}\r\n                    id={`dropdown-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                </DropdownButton>\r\n            );\r\n        });\r\n\r\n        const splitOutlineDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <UcFirst text={button.variant} />;\r\n                return (\r\n                <SplitButton\r\n                    title={title}\r\n                    variant={'outline-'+button.variant}\r\n                    id={`dropdown-split-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                    className=\"mr-2 mb-2\"\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                </SplitButton>\r\n            );\r\n        });\r\n\r\n        const basicIconDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <i className={button.icon} />;\r\n                return (\r\n                    <DropdownButton\r\n                        title={title}\r\n                        variant={button.variant}\r\n                        id={`dropdown-variants-${button.variant}`}\r\n                        key={button.variant}\r\n                        className='drp-icon'\r\n                    >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                    </DropdownButton>\r\n                );\r\n            });\r\n\r\n        const outlineIconDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <i className={button.icon} />;\r\n                return (\r\n                    <DropdownButton\r\n                        title={title}\r\n                        variant={'outline-'+button.variant}\r\n                        id={`dropdown-variants-${button.variant}`}\r\n                        key={button.variant}\r\n                        className='drp-icon'\r\n                    >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                    </DropdownButton>\r\n                );\r\n            });\r\n\r\n        const basicIconDropdownRoundedButton = buttonOptions.map(\r\n            button => {\r\n                const title = <i className={button.icon} />;\r\n                return (\r\n                    <DropdownButton\r\n                        title={title}\r\n                        variant={button.variant}\r\n                        id={`dropdown-variants-${button.variant}`}\r\n                        key={button.variant}\r\n                        className='drp-icon btn-rounded'\r\n                    >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                    </DropdownButton>\r\n                );\r\n            });\r\n\r\n        const outlineIconDropdownRoundedButton = buttonOptions.map(\r\n            button => {\r\n                const title = <i className={button.icon} />;\r\n                return (\r\n                    <DropdownButton\r\n                        title={title}\r\n                        variant={'outline-'+button.variant}\r\n                        id={`dropdown-variants-${button.variant}`}\r\n                        key={button.variant}\r\n                        className='drp-icon btn-rounded'\r\n                    >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                    </DropdownButton>\r\n                );\r\n            });\r\n\r\n        return (\r\n            <Aux>\r\n                <Row className='btn-page'>\r\n                    <Col>\r\n                        <Card title=\"Default\">\r\n                            <p>use <code>variant=\"*\"</code> props in component <code>Button</code> to get various button</p>\r\n                            {basicButtons}\r\n                            <OverlayTrigger overlay={<Tooltip>link</Tooltip>}>\r\n                                <Button variant=\"link\">Link</Button>\r\n                            </OverlayTrigger>\r\n                        </Card>\r\n                        <Card title=\"Outline\">\r\n                            <p>use <code>variant=\"outline-*\"</code> props in component <code>Button</code> to get various outline button</p>\r\n                            {outlineButtons}\r\n                        </Card>\r\n                        <Card title=\"Square Button\">\r\n                            <p>use <code>className=\"btn-square\"</code> props in component <code>Button</code> to get square button</p>\r\n                            {squareButtons}\r\n                        </Card>\r\n                        <Card title=\"Disabled Button\">\r\n                            <p>use <code>disabled</code> props in component <code>Button</code> to get disabled button</p>\r\n                            {disabledButtons}\r\n                        </Card>\r\n                        <Card title=\"Rounded Button\">\r\n                            <p>use <code>className=\"btn-rounded\"</code> props in component <code>Button</code> to get rounded button</p>\r\n                            {roundedButtons}\r\n                        </Card>\r\n                        <Card title=\"Glow Button\">\r\n                            <p>use <code>className=\"btn-glow\"</code> props in component <code>Button</code> to get glow button</p>\r\n                            {glowButtons}\r\n                        </Card>\r\n                        <Card title=\"Shadow Button\">\r\n                            <p>use <code>className=\".shadow-[ 1 / 2 / 3 / 4 / 5 ]\"</code> props in component <code>Button</code> to get shadow button</p>\r\n                            <OverlayTrigger overlay={<Tooltip>shadow-1</Tooltip>}>\r\n                                <Button className=\"shadow-1\" variant='primary'>Shadow 1</Button>\r\n                            </OverlayTrigger>\r\n                            <OverlayTrigger overlay={<Tooltip>shadow-2</Tooltip>}>\r\n                                <Button className=\"shadow-2\" variant='success'>Shadow 2</Button>\r\n                            </OverlayTrigger>\r\n                            <OverlayTrigger overlay={<Tooltip>shadow-3</Tooltip>}>\r\n                                <Button className=\"shadow-3\" variant='danger'>Shadow 3</Button>\r\n                            </OverlayTrigger>\r\n                            <OverlayTrigger overlay={<Tooltip>shadow-4</Tooltip>}>\r\n                                <Button className=\"shadow-4\" variant='warning'>Shadow 4</Button>\r\n                            </OverlayTrigger>\r\n                            <OverlayTrigger overlay={<Tooltip>shadow-5</Tooltip>}>\r\n                                <Button className=\"shadow-5\" variant='info'>Shadow 5</Button>\r\n                            </OverlayTrigger>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='btn-page'>\r\n                    <Col md={6}>\r\n                        <Card title=\"Sizes [ Large ]\">\r\n                            <p>use <code>size=\"lg\"</code> props in component <code>Button</code> to get large button</p>\r\n                            <Button variant='primary' size='lg'>Large Button</Button>\r\n                            <Button variant='secondary' size='lg'>Large Button</Button>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Sizes [ Small ]\">\r\n                            <p>use <code>size=\"sm\"</code> props in component <code>Button</code> to get small button</p>\r\n                            <Button variant='primary' size='sm'>Small Button</Button>\r\n                            <Button variant='secondary' size='sm'>Small Button</Button>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Checkbox Button\">\r\n                            <ButtonToolbar>\r\n                                <ToggleButtonGroup type=\"checkbox\" defaultValue={1}>\r\n                                    <ToggleButton variant='secondary' value={1}>Checkbox</ToggleButton>\r\n                                    <ToggleButton variant='secondary' value={2}>Checkbox</ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Radio Button\">\r\n                            <ButtonToolbar>\r\n                                <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\r\n                                    <ToggleButton variant='secondary' value={1}>Active</ToggleButton>\r\n                                    <ToggleButton variant='secondary' value={2}>Radio</ToggleButton>\r\n                                    <ToggleButton variant='secondary' value={3}>Radio</ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Button With Icon\">\r\n                            {iconButtons}\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Outline Icon Buttons\">\r\n                            {outlineIconButtons}\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Only Icon\">\r\n                            {onlyIconButtons}\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Outline Icon\">\r\n                            {onlyOutlineIconButtons}\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Icon Button Rounded\">\r\n                            {onlyIconRoundedButtons}\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Icon Outline Button Rounded\">\r\n                            {onlyOutlineIconRoundedButtons}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='btn-page'>\r\n                    <Col>\r\n                        <Card title=\"Basic Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {basicDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                        <Card title=\"Split Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {splitDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                        <Card title=\"Basic Outline Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {basicOutlineDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                        <Card title=\"Split Outline Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {splitOutlineDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='btn-page'>\r\n                    <Col md={6}>\r\n                        <Card title=\"Basic Icon Dropdown\">\r\n                            <ButtonToolbar>\r\n                                {basicIconDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Outline Icon Dropdown\">\r\n                            <ButtonToolbar>\r\n                                {outlineIconDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Basic Rounded Icon Dropdown\">\r\n                            <ButtonToolbar>\r\n                                {basicIconDropdownRoundedButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Outline Rounded Icon Dropdown\">\r\n                            <ButtonToolbar>\r\n                                {outlineIconDropdownRoundedButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Basic Button Group\">\r\n                            <ButtonGroup aria-label=\"Basic example\">\r\n                                <Button variant=\"secondary\">Left</Button>\r\n                                <Button variant=\"secondary\">Middle</Button>\r\n                                <Button variant=\"secondary\">Right</Button>\r\n                            </ButtonGroup>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Button Toolbar\">\r\n                            <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                                <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n                                    <Button variant=\"secondary\">1</Button>\r\n                                    <Button variant=\"secondary\">2</Button>\r\n                                    <Button variant=\"secondary\">3</Button>\r\n                                    <Button variant=\"secondary\">4</Button>\r\n                                </ButtonGroup>\r\n\r\n                                <ButtonGroup className=\"mr-2\" aria-label=\"Second group\">\r\n                                    <Button variant=\"secondary\">5</Button>\r\n                                    <Button variant=\"secondary\">6</Button>\r\n                                    <Button variant=\"secondary\">7</Button>\r\n                                </ButtonGroup>\r\n\r\n                                <ButtonGroup aria-label=\"Third group\">\r\n                                    <Button variant=\"secondary\">8</Button>\r\n                                </ButtonGroup>\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='btn-page'>\r\n                    <Col>\r\n                        <Card title=\"Button Toolbar Size\">\r\n                            <Row>\r\n                                <Col xl={4} md={12}>\r\n                                    <p>use <code>size=\"lg\"</code> props in component <code>ButtonGroup</code> to get large button toolbar</p>\r\n                                    <ButtonGroup size=\"lg\">\r\n                                        <Button variant=\"secondary\">Left</Button>\r\n                                        <Button variant=\"secondary\">Middle</Button>\r\n                                        <Button variant=\"secondary\">Right</Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                                <Col xl={4} md={6}>\r\n                                    <p>default toolbar size</p>\r\n                                    <ButtonGroup>\r\n                                        <Button variant=\"secondary\">Left</Button>\r\n                                        <Button variant=\"secondary\">Middle</Button>\r\n                                        <Button variant=\"secondary\">Right</Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                                <Col xl={4} md={6}>\r\n                                    <p>use <code>size=\"sm\"</code> props in component <code>ButtonGroup</code> to get small button toolbar</p>\r\n                                    <ButtonGroup size=\"sm\">\r\n                                        <Button variant=\"secondary\">Left</Button>\r\n                                        <Button variant=\"secondary\">Middle</Button>\r\n                                        <Button variant=\"secondary\">Right</Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='btn-page'>\r\n                    <Col md={6}>\r\n                        <Card title=\"Nesting\">\r\n                            <ButtonGroup>\r\n                                <Button variant='secondary'>1</Button>\r\n                                <Button variant='secondary'>2</Button>\r\n                                <DropdownButton variant='secondary' as={ButtonGroup} title=\"Dropdown\" id=\"bg-nested-dropdown\">\r\n                                    <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\r\n                                    <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\r\n                                </DropdownButton>\r\n                            </ButtonGroup>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Vertical Variation\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <ButtonGroup vertical>\r\n                                        <Button variant='secondary' className=\"mr-0 mb-0\">1</Button>\r\n                                        <Button variant='secondary' className=\"mr-0 mb-0\">2</Button>\r\n                                        <Button variant='secondary' className=\"mr-0 mb-0\">3</Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                                <Col>\r\n                                    <ButtonGroup vertical>\r\n                                        <Button variant='secondary' className=\"mr-0 mb-0\">1</Button>\r\n                                        <Button variant='secondary' className=\"mr-0 mb-0\">2</Button>\r\n                                        <DropdownButton variant='secondary' as={ButtonGroup} title=\"Dropdown\" id=\"bg-nested-dropdown\">\r\n                                            <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\r\n                                            <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\r\n                                        </DropdownButton>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BasicButton;\r\n","import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: false,\r\n        cardRemove: false\r\n    };\r\n\r\n    cardReloadHandler = () => {\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [];\r\n\r\n        if (this.state.isOption) {\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-horizontal\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n","import React from 'react';\r\n\r\nclass UcFirst extends React.Component {\r\n    render() {\r\n        const string = this.props.text;\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n}\r\n\r\nexport default UcFirst;"],"sourceRoot":""}