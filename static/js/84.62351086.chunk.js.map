{"version":3,"sources":["App/components/InvoiceSetup/index.js","App/components/InvoiceSetup/styles.module.css","App/axios.js","App/components/Button/index.js","App/components/Button/styles.module.css","App/components/Table/index.js"],"names":["InvoiceSetup","props","useState","invoiceSettings","setInvoiceSettings","panelCahnge","setPanelChange","bank","setBank","noRek","setNoRek","namaRek","setNamaRek","setLinkImg","FormData","refreshRender","setRefreshRender","showTambahData","setShowTambahData","editButtonPressed","setEditButtonPressed","addButtonPressed","setAddButtonPressed","dataSelectedNow","setDataSelectedNow","useEffect","a","getInvoiceSettings","fetchdata","axios","get","then","response","data","mainPanel","map","item","index","no_rek","nama_rek","link","title","onClick","editInvoice","panelTambahData","value","type","placeholder","onChange","e","target","id","put","console","log","status","dataEdited","className","styles","container","tambah_soal","layer1","module","exports","instance","create","baseURL","Button","nolink","to","Table","onDragEnd","handleOnDragEnd","style","width","thList","key","droppableId","dropID","provided","snapshot","ref","innerRef","droppableProps","tdList"],"mappings":"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","file":"static/js/84.62351086.chunk.js","sourcesContent":["import React,{ useEffect, useState } from 'react'\r\nimport styles from './styles.module.css'\r\nimport axios from '../../axios'\r\nimport Button from '../Button'\r\nimport Table from '../Table'\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nfunction InvoiceSetup(props) {\r\n    \r\n    // const [linkTemp, setLinkTemp] = useState([]);\r\n    const [invoiceSettings, setInvoiceSettings] = useState([]);\r\n    const [panelCahnge, setPanelChange] = useState(\"main\");\r\n    const [bank, setBank] = useState(\"\");\r\n    const [noRek, setNoRek] = useState(\"\");\r\n    const [namaRek, setNamaRek] = useState(\"\");\r\n    const [linkImg, setLinkImg] = useState(\"\");\r\n    const [fileName, setFileName] = useState(\"\");\r\n    const [img, setImg] = useState(new FormData());\r\n    const [refreshRender, setRefreshRender] = useState(false);\r\n    const [showTambahData, setShowTambahData] = useState(false);\r\n    const [editButtonPressed, setEditButtonPressed] = useState(false);\r\n    const [addButtonPressed, setAddButtonPressed] = useState(false);\r\n    const [dataSelectedNow, setDataSelectedNow] = useState(null);\r\n\r\n\r\n\r\n    const base_url = \"https://fisikamu.xyz\";\r\n\r\n    \r\n\r\n     useEffect(() => {\r\n         async function fetchdata() {\r\n            getInvoiceSettings();\r\n        }\r\n      \r\n        fetchdata();\r\n\r\n        if (refreshRender) {\r\n            getInvoiceSettings();\r\n            setRefreshRender(false);\r\n        }\r\n        if (addButtonPressed) {\r\n            setBank(\"\");\r\n            setLinkImg(\"\");\r\n            setAddButtonPressed(false);\r\n         }\r\n       \r\n        \r\n       \r\n    }, [refreshRender,addButtonPressed,editButtonPressed]);\r\n\r\n/// action function\r\n\r\nconst getInvoiceSettings = ()=>{\r\n    axios.get('/invoice_settings')\r\n    .then(function (response) {\r\n        setInvoiceSettings(response.data);\r\n    });\r\n}\r\n\r\nconst onImageChange = (event) => {\r\n    let files = event.target.files;\r\n    const extLength = files[0][\"name\"].split(\".\").length;\r\n    const dateCode = Date.now();\r\n    const ext = files[0][\"name\"].split(\".\")[extLength - 1];\r\n    const file_name = \"slide_\"+dateCode+\".\"+ext;\r\n    setFileName(file_name);\r\n    if (FileReader && files && files.length) {\r\n       \r\n        img.append('name', \"slide_\"+dateCode)\r\n        img.append('name_before', \"slide_\"+dateCode)\r\n        img.append('file', files[0])\r\n      \r\n         \r\n    }\r\n                \r\n}\r\n\r\nconst kembali = () => {\r\n    setPanelChange(\"main\");\r\n    setAddButtonPressed(true);\r\n    setEditButtonPressed(false);\r\n    setShowTambahData(false);\r\n}\r\n\r\nconst editInvoice = (item) => {\r\n    setShowTambahData(true);\r\n    setBank(item.bank);\r\n    setNoRek(item.no_rek);\r\n    setNamaRek(item.nama_rek);\r\n    setDataSelectedNow(item);\r\n}\r\nconst konfirmasi = (item) => {\r\n    const data={\r\n        id: item.id,\r\n        id_user : item.id_user,\r\n        id_paket:item.id_paket,\r\n        payment_type:item.payment_type,\r\n        jumlah:item.jumlah,\r\n        status:\"Aktif\",\r\n        description:item.description\r\n    };\r\n    // console.log(data);\r\n\r\n    \r\n    axios.put('/transaction_history', data)\r\n            .then(function (response) {\r\n                // console.log(response);\r\n                if (response.status == 200) {\r\n                    setShowTambahData(false);\r\n                    setRefreshRender(true);\r\n                }\r\n            });\r\n}\r\n\r\n\r\n\r\nconst save = () => {\r\n    if (img !== null\r\n        && bank !== \"\"\r\n    ) {\r\n        const link_img = base_url + \"/uploads/\" + fileName;\r\n         const data = {\r\n            bank: bank,\r\n            img: link_img,\r\n           \r\n        }\r\n        // console.log(data);\r\n        axios.post('/slide_content', data)\r\n            .then(function (response) {\r\n                console.log(response);\r\n            });\r\n        \r\n        axios.post('/file_upload', img)\r\n            .then(function (response) {\r\n                console.log(response);\r\n            });\r\n            setRefreshRender(true);\r\n            setShowTambahData(false);\r\n        // setShowPanelInput(showPanelInput => !showPanelInput);\r\n        // setRefreshRender(false);\r\n    } else {\r\n        alert(\"Isi Semua Data\");\r\n   }\r\n}\r\n\r\nconst hapusData = (dataTemp) => {\r\n    let  data_delete = require('querystring');\r\n    data_delete = data_delete.stringify({\r\n        id: dataTemp.id\r\n    });\r\n\r\n\r\n    axios.delete('/slide_content', {\r\n        headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        },\r\n        data : data_delete\r\n    }) .then(function (response) {\r\n                console.log(response);\r\n                if(response.status === 201){\r\n                    setPanelChange(\"main\");\r\n                    setRefreshRender(true);\r\n                }\r\n            });\r\n   \r\n}\r\n\r\nconst editData = (data) => {\r\n    setEditButtonPressed(true);\r\n    setBank(data.bank);\r\n    setLinkImg(data.img);\r\n    setDataSelectedNow(data);\r\n    setShowTambahData(true);\r\n }\r\n\r\n const dataEdited = () => {\r\n    const data={\r\n        id: dataSelectedNow.id,\r\n        bank : bank,\r\n        no_rek : noRek,\r\n        nama_rek:namaRek\r\n    };\r\n\r\n    \r\n    axios.put('/invoice_settings', data)\r\n            .then(function (response) {\r\n                console.log(response);\r\n                if (response.status == 200) {\r\n                    setBank(\"\");\r\n                    setNoRek(\"\");\r\n                    setNamaRek(\"\");\r\n                    setShowTambahData(false);\r\n                    setRefreshRender(true);\r\n                }\r\n            });\r\n}\r\n\r\n   \r\n    \r\n    // panel components\r\n    \r\n    \r\n    const mainPanel =\r\n        <>\r\n            {/* <Table\r\n                dropID = {\"drop-1\"}\r\n                thList={[\"no\", \"Nama\",\"Deskripsi\",\"Nama Paket\",\"Harga\",\"Status\", \"Action\"]}\r\n                tdList={invoiceSettings.map((item,index) => (\r\n                    <tr key={item.id}>\r\n                        <td>{index+1}</td>\r\n                        <td>{item.username}</td>\r\n                        <td>{item.description}</td>\r\n                        <td>{item.nama}</td>\r\n                        <td>{item.jumlah}</td>\r\n                        <td>{item.status}</td>\r\n                        <td><a href=\"#0\" onClick={()=>konfirmasi(item)}>Konfirmasi</a></td>\r\n                    </tr>\r\n                    ))}\r\n            /> */}\r\n            <br/>\r\n            {invoiceSettings.map((item,index) => (\r\n                       <div>\r\n                        <p>Bank  : {item.bank}</p>\r\n                        <p>Nomor Rekening :{item.no_rek}</p>\r\n                        <p>Nama Rekening :{item.nama_rek}</p>\r\n                        <Button link=\"\" title=\"Edit\" onClick={() => editInvoice(item)} />\r\n                       </div>\r\n                    ))}           \r\n            \r\n           \r\n        </>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    const panelTambahData =\r\n        <>\r\n            <h1>Edit Invoice</h1>\r\n            <input value={bank} type=\"text\" placeholder=\"Bank\" onChange={(e) => { setBank(e.target.value) }} />\r\n            <br/>\r\n            <input value={noRek} type=\"number\" placeholder=\"Nomor Rekening\" onChange={(e) => { setNoRek(e.target.value) }} />\r\n            <br/>\r\n            <input value={namaRek} type=\"text\" placeholder=\"Nama Rekening\" onChange={(e) => { setNamaRek(e.target.value) }} />\r\n            <br/>\r\n           \r\n                <br />\r\n           \r\n            <Button link=\"\" title=\"Submit\" onClick={()=>dataEdited()} />\r\n            <Button link=\"\" title=\"Kembali\" onClick={()=>kembali()} />\r\n        </>\r\n    \r\n\r\n\r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n         <div className={styles.container}>\r\n            {panelCahnge === \"main\" ? mainPanel : null}\r\n        </div>\r\n            {showTambahData ?\r\n                <div className={styles.tambah_soal}>\r\n                    <div className={styles.layer1}>\r\n                        {panelTambahData}\r\n                    </div>\r\n                </div> :\r\n                null\r\n            }\r\n        </>\r\n           \r\n    )\r\n}\r\n\r\nexport default InvoiceSetup\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3yeBq\",\"tambah_soal\":\"styles_tambah_soal__ODIx_\",\"layer1\":\"styles_layer1__18KVg\"};","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://fisikamu.xyz\"\r\n});\r\n\r\nexport default instance","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from './styles.module.css'\r\n\r\nfunction Button(props) {\r\n    return (\r\n        <div className={styles.container} onClick={props.onClick}>\r\n            {props.link === \"\" ? \r\n                <div className={styles.nolink}>\r\n                    {props.title}\r\n                </div>\r\n            :\r\n                <Link to={props.link}>\r\n                    {props.title}\r\n                </Link>    \r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2qmjW\",\"nolink\":\"styles_nolink__1-KRX\"};","import React,{ useEffect, useState } from 'react'\r\nimport styles from './styles.module.css'\r\nimport axios from '../../axios'\r\nimport Button from '../../components/Button'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\n\r\nfunction Table(props) {\r\n    \r\n    // const [linkTemp, setLinkTemp] = useState([]);\r\n\r\n    // console.log(props.dropID);\r\n    \r\n   \r\n    return (\r\n        <>\r\n            <DragDropContext onDragEnd={props.handleOnDragEnd}>\r\n                <table style={{ width: \"100%\" }}>\r\n                    <thead>\r\n                        <tr>\r\n                            {props.thList.map((item,index) => (\r\n                            <th key={index}>{item}</th>))}\r\n                        </tr>\r\n                    </thead>\r\n                    <Droppable droppableId={props.dropID}>\r\n                    {(provided, snapshot) => (\r\n                        <tbody\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                        >\r\n                            {props.tdList}\r\n                            {provided.placeholder}\r\n                        </tbody>\r\n                    )}\r\n                    </Droppable>\r\n                </table>\r\n            </DragDropContext>\r\n        </>\r\n           \r\n    )\r\n}\r\n\r\nexport default Table\r\n"],"sourceRoot":""}