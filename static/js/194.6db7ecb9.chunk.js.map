{"version":3,"sources":["assets/images/light-box/l1.jpg","Demo/Extension/ImageCropper.js"],"names":["module","exports","ImageCropper","props","crop","bind","state","image","previewImage","dataX","dataY","dataHeight","dataWidth","dataRotate","dataScaleX","dataScaleY","event","dataUrl","this","refs","myRef","getCroppedCanvas","toDataURL","setState","Math","round","detail","x","y","height","width","rotate","scaleX","scaleY","sm","Header","Body","md","className","ref","src","style","aspectRatio","guides","alt","Prepend","Text","id","defaultValue","readOnly","Component"],"mappings":"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","file":"static/js/194.6db7ecb9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/l1.700d0a32.jpg\";","import React, { Component } from \"react\";\r\nimport { Row, Col, Card, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport Cropper from \"react-cropper\";\r\nimport previewImage from \"../../assets/images/light-box/l1.jpg\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\nclass ImageCropper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.crop = this.crop.bind(this);\r\n    this.state = {\r\n      image: previewImage,\r\n      dataX: \"\",\r\n      dataY: \"\",\r\n      dataHeight: \"\",\r\n      dataWidth: \"\",\r\n      dataRotate: \"\",\r\n      dataScaleX: \"\",\r\n      dataScaleY: \"\"\r\n    };\r\n  }\r\n  crop(event) {\r\n    let dataUrl = this.refs.myRef.getCroppedCanvas().toDataURL();\r\n    this.setState({\r\n      image: dataUrl,\r\n      dataX: Math.round(event.detail.x),\r\n      dataY: Math.round(event.detail.y),\r\n      dataHeight: Math.round(event.detail.height),\r\n      dataWidth: Math.round(event.detail.width),\r\n      dataRotate: Math.round(event.detail.rotate),\r\n      dataScaleX: Math.round(event.detail.scaleX),\r\n      dataScaleY: Math.round(event.detail.scaleY)\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col sm={12}>\r\n          <Card>\r\n            <Card.Header>\r\n              <h5>Image Cropper Plugin</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                <Col md={9}>\r\n                  <div className=\"m-b-4\">\r\n                    <Cropper\r\n                      ref=\"myRef\"\r\n                      src={previewImage}\r\n                      style={{ height: 420, width: \"100%\" }}\r\n                      // Cropper.js options\r\n                      aspectRatio={16 / 9}\r\n                      guides={true}\r\n                      crop={this.crop}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <div className=\"docs-preview clearfix\">\r\n                    <div className=\"img-preview preview-md\">\r\n                      <img src={this.state.image} alt=\"s\" />\r\n                    </div>\r\n                    <div className=\"img-preview preview-sm\">\r\n                      <img src={this.state.image} alt=\"s\" />\r\n                    </div>\r\n                    <div className=\"img-preview preview-xs\">\r\n                      <img src={this.state.image} alt=\"s\" />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"docs-data\">\r\n                      <InputGroup className=\"mb-3\">\r\n                          <InputGroup.Prepend>\r\n                              <InputGroup.Text id=\"cropper-x\">X</InputGroup.Text>\r\n                          </InputGroup.Prepend>\r\n                          <FormControl defaultValue={this.state.dataX} readOnly\r\n                          />\r\n                      </InputGroup>\r\n                      <InputGroup className=\"mb-3\">\r\n                          <InputGroup.Prepend>\r\n                              <InputGroup.Text id=\"cropper-y\">Y</InputGroup.Text>\r\n                          </InputGroup.Prepend>\r\n                          <FormControl defaultValue={this.state.dataY} readOnly\r\n                          />\r\n                      </InputGroup>\r\n                      <InputGroup className=\"mb-3\">\r\n                          <InputGroup.Prepend>\r\n                              <InputGroup.Text id=\"cropper-width\">Width</InputGroup.Text>\r\n                          </InputGroup.Prepend>\r\n                          <FormControl defaultValue={this.state.dataWidth} readOnly\r\n                          />\r\n                      </InputGroup>\r\n                      <InputGroup className=\"mb-3\">\r\n                          <InputGroup.Prepend>\r\n                              <InputGroup.Text id=\"cropper-height\">Height</InputGroup.Text>\r\n                          </InputGroup.Prepend>\r\n                          <FormControl defaultValue={this.state.dataHeight} readOnly\r\n                          />\r\n                      </InputGroup>\r\n                      <InputGroup className=\"mb-3\">\r\n                          <InputGroup.Prepend>\r\n                              <InputGroup.Text id=\"cropper-rotate\">Rotate</InputGroup.Text>\r\n                          </InputGroup.Prepend>\r\n                          <FormControl defaultValue={this.state.dataRotate} readOnly\r\n                          />\r\n                      </InputGroup>\r\n                      <InputGroup className=\"mb-3\">\r\n                          <InputGroup.Prepend>\r\n                              <InputGroup.Text id=\"cropper-scale-x\">ScaleX</InputGroup.Text>\r\n                          </InputGroup.Prepend>\r\n                          <FormControl defaultValue={this.state.dataScaleX} readOnly\r\n                          />\r\n                      </InputGroup>\r\n                      <InputGroup className=\"mb-3\">\r\n                          <InputGroup.Prepend>\r\n                              <InputGroup.Text id=\"cropper-scale-y\">ScaleY</InputGroup.Text>\r\n                          </InputGroup.Prepend>\r\n                          <FormControl defaultValue={this.state.dataScaleY} readOnly\r\n                          />\r\n                      </InputGroup>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCropper;\r\n"],"sourceRoot":""}