{"version":3,"sources":["App/components/Prism.js","Demo/AppPages/ToDo/Notes/Note.js","Demo/AppPages/ToDo/Notes/Board.js","Demo/AppPages/ToDo/Notes.js"],"names":["prism","props","theme","require","defaultProps","code","language","className","style","tokens","getLineProps","getTokenProps","map","line","i","key","token","Note","state","editing","position","this","left","xPos","randomBetween","window","innerWidth","top","yPos","innerHeight","updatePosition","nextProps","e","index","dataTransfer","setData","min","max","Math","ceil","random","setState","onChange","newText","value","onRemove","content","save","draggable","onDragStart","onDoubleClick","edit","onClick","remove","children","renderNoteBody","ref","defaultValue","renderForm","renderDisplay","Component","initialNotes","note","Board","notes","JSON","parse","localStorage","getItem","length","single","add","setItem","stringify","uniqueId","text","push","id","nextId","saveToStorage","splice","update","bind","onDrag","preventDefault","noteId","getData","clientX","clientY","onDragOver","onDrop","renderNotes","mock","Notes","showTape","showOutput","showTitle","showFooter","output","colors","showCustomColors","showMock","toggleValue","fetchMock","target","name","default","wrapperStyle","showBound","height","width","background","border","overflow","padding","Row","Col","Card","Header","Title","as","Body","md","Form","Group","Control","type","defaultChecked","Label","htmlFor","tape","float","undefined","title","footer","display","Prism","React"],"mappings":"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","file":"static/js/165.79aa3a66.chunk.js","sourcesContent":["import React from 'react';\r\nimport Highlight, {defaultProps} from \"prism-react-renderer\";\r\n\r\nconst prism = (props) => {\r\n    const theme = require('prism-react-renderer/themes/dracula'); // dracula, duotoneDark, duotoneLight, nightOwl, oceanicNext, shadesOfPurple, vsDark, vsDarkPlus\r\n    return (\r\n        <Highlight {...defaultProps} theme={theme} code={props.code} language={props.language}>\r\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n                <div className=\"m-t-15\">\r\n                    <pre className={className} style={style}>\r\n                        <code className=\"language-markup\">\r\n                            {tokens.map((line, i) => (\r\n                                <div {...getLineProps({ line, key: i })}>\r\n                                    {line.map((token, key) => (\r\n                                        <span {...getTokenProps({ token, key })} />\r\n                                    ))}\r\n                                </div>\r\n                            ))}\r\n                        </code>\r\n                    </pre>\r\n                </div>\r\n            )}\r\n        </Highlight>\r\n    );\r\n};\r\n\r\nexport default prism;","import React, { Component } from \"react\";\r\n\r\nconst saveText = \"SAVE\";\r\nconst removeToolTipText = \"Remove Note\";\r\n\r\nexport default class Note extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editing: false\r\n        };\r\n    }\r\n\r\n    updatePosition({position}) {\r\n        this.style = {\r\n            left: (position ? position.xPos : this.randomBetween(0, window.innerWidth - 280) + \"px\"),\r\n            top: (position ? position.yPos : this.randomBetween(0, window.innerHeight - 280) + \"px\")\r\n        };\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.updatePosition(this.props);\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        this.updatePosition(nextProps);\r\n    }\r\n\r\n    onDragStart(e) {\r\n        const { index } = this.props;\r\n        e.dataTransfer.setData(\"application/x-note\", index);\r\n    }\r\n\r\n    // Get random position\r\n    randomBetween(min, max) {\r\n        return (min + Math.ceil(Math.random() * max));\r\n    }\r\n\r\n    // Turn on edit moge\r\n    edit() {\r\n        this.setState({editing: true});\r\n    }\r\n\r\n    // Save edits\r\n    save() {\r\n        const { index } = this.props;\r\n        this.props.onChange(this.newText.value, index);\r\n        this.setState({editing: false});\r\n    }\r\n\r\n    // Remove note\r\n    remove() {\r\n        const { index } = this.props;\r\n        this.props.onRemove(index);\r\n    }\r\n\r\n    // Render note body\r\n    renderNoteBody(content, save) {\r\n        return (\r\n            <div draggable=\"true\" onDragStart={(e) => this.onDragStart(e)} onDoubleClick={() => this.edit()} className=\"note\" style={this.style}>\r\n                <article>\r\n                    <header className=\"note__header\">\r\n                        <div className=\"wrapper-tooltip\">\r\n                            <span onClick={() => this.remove()} className=\"close hairline\"></span>\r\n                            <div className=\"tooltip\">{removeToolTipText}</div>\r\n                        </div>\r\n                    </header>\r\n                    <div className=\"note__content\">{content}</div>\r\n                    <footer className=\"note__footer\">\r\n                        <div className=\"note__fold\"></div>\r\n                        {save ? <div className=\"note__save\" onClick={() => this.save()}>{saveText}</div> : \"\"}\r\n                    </footer>\r\n                </article>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Render note preview\r\n    renderDisplay() {\r\n        const { children } = this.props;\r\n        return this.renderNoteBody(children);\r\n    }\r\n\r\n    // Render note edit mode\r\n    renderForm() {\r\n        const { children } = this.props;\r\n        const content = (\r\n            <div>\r\n                <textarea ref={ref => this.newText = ref} defaultValue={children} className=\"note__textarea\"/>\r\n            </div>\r\n        );\r\n\r\n        return this.renderNoteBody(content, true);\r\n    }\r\n\r\n    render() {\r\n        const { editing } = this.state;\r\n        return (editing ? this.renderForm() : this.renderDisplay());\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport Note from \"./Note\";\r\n\r\nconst newNoteText = \"New note :-)\";\r\nconst newNoteButtonText = \"ADD NEW NOTE\";\r\n\r\nconst initialNotes = [\r\n    {\r\n        note: \"Industry's standard dummy text ever since the 1500s\",\r\n        position: false\r\n    },\r\n    {\r\n        note: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\r\n        position: false\r\n    },\r\n    {\r\n        note: \"The point of using Lorem Ipsum is that it has a more-or-less\",\r\n        position: false\r\n    },\r\n    {\r\n        note: \"A collection of textile samples lay spread out on the table One morning, when Gregor Samsa woke from troubled.\",\r\n        position: false\r\n    },\r\n    {\r\n        note: \"There are many variations of passages of Lorem Ipsum\",\r\n        position: false\r\n    }\r\n];\r\n\r\nexport default class Board extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            notes: []\r\n        };\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        // Get notes from local storage\r\n\r\n        const notes = JSON.parse(localStorage.getItem(\"notesStorage\")) || [];\r\n        if (notes.length > 0) {\r\n            notes.map(single => {\r\n                this.add(single.note, single.position);\r\n                return false;\r\n            });\r\n        } else {\r\n            initialNotes.map(single => {\r\n                this.add(single.note, single.position);\r\n                return false;\r\n            });\r\n        }\r\n    }\r\n\r\n    // Save to localStorage\r\n    saveToStorage(notes) {\r\n        this.setState({notes});\r\n        localStorage.setItem(\"notesStorage\", JSON.stringify(notes));\r\n    }\r\n\r\n    // Get next ID\r\n    nextId() {\r\n        this.uniqueId = this.uniqueId || 0;\r\n        return this.uniqueId++;\r\n    }\r\n\r\n    // Add note to localStorage and state\r\n    add(text, position) {\r\n        const { notes } = this.state;\r\n        notes.push({\r\n            id: this.nextId(this),\r\n            note: text,\r\n            position\r\n        });\r\n\r\n        this.saveToStorage(notes);\r\n    }\r\n\r\n    // Update note text\r\n    update(newText, i) {\r\n        const { notes } = this.state;\r\n        notes[i].note = newText;\r\n        this.saveToStorage(notes);\r\n    }\r\n\r\n    // Update note position\r\n    updatePosition(position, i) {\r\n        const { notes } = this.state;\r\n        notes[i].position = position;\r\n        this.saveToStorage(notes);\r\n    }\r\n\r\n    // Remove note\r\n    remove(i) {\r\n        const { notes } = this.state;\r\n        notes.splice(i, 1);\r\n        this.saveToStorage(notes);\r\n    }\r\n\r\n    // Render Notes\r\n    renderNotes(note, i) {\r\n        return (\r\n            <Note key={note.id}\r\n                  index={i}\r\n                  position={note.position}\r\n                  onChange={this.update.bind(this)}\r\n                  onDrag={this.updatePosition.bind(this)}\r\n                  onRemove={this.remove.bind(this)} >\r\n                {note.note}\r\n            </Note>\r\n        );\r\n    }\r\n\r\n    onDragOver(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    onDrop(e) {\r\n        let noteId = e.dataTransfer.getData(\"application/x-note\");\r\n        let position = {xPos: e.clientX, yPos: e.clientY};\r\n        this.updatePosition(position, noteId);\r\n    }\r\n\r\n    render() {\r\n        const { notes } = this.state;\r\n        return (\r\n            <div className=\"board\" onDragOver={(e) => this.onDragOver(e)} onDrop={(e) => this.onDrop(e)}>\r\n                <header className=\"main-header\">\r\n                    <div className=\"main-header__text fadein\" onClick={this.add.bind(this, newNoteText, false)}>\r\n                        {newNoteButtonText}\r\n                    </div>\r\n                </header>\r\n                {notes.map(this.renderNotes.bind(this))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {Row, Col, Card, Form} from 'react-bootstrap';\r\nimport Stickies from 'react-stickies';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Prism from \"../../../App/components/Prism\";\r\nimport Board from \"../ToDo/Notes/Board\";\r\n\r\nconst mock = [\r\n    {\r\n        \"id\": \"3effea2c-fc90-98e0-51d0-22c32efb2177\",\r\n        \"text\": \"Hey I am Ajain... \",\r\n        \"title\": \"Hello\",\r\n        \"grid\": {\r\n            \"i\": \"3effea2c-fc90-98e0-51d0-22c32efb2177\",\r\n            \"x\": 0,\r\n            \"y\": null,\r\n            \"w\": 2,\r\n            \"h\" : 2,\r\n            \"isDraggable\": false\r\n        },\r\n        \"contentEditable\": true,\r\n        \"timeStamp\": \"13 Feb 2017 2:53 PM\"\r\n    },\r\n    {\r\n        \"id\": \"3effea2c-fc90-98e0-51d0-22c32efb2178\",\r\n        \"text\": \"If you liked stickies... contribute by liking it... \",\r\n        \"title\": \"Contribute\",\r\n        \"grid\": {\r\n            \"i\": \"3effea2c-fc90-98e0-51d0-22c32efb2178\",\r\n            \"x\": 4,\r\n            \"y\": 0,\r\n            \"w\": 4,\r\n            \"h\" : 4,\r\n            \"isDraggable\": false\r\n        },\r\n        \"contentEditable\": true,\r\n        \"timeStamp\": \"13 Feb 2017 2:53 PM\"\r\n    }\r\n];\r\n\r\nclass Notes extends React.Component {\r\n    static defaultProps = {\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            notes: [],\r\n            showTape: false,\r\n            showOutput: true,\r\n            showTitle: true,\r\n            showFooter: true,\r\n            output: '',\r\n            colors: ['#FFFFFF'],\r\n            showCustomColors: false,\r\n            showMock: false\r\n        };\r\n        this.toggleValue = this.toggleValue.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.fetchMock = this.fetchMock.bind(this);\r\n    }\r\n\r\n    toggleValue(e) {\r\n        this.setState({\r\n            [e.target.name]: !this.state[e.target.name]\r\n        });\r\n    }\r\n\r\n    onChange(notes) {\r\n        this.setState({\r\n            output: JSON.stringify(notes, null, 2),\r\n            notes\r\n        });\r\n    }\r\n\r\n    fetchMock() {\r\n        this.setState({\r\n            showMock: true\r\n        }, () => {\r\n            this.setState({\r\n                notes: mock.default\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let wrapperStyle = {};\r\n        if (this.state.showBound) {\r\n            wrapperStyle = {\r\n                height: '700px',\r\n                width: '700px',\r\n                background: 'rgba(0, 0, 0, 0.2)',\r\n                border: '2px solid #fff',\r\n                overflow: 'auto',\r\n                padding: '10px'\r\n            };\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as='h5'>Basic Notes</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Board/>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as='h5'>Sticky Notes</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col md={3}>\r\n                                        <Form.Group>\r\n                                            <div className=\"checkbox d-inline checkbox-fill checkbox-info\">\r\n                                                <Form.Control type=\"checkbox\" name=\"showTitle\" id=\"show-title\" value=\"show_title\" defaultChecked={this.state.showTitle} onChange={this.toggleValue} />\r\n                                                <Form.Label htmlFor=\"show-title\" className=\"cr\">Show Title</Form.Label>\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <div className=\"checkbox d-inline checkbox-fill checkbox-info\">\r\n                                                <Form.Control type=\"checkbox\" name=\"showCustomColors\" id=\"custom-color\" value=\"show_custom_colors\" defaultChecked={this.state.showCustomColors} onChange={this.toggleValue} />\r\n                                                <Form.Label htmlFor=\"custom-color\" className=\"cr\">Custom Colors</Form.Label>\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <div className=\"checkbox d-inline checkbox-fill checkbox-info\">\r\n                                                <Form.Control type=\"checkbox\" name=\"showTape\" id=\"show-tape\" value=\"show_tape\" defaultChecked={this.state.showTape} onChange={this.toggleValue} />\r\n                                                <Form.Label htmlFor=\"show-tape\" className=\"cr\">Show Tape</Form.Label>\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <div className=\"checkbox d-inline checkbox-fill checkbox-info\">\r\n                                                <Form.Control type=\"checkbox\" name=\"showOutput\" id=\"show-output\" value=\"show_output\" defaultChecked={this.state.showOutput} onChange={this.toggleValue} />\r\n                                                <Form.Label htmlFor=\"show-output\" className=\"cr\">Show Output</Form.Label>\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <div className=\"checkbox d-inline checkbox-fill checkbox-info\">\r\n                                                <Form.Control type=\"checkbox\" name=\"showFooter\" id=\"show-footer\" value=\"show_title\" defaultChecked={this.state.showFooter} onChange={this.toggleValue} />\r\n                                                <Form.Label htmlFor=\"show-footer\" className=\"cr\">Show Footer</Form.Label>\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <div className=\"checkbox d-inline checkbox-fill checkbox-info\">\r\n                                                <Form.Control type=\"checkbox\" name=\"showMock\" id=\"show-mock\" value=\"show_mock\" defaultChecked={this.state.showMock} onChange={this.fetchMock} />\r\n                                                <Form.Label htmlFor=\"show-mock\" className=\"cr\">Load Mock Data</Form.Label>\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col md={9}>\r\n                                        <Stickies\r\n                                            notes={this.state.notes}\r\n                                            tape={this.state.showTape}\r\n                                            style={{ float: 'left' }}\r\n                                            colors={this.state.showCustomColors ? this.state.colors : undefined}\r\n                                            title={this.state.showTitle}\r\n                                            footer={this.state.showFooter}\r\n                                            onChange={this.onChange}\r\n                                            wrapperStyle={wrapperStyle}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"config\">\r\n                                            <div className=\"output\" style={{ display: this.state.showOutput ? 'block' : 'none' }}>\r\n                                                <h3>Output JSON</h3>\r\n                                                <hr/>\r\n                                                <div style={{height: '500px'}}>\r\n                                                    <PerfectScrollbar>\r\n                                                        <Prism code={this.state.output} language=\"json\" />\r\n                                                    </PerfectScrollbar>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Notes;"],"sourceRoot":""}