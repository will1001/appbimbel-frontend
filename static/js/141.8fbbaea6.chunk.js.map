{"version":3,"sources":["App/components/MainCard.js","App/components/UcFirst.js","Demo/UIElements/Basic/Button.js"],"names":["MainCard","state","isOption","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","this","className","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","children","Component","windowSize","UcFirst","string","text","charAt","toUpperCase","slice","React","BasicButton","buttonVariants","buttonOptions","variant","icon","basicButtons","map","idx","key","overlay","outlineButtons","squareButtons","disabledButtons","disabled","roundedButtons","glowButtons","iconButtons","button","outlineIconButtons","onlyIconButtons","onlyOutlineIconButtons","onlyIconRoundedButtons","onlyOutlineIconRoundedButtons","basicDropdownButton","eventKey","splitDropdownButton","Divider","basicOutlineDropdownButton","splitOutlineDropdownButton","basicIconDropdownButton","outlineIconDropdownButton","basicIconDropdownRoundedButton","outlineIconDropdownRoundedButton","md","size","type","defaultValue","value","name","aria-label","xl","ButtonGroup","vertical"],"mappings":"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","file":"static/js/141.8fbbaea6.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: false,\r\n        cardRemove: false\r\n    };\r\n\r\n    cardReloadHandler = () => {\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [];\r\n\r\n        if (this.state.isOption) {\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-horizontal\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n","import React from 'react';\r\n\r\nclass UcFirst extends React.Component {\r\n    render() {\r\n        const string = this.props.text;\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n}\r\n\r\nexport default UcFirst;","import React from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button,\r\n    OverlayTrigger,\r\n    Tooltip,\r\n    ButtonToolbar,\r\n    ToggleButtonGroup,\r\n    ToggleButton,\r\n    Dropdown,\r\n    DropdownButton,\r\n    SplitButton,\r\n    ButtonGroup\r\n} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Card from \"../../../App/components/MainCard\";\r\nimport UcFirst from \"../../../App/components/UcFirst\";\r\n\r\nclass BasicButton extends React.Component {\r\n    render() {\r\n        const buttonVariants = [\r\n            'primary',\r\n            'secondary',\r\n            'success',\r\n            'danger',\r\n            'warning',\r\n            'info',\r\n            'light',\r\n            'dark',\r\n        ];\r\n\r\n        const buttonOptions = [\r\n            {variant: 'primary', icon:'feather icon-thumbs-up'},\r\n            {variant: 'secondary', icon:'feather icon-camera'},\r\n            {variant: 'success', icon:'feather icon-check-circle'},\r\n            {variant: 'danger', icon:'feather icon-slash'},\r\n            {variant: 'warning', icon:'feather icon-alert-triangle'},\r\n            {variant: 'info', icon:'feather icon-info'}\r\n        ];\r\n\r\n        const basicButtons = buttonVariants.map((variant, idx) => (\r\n            <OverlayTrigger key={idx} overlay={<Tooltip>{variant}</Tooltip>}>\r\n                <Button variant={variant}><UcFirst text={variant} /></Button>\r\n            </OverlayTrigger>\r\n        ));\r\n\r\n        const outlineButtons = buttonVariants.map((variant, idx) => (\r\n            <OverlayTrigger key={idx} overlay={<Tooltip>{'outline-'+variant}</Tooltip>}>\r\n                <Button variant={'outline-'+variant}><UcFirst text={variant} /></Button>\r\n            </OverlayTrigger>\r\n        ));\r\n\r\n        const squareButtons = buttonVariants.map((variant, idx) => <Button key={idx} className='btn-square' variant={variant}><UcFirst text={variant} /></Button>);\r\n        const disabledButtons = buttonVariants.map((variant, idx) => <Button key={idx} disabled variant={variant}><UcFirst text={variant} /></Button>);\r\n        const roundedButtons = buttonVariants.map((variant, idx) => <Button key={idx} className='btn-rounded' variant={variant}><UcFirst text={variant} /></Button>);\r\n\r\n        const glowButtons = buttonVariants.map((variant, idx) => (\r\n            <OverlayTrigger key={idx} overlay={<Tooltip>{'btn-glow-'+variant}</Tooltip>}>\r\n                <Button className={'btn-glow-'+variant} variant={variant}><UcFirst text={variant} /></Button>\r\n            </OverlayTrigger>\r\n        ));\r\n\r\n        const iconButtons = buttonOptions.map((button, idx) => (\r\n                <Button key={idx} variant={button.variant}>\r\n                    <i className={button.icon} />\r\n                    <UcFirst text={button.variant} />\r\n                </Button>\r\n            )\r\n        );\r\n\r\n        const outlineIconButtons = buttonOptions.map((button, idx) => (\r\n                <Button key={idx} variant={'outline-'+button.variant}>\r\n                    <i className={button.icon} />\r\n                    <UcFirst text={button.variant} />\r\n                </Button>\r\n            )\r\n        );\r\n\r\n        const onlyIconButtons = buttonOptions.map((button, idx) => (\r\n                <Button className='btn-icon' key={idx} variant={button.variant}>\r\n                    <i className={button.icon} />\r\n                </Button>\r\n            )\r\n        );\r\n\r\n        const onlyOutlineIconButtons = buttonOptions.map((button, idx) => (\r\n                <Button className='btn-icon' key={idx} variant={'outline-'+button.variant}>\r\n                    <i className={button.icon} />\r\n                </Button>\r\n            )\r\n        );\r\n\r\n        const onlyIconRoundedButtons = buttonOptions.map((button, idx) => (\r\n                <Button className='btn-icon btn-rounded' key={idx} variant={button.variant}>\r\n                    <i className={button.icon} />\r\n                </Button>\r\n            )\r\n        );\r\n\r\n        const onlyOutlineIconRoundedButtons = buttonOptions.map((button, idx) => (\r\n                <Button className='btn-icon btn-rounded' key={idx} variant={'outline-'+button.variant}>\r\n                    <i className={button.icon} />\r\n                </Button>\r\n            )\r\n        );\r\n\r\n        const basicDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <UcFirst text={button.variant} />;\r\n                return (\r\n                <DropdownButton\r\n                    title={title}\r\n                    variant={button.variant}\r\n                    id={`dropdown-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                </DropdownButton>\r\n            );\r\n        });\r\n\r\n        const splitDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <UcFirst text={button.variant} />;\r\n                return (\r\n                <SplitButton\r\n                    title={title}\r\n                    variant={button.variant}\r\n                    id={`dropdown-split-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                    className=\"mr-2 mb-2\"\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                </SplitButton>\r\n            );\r\n        });\r\n\r\n        const basicOutlineDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <UcFirst text={button.variant} />;\r\n                return (\r\n                <DropdownButton\r\n                    title={title}\r\n                    variant={'outline-'+button.variant}\r\n                    id={`dropdown-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                </DropdownButton>\r\n            );\r\n        });\r\n\r\n        const splitOutlineDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <UcFirst text={button.variant} />;\r\n                return (\r\n                <SplitButton\r\n                    title={title}\r\n                    variant={'outline-'+button.variant}\r\n                    id={`dropdown-split-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                    className=\"mr-2 mb-2\"\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                </SplitButton>\r\n            );\r\n        });\r\n\r\n        const basicIconDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <i className={button.icon} />;\r\n                return (\r\n                    <DropdownButton\r\n                        title={title}\r\n                        variant={button.variant}\r\n                        id={`dropdown-variants-${button.variant}`}\r\n                        key={button.variant}\r\n                        className='drp-icon'\r\n                    >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                    </DropdownButton>\r\n                );\r\n            });\r\n\r\n        const outlineIconDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <i className={button.icon} />;\r\n                return (\r\n                    <DropdownButton\r\n                        title={title}\r\n                        variant={'outline-'+button.variant}\r\n                        id={`dropdown-variants-${button.variant}`}\r\n                        key={button.variant}\r\n                        className='drp-icon'\r\n                    >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                    </DropdownButton>\r\n                );\r\n            });\r\n\r\n        const basicIconDropdownRoundedButton = buttonOptions.map(\r\n            button => {\r\n                const title = <i className={button.icon} />;\r\n                return (\r\n                    <DropdownButton\r\n                        title={title}\r\n                        variant={button.variant}\r\n                        id={`dropdown-variants-${button.variant}`}\r\n                        key={button.variant}\r\n                        className='drp-icon btn-rounded'\r\n                    >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                    </DropdownButton>\r\n                );\r\n            });\r\n\r\n        const outlineIconDropdownRoundedButton = buttonOptions.map(\r\n            button => {\r\n                const title = <i className={button.icon} />;\r\n                return (\r\n                    <DropdownButton\r\n                        title={title}\r\n                        variant={'outline-'+button.variant}\r\n                        id={`dropdown-variants-${button.variant}`}\r\n                        key={button.variant}\r\n                        className='drp-icon btn-rounded'\r\n                    >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                    </DropdownButton>\r\n                );\r\n            });\r\n\r\n        return (\r\n            <Aux>\r\n                <Row className='btn-page'>\r\n                    <Col>\r\n                        <Card title=\"Default\">\r\n                            <p>use <code>variant=\"*\"</code> props in component <code>Button</code> to get various button</p>\r\n                            {basicButtons}\r\n                            <OverlayTrigger overlay={<Tooltip>link</Tooltip>}>\r\n                                <Button variant=\"link\">Link</Button>\r\n                            </OverlayTrigger>\r\n                        </Card>\r\n                        <Card title=\"Outline\">\r\n                            <p>use <code>variant=\"outline-*\"</code> props in component <code>Button</code> to get various outline button</p>\r\n                            {outlineButtons}\r\n                        </Card>\r\n                        <Card title=\"Square Button\">\r\n                            <p>use <code>className=\"btn-square\"</code> props in component <code>Button</code> to get square button</p>\r\n                            {squareButtons}\r\n                        </Card>\r\n                        <Card title=\"Disabled Button\">\r\n                            <p>use <code>disabled</code> props in component <code>Button</code> to get disabled button</p>\r\n                            {disabledButtons}\r\n                        </Card>\r\n                        <Card title=\"Rounded Button\">\r\n                            <p>use <code>className=\"btn-rounded\"</code> props in component <code>Button</code> to get rounded button</p>\r\n                            {roundedButtons}\r\n                        </Card>\r\n                        <Card title=\"Glow Button\">\r\n                            <p>use <code>className=\"btn-glow\"</code> props in component <code>Button</code> to get glow button</p>\r\n                            {glowButtons}\r\n                        </Card>\r\n                        <Card title=\"Shadow Button\">\r\n                            <p>use <code>className=\".shadow-[ 1 / 2 / 3 / 4 / 5 ]\"</code> props in component <code>Button</code> to get shadow button</p>\r\n                            <OverlayTrigger overlay={<Tooltip>shadow-1</Tooltip>}>\r\n                                <Button className=\"shadow-1\" variant='primary'>Shadow 1</Button>\r\n                            </OverlayTrigger>\r\n                            <OverlayTrigger overlay={<Tooltip>shadow-2</Tooltip>}>\r\n                                <Button className=\"shadow-2\" variant='success'>Shadow 2</Button>\r\n                            </OverlayTrigger>\r\n                            <OverlayTrigger overlay={<Tooltip>shadow-3</Tooltip>}>\r\n                                <Button className=\"shadow-3\" variant='danger'>Shadow 3</Button>\r\n                            </OverlayTrigger>\r\n                            <OverlayTrigger overlay={<Tooltip>shadow-4</Tooltip>}>\r\n                                <Button className=\"shadow-4\" variant='warning'>Shadow 4</Button>\r\n                            </OverlayTrigger>\r\n                            <OverlayTrigger overlay={<Tooltip>shadow-5</Tooltip>}>\r\n                                <Button className=\"shadow-5\" variant='info'>Shadow 5</Button>\r\n                            </OverlayTrigger>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='btn-page'>\r\n                    <Col md={6}>\r\n                        <Card title=\"Sizes [ Large ]\">\r\n                            <p>use <code>size=\"lg\"</code> props in component <code>Button</code> to get large button</p>\r\n                            <Button variant='primary' size='lg'>Large Button</Button>\r\n                            <Button variant='secondary' size='lg'>Large Button</Button>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Sizes [ Small ]\">\r\n                            <p>use <code>size=\"sm\"</code> props in component <code>Button</code> to get small button</p>\r\n                            <Button variant='primary' size='sm'>Small Button</Button>\r\n                            <Button variant='secondary' size='sm'>Small Button</Button>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Checkbox Button\">\r\n                            <ButtonToolbar>\r\n                                <ToggleButtonGroup type=\"checkbox\" defaultValue={1}>\r\n                                    <ToggleButton variant='secondary' value={1}>Checkbox</ToggleButton>\r\n                                    <ToggleButton variant='secondary' value={2}>Checkbox</ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Radio Button\">\r\n                            <ButtonToolbar>\r\n                                <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\r\n                                    <ToggleButton variant='secondary' value={1}>Active</ToggleButton>\r\n                                    <ToggleButton variant='secondary' value={2}>Radio</ToggleButton>\r\n                                    <ToggleButton variant='secondary' value={3}>Radio</ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Button With Icon\">\r\n                            {iconButtons}\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Outline Icon Buttons\">\r\n                            {outlineIconButtons}\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Only Icon\">\r\n                            {onlyIconButtons}\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Outline Icon\">\r\n                            {onlyOutlineIconButtons}\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Icon Button Rounded\">\r\n                            {onlyIconRoundedButtons}\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Icon Outline Button Rounded\">\r\n                            {onlyOutlineIconRoundedButtons}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='btn-page'>\r\n                    <Col>\r\n                        <Card title=\"Basic Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {basicDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                        <Card title=\"Split Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {splitDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                        <Card title=\"Basic Outline Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {basicOutlineDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                        <Card title=\"Split Outline Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {splitOutlineDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='btn-page'>\r\n                    <Col md={6}>\r\n                        <Card title=\"Basic Icon Dropdown\">\r\n                            <ButtonToolbar>\r\n                                {basicIconDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Outline Icon Dropdown\">\r\n                            <ButtonToolbar>\r\n                                {outlineIconDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Basic Rounded Icon Dropdown\">\r\n                            <ButtonToolbar>\r\n                                {basicIconDropdownRoundedButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Outline Rounded Icon Dropdown\">\r\n                            <ButtonToolbar>\r\n                                {outlineIconDropdownRoundedButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Basic Button Group\">\r\n                            <ButtonGroup aria-label=\"Basic example\">\r\n                                <Button variant=\"secondary\">Left</Button>\r\n                                <Button variant=\"secondary\">Middle</Button>\r\n                                <Button variant=\"secondary\">Right</Button>\r\n                            </ButtonGroup>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Button Toolbar\">\r\n                            <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                                <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n                                    <Button variant=\"secondary\">1</Button>\r\n                                    <Button variant=\"secondary\">2</Button>\r\n                                    <Button variant=\"secondary\">3</Button>\r\n                                    <Button variant=\"secondary\">4</Button>\r\n                                </ButtonGroup>\r\n\r\n                                <ButtonGroup className=\"mr-2\" aria-label=\"Second group\">\r\n                                    <Button variant=\"secondary\">5</Button>\r\n                                    <Button variant=\"secondary\">6</Button>\r\n                                    <Button variant=\"secondary\">7</Button>\r\n                                </ButtonGroup>\r\n\r\n                                <ButtonGroup aria-label=\"Third group\">\r\n                                    <Button variant=\"secondary\">8</Button>\r\n                                </ButtonGroup>\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='btn-page'>\r\n                    <Col>\r\n                        <Card title=\"Button Toolbar Size\">\r\n                            <Row>\r\n                                <Col xl={4} md={12}>\r\n                                    <p>use <code>size=\"lg\"</code> props in component <code>ButtonGroup</code> to get large button toolbar</p>\r\n                                    <ButtonGroup size=\"lg\">\r\n                                        <Button variant=\"secondary\">Left</Button>\r\n                                        <Button variant=\"secondary\">Middle</Button>\r\n                                        <Button variant=\"secondary\">Right</Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                                <Col xl={4} md={6}>\r\n                                    <p>default toolbar size</p>\r\n                                    <ButtonGroup>\r\n                                        <Button variant=\"secondary\">Left</Button>\r\n                                        <Button variant=\"secondary\">Middle</Button>\r\n                                        <Button variant=\"secondary\">Right</Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                                <Col xl={4} md={6}>\r\n                                    <p>use <code>size=\"sm\"</code> props in component <code>ButtonGroup</code> to get small button toolbar</p>\r\n                                    <ButtonGroup size=\"sm\">\r\n                                        <Button variant=\"secondary\">Left</Button>\r\n                                        <Button variant=\"secondary\">Middle</Button>\r\n                                        <Button variant=\"secondary\">Right</Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='btn-page'>\r\n                    <Col md={6}>\r\n                        <Card title=\"Nesting\">\r\n                            <ButtonGroup>\r\n                                <Button variant='secondary'>1</Button>\r\n                                <Button variant='secondary'>2</Button>\r\n                                <DropdownButton variant='secondary' as={ButtonGroup} title=\"Dropdown\" id=\"bg-nested-dropdown\">\r\n                                    <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\r\n                                    <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\r\n                                </DropdownButton>\r\n                            </ButtonGroup>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Vertical Variation\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <ButtonGroup vertical>\r\n                                        <Button variant='secondary' className=\"mr-0 mb-0\">1</Button>\r\n                                        <Button variant='secondary' className=\"mr-0 mb-0\">2</Button>\r\n                                        <Button variant='secondary' className=\"mr-0 mb-0\">3</Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                                <Col>\r\n                                    <ButtonGroup vertical>\r\n                                        <Button variant='secondary' className=\"mr-0 mb-0\">1</Button>\r\n                                        <Button variant='secondary' className=\"mr-0 mb-0\">2</Button>\r\n                                        <DropdownButton variant='secondary' as={ButtonGroup} title=\"Dropdown\" id=\"bg-nested-dropdown\">\r\n                                            <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\r\n                                            <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\r\n                                        </DropdownButton>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BasicButton;\r\n"],"sourceRoot":""}