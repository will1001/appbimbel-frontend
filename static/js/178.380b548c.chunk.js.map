{"version":3,"sources":["Demo/Forms/FormsValidation.js","App/components/AnimatedModal.js"],"names":["MaskWithValidation","props","handleChange","e","checkError","onChange","inputRef","React","createRef","this","current","inputElement","Fragment","ref","filterProps","displayErrorMessage","displaySuccessMessage","BaseFormControl","FormsValidation","state","firstName","lastName","email","password","confirmPassword","phone","description","url","gear","basic","custom","chkBasic","chkCustom","checkMeSwitch","showModal","handleCheckboxChange","value","setState","target","name","handleSubmit","formData","inputs","preventDefault","handleErrorSubmit","errorInputs","matchPassword","Header","Title","as","Body","onSubmit","onErrorSubmit","Row","Group","Col","md","Label","htmlFor","id","placeholder","required","autoComplete","minLength","type","validator","isEmail","errorMessage","pattern","className","successMessage","mask","label","sm","multiline","rows","defaultValue","inline","fileType","maxFileSize","RadioGroup","valueSelected","RadioItem","animation","modalClosed","Footer","onClick","Component","AnimatedModal","visible","closemodal","children"],"mappings":"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","file":"static/js/178.380b548c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Row, Col, Card, Form, Button} from 'react-bootstrap';\r\nimport { ValidationForm, TextInput, BaseFormControl, SelectGroup, FileInput, Checkbox, Radio } from 'react-bootstrap4-form-validation';\r\nimport MaskedInput from 'react-text-mask';\r\nimport validator from 'validator';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport AnimatedModal from \"../../App/components/AnimatedModal\";\r\n\r\nclass MaskWithValidation extends BaseFormControl {\r\n    constructor(props){\r\n        super(props);\r\n        this.inputRef = React.createRef();\r\n    }\r\n\r\n    getInputRef(){\r\n        return this.inputRef.current.inputElement;\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.checkError();\r\n        if(this.props.onChange) this.props.onChange(e);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <MaskedInput ref={this.inputRef} {...this.filterProps()} onChange={this.handleChange}/>\r\n                { this.displayErrorMessage() }\r\n                { this.displaySuccessMessage() }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nclass FormsValidation extends React.Component {\r\n    state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        phone:\"\",\r\n        description: \"\",\r\n        url: \"\",\r\n        gear: \"\",\r\n        basic: \"\",\r\n        custom: \"\",\r\n        chkBasic: false,\r\n        chkCustom: false,\r\n        checkMeSwitch: false,\r\n        showModal: false\r\n    };\r\n\r\n    handleCheckboxChange = (e, value) => {\r\n        this.setState({\r\n            [e.target.name]: value\r\n        })\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = (e, formData, inputs) => {\r\n        e.preventDefault();\r\n        //alert(JSON.stringify(formData, null, 2));\r\n        this.setState({ showModal: true });\r\n    };\r\n\r\n    handleErrorSubmit = (e, formData, errorInputs) => {\r\n        //console.log(errorInputs);\r\n    };\r\n\r\n    matchPassword = (value) => {\r\n        return value && value === this.state.password;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Form Validation</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <ValidationForm onSubmit={this.handleSubmit} onErrorSubmit={this.handleErrorSubmit}>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"firstName\">First name</Form.Label>\r\n                                            <TextInput\r\n                                                name=\"firstName\"\r\n                                                id=\"firstName\"\r\n                                                placeholder=\"First Name\"\r\n                                                required value={this.state.firstName}\r\n                                                onChange={this.handleChange}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"lastName\">Last name</Form.Label>\r\n                                            <TextInput\r\n                                                name=\"lastName\"\r\n                                                id=\"lastName\"\r\n                                                placeholder=\"Last Name\"\r\n                                                minLength=\"4\"\r\n                                                value={this.state.lastName}\r\n                                                onChange={this.handleChange}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                                            <TextInput\r\n                                                name=\"email\"\r\n                                                id=\"email\"\r\n                                                type=\"email\"\r\n                                                placeholder=\"Email Address\"\r\n                                                validator={validator.isEmail}\r\n                                                errorMessage={{validator:\"Please enter a valid email\"}}\r\n                                                value={this.state.email}\r\n                                                onChange={this.handleChange}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                                            <TextInput\r\n                                                name=\"password\"\r\n                                                id=\"password\"\r\n                                                type=\"password\"\r\n                                                placeholder=\"Password\"\r\n                                                required\r\n                                                pattern=\"(?=.*[A-Z]).{6,}\"\r\n                                                errorMessage={{required:\"Password is required\", pattern: \"Password should be at least 6 characters and contains at least one upper case letter\"}}\r\n                                                value={this.state.password}\r\n                                                onChange={this.handleChange}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"confirmPassword\">Confirm Password</Form.Label>\r\n                                            <TextInput\r\n                                                name=\"confirmPassword\"\r\n                                                id=\"confirmPassword\"\r\n                                                type=\"password\"\r\n                                                placeholder=\"Confirm Password\"\r\n                                                required\r\n                                                validator={this.matchPassword}\r\n                                                errorMessage={{required:\"Confirm password is required\", validator: \"Password does not match\"}}\r\n                                                value={this.state.confirmPassword}\r\n                                                onChange={this.handleChange}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"phone\">Phone</Form.Label>\r\n                                            <MaskWithValidation\r\n                                                name=\"phone\"\r\n                                                id=\"phone\"\r\n                                                placeholder=\"Contact Number\"\r\n                                                className=\"form-control\"\r\n                                                required\r\n                                                validator={(value) => value === \"(123) 456-7890\"}\r\n                                                value={this.state.phone}\r\n                                                onChange={this.handleChange}\r\n                                                successMessage=\"Looks good!\"\r\n                                                errorMessage={{validator: \"Please enter (123) 456-7890\"}}\r\n                                                mask={['(', /[1-9]/, /[0-9]/, /[0-9]/, ')', ' ', /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/]}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"url\">URL</Form.Label>\r\n                                            <TextInput\r\n                                                name=\"url\"\r\n                                                id=\"url\"\r\n                                                type=\"url\"\r\n                                                placeholder=\"Website\"\r\n                                                required\r\n                                                pattern=\"^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$\"\r\n                                                errorMessage={{required:\"URL is required\", pattern: 'URL is invalid.'}}\r\n                                                value={this.state.url}\r\n                                                onChange={this.handleChange}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"gear\">Gear</Form.Label>\r\n                                            <SelectGroup\r\n                                                name=\"gear\"\r\n                                                id=\"gear\"\r\n                                                value={this.state.gear}\r\n                                                required\r\n                                                errorMessage=\"Please select a gear.\"\r\n                                                onChange={this.handleChange}>\r\n                                                <option value=\"\">Please select a gear...</option>\r\n                                                <optgroup label=\"Climbing\">\r\n                                                    <option value=\"pitons\">Pitons</option>\r\n                                                    <option value=\"cams\">Cams</option>\r\n                                                    <option value=\"nuts\">Nuts</option>\r\n                                                    <option value=\"bolts\">Bolts</option>\r\n                                                    <option value=\"stoppers\">Stoppers</option>\r\n                                                    <option value=\"sling\">Sling</option>\r\n                                                </optgroup>\r\n                                                <optgroup label=\"Skiing\">\r\n                                                    <option value=\"skis\">Skis</option>\r\n                                                    <option value=\"skins\">Skins</option>\r\n                                                    <option value=\"poles\">Poles</option>\r\n                                                </optgroup>\r\n                                            </SelectGroup>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} sm=\"12\">\r\n                                            <Form.Label htmlFor=\"description\">Description</Form.Label>\r\n                                            <TextInput\r\n                                                name=\"description\"\r\n                                                id=\"description\"\r\n                                                placeholder=\"About Us\"\r\n                                                multiline\r\n                                                required\r\n                                                value={this.state.description}\r\n                                                onChange={this.handleChange}\r\n                                                rows=\"3\"\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} sm=\"6\" className=\"mb-5\">\r\n                                            <Form.Label htmlFor=\"description\">Switch</Form.Label>\r\n                                            <div className=\"switch\">\r\n                                                <Checkbox name=\"check-me\" label='' id=\"check-me\" defaultValue={this.state.checkMeSwitch} required inline onChange={this.handleCheckboxChange} />\r\n                                                <Form.Label>Check me</Form.Label>\r\n                                            </div>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"upload_avatar\">Upload Avatar</Form.Label>\r\n                                            <div className=\"custom-file\">\r\n                                                <FileInput\r\n                                                    name=\"avatar\"\r\n                                                    id=\"avatar\"\r\n                                                    required\r\n                                                    fileType={[\"png\", \"jpg\", \"jpeg\"]}\r\n                                                    maxFileSize=\"100 kb\"\r\n                                                    errorMessage={\r\n                                                        { required: \"Please upload a file\",\r\n                                                            fileType:\"Only .png or .jpg file is allowed\",\r\n                                                            maxFileSize: \"Max file size is 100 kb\"\r\n                                                        }\r\n                                                    }/>\r\n                                            </div>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"basic\">Radios</Form.Label>\r\n                                            <Radio.RadioGroup\r\n                                                name=\"basic\"\r\n                                                required\r\n                                                valueSelected={this.state.basic}\r\n                                                inline={false}\r\n                                                onChange={this.handleCheckboxChange}>\r\n                                                <Radio.RadioItem id=\"radio1\" label=\"Option one is this and that—be sure to include why it's great\" value=\"1\" />\r\n                                                <Radio.RadioItem id=\"radio2\" label=\"Option two can be something else and selecting it will deselect option one\" value=\"2\" />\r\n                                                <Radio.RadioItem id=\"radio3\" label=\"Option three is disabled\" value=\"3\" />\r\n                                            </Radio.RadioGroup>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"custom\">Custom Radios</Form.Label>\r\n                                            <div className=\"custom-controls-stacked radio\">\r\n                                                <Radio.RadioGroup\r\n                                                    name=\"custom\"\r\n                                                    required\r\n                                                    valueSelected={this.state.custom}\r\n                                                    inline={false}\r\n                                                    onChange={this.handleChange}>\r\n                                                    <Radio.RadioItem id=\"radio4\" label=\"Option one is this and that—be sure to include why it's great\" value=\"1\" />\r\n                                                    <Radio.RadioItem id=\"radio5\" label=\"Option two can be something else and selecting it will deselect option one\" value=\"2\" />\r\n                                                    <Radio.RadioItem id=\"radio6\" label=\"Option three is disabled\" value=\"3\" />\r\n                                                </Radio.RadioGroup>\r\n                                            </div>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"chkBasic\">Basic Checkbox</Form.Label>\r\n                                            <Checkbox name=\"chkBasic\" label=\"Check me out\" id=\"chkBasic\" value={this.state.chkBasic} required onChange={this.handleCheckboxChange} />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"chkCustom\">Custom Checkbox</Form.Label>\r\n                                            <div className=\"checkbox\">\r\n                                                <Checkbox name=\"chkCustom\" label=\"Check me\" id=\"chkCustom\" value={this.state.chkCustom} required onChange={this.handleCheckboxChange} />\r\n                                            </div>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} sm={12} className=\"mt-3\">\r\n                                            <Button type=\"submit\">Submit</Button>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                </ValidationForm>\r\n                                <AnimatedModal animation='slideInDown' showModal={this.state.showModal} modalClosed={() => this.setState({ showModal: false })}>\r\n                                    <Card>\r\n                                        <Card.Header className=\"bg-c-purple\">\r\n                                            <Card.Title as='h5'>User Information</Card.Title>\r\n                                        </Card.Header>\r\n                                        <Card.Body>\r\n                                            <ul>\r\n                                                <li><strong>Full Name:</strong> {this.state.firstName} {this.state.lastName}</li>\r\n                                                <li><strong>Email:</strong> {this.state.email}</li>\r\n                                                <li><strong>Password:</strong> Yes</li>\r\n                                                <li><strong>Phone:</strong> {this.state.phone}</li>\r\n                                                <li><strong>Website:</strong> {this.state.url}</li>\r\n                                                <li><strong>Gear:</strong> {this.state.gear}</li>\r\n                                                <li><strong>About:</strong> {this.state.description}</li>\r\n                                            </ul>\r\n                                        </Card.Body>\r\n                                        <Card.Footer className=\"text-center\">\r\n                                            <button onClick={() => this.setState({ showModal: false })} className=\"btn btn-theme2 md-close\">Close Me!!</button>\r\n                                        </Card.Footer>\r\n                                    </Card>\r\n                                </AnimatedModal>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormsValidation;","import React from 'react';\r\nimport Modal from \"react-animated-modal\";\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\n\r\nclass AnimatedModal extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Modal\r\n                    visible={this.props.showModal}\r\n                    closemodal={this.props.modalClosed}\r\n                    type={this.props.animation}\r\n                >\r\n                    {this.props.children}\r\n                </Modal>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AnimatedModal;"],"sourceRoot":""}