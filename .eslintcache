[{"D:\\Projek\\AppBimbel\\view\\view\\src\\index.js":"1","D:\\Projek\\AppBimbel\\view\\view\\src\\axios.js":"2","D:\\Projek\\AppBimbel\\view\\view\\src\\component\\Button\\index.js":"3","D:\\Projek\\AppBimbel\\view\\view\\src\\App.js":"4","D:\\Projek\\AppBimbel\\view\\view\\src\\reportWebVitals.js":"5","D:\\Projek\\AppBimbel\\view\\view\\src\\App.test.js":"6","D:\\Projek\\AppBimbel\\view\\view\\src\\component\\Table\\index.js":"7","D:\\Projek\\AppBimbel\\view\\view\\src\\pages\\HomeSoal\\index.js":"8","D:\\Projek\\AppBimbel\\view\\view\\src\\setupTests.js":"9","D:\\Projek\\AppBimbel\\view\\view\\src\\pages\\AddForm\\index.js":"10","D:\\Projek\\AppBimbel\\view\\view\\src\\pages\\EditForm\\index.js":"11","D:\\Projek\\AppBimbel\\view\\view\\src\\JSON\\Siunitx.js":"12"},{"size":500,"mtime":1605345925540,"results":"13","hashOfConfig":"14"},{"size":144,"mtime":1612410779435,"results":"15","hashOfConfig":"14"},{"size":360,"mtime":1606348941460,"results":"16","hashOfConfig":"14"},{"size":573,"mtime":1606653960181,"results":"17","hashOfConfig":"14"},{"size":362,"mtime":1605345925540,"results":"18","hashOfConfig":"14"},{"size":246,"mtime":1605345925540,"results":"19","hashOfConfig":"20"},{"size":142,"mtime":1605582411831,"results":"21","hashOfConfig":"20"},{"size":21352,"mtime":1612950592444,"results":"22","hashOfConfig":"14"},{"size":241,"mtime":1605345925540,"results":"23","hashOfConfig":"20"},{"size":37592,"mtime":1611199310343,"results":"24","hashOfConfig":"14"},{"size":30566,"mtime":1611201847199,"results":"25","hashOfConfig":"14"},{"size":4070,"mtime":1608860099336,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"7vxe8",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ltcuru",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projek\\AppBimbel\\view\\view\\src\\index.js",[],["56","57"],"D:\\Projek\\AppBimbel\\view\\view\\src\\axios.js",[],"D:\\Projek\\AppBimbel\\view\\view\\src\\component\\Button\\index.js",[],"D:\\Projek\\AppBimbel\\view\\view\\src\\App.js",[],["58","59"],"D:\\Projek\\AppBimbel\\view\\view\\src\\reportWebVitals.js",[],["60","61"],"D:\\Projek\\AppBimbel\\view\\view\\src\\App.test.js",[],"D:\\Projek\\AppBimbel\\view\\view\\src\\component\\Table\\index.js",[],"D:\\Projek\\AppBimbel\\view\\view\\src\\pages\\HomeSoal\\index.js",["62","63","64","65","66","67","68","69","70","71","72","73","74"],"D:\\Projek\\AppBimbel\\view\\view\\src\\setupTests.js",[],"D:\\Projek\\AppBimbel\\view\\view\\src\\pages\\AddForm\\index.js",["75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105"],"import React,{ useEffect, useState } from 'react'\r\nimport Button from '../../component/Button'\r\nimport styles from './styles.module.css'\r\nimport axios from '../../axios'\r\n// import ReactHtmlParser from 'react-html-parser';\r\n// import CKEditor from 'ckeditor4-react';\r\n// import { CKEditor } from '@ckeditor/ckeditor5-react';\r\n// import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n// import CKEditor from '@ckeditor/ckeditor5-react';\r\n// import ClassicEditor from 'ckeditor5-classic-with-mathtype';\r\n// import MathType from '@wiris/mathtype-ckeditor5';\r\n// import MathType from '@wiris/mathtype-ckeditor5';\r\n// import MathType from '@ckeditor/ckeditor5-react/';\r\n// import CKEditor from '@ckeditor/ckeditor5-react';\r\n// import ClassicEditor from 'ckeditor5-classic-with-mathtype';\r\nimport 'katex/dist/katex.min.css';\r\n// import TeX from '@matejmazur/react-katex';\r\n// import { MathComponent } from 'mathjax-react'\r\nimport SiunitX from '../../JSON/Siunitx'\r\n\r\n\r\n\r\nfunction AddForm(props) {\r\n    const Latex = require('react-latex');\r\n    const [mapel, setMapel] = useState([]);\r\n    const [kelas, setKelas] = useState([]);\r\n    const [babSoal, setBabSoal] = useState([]);\r\n    const [tingkatKesulitan, setTingkatKesulitan] = useState([]);\r\n    const [selectMapel, setSelectMapel] = useState(\"\");\r\n    const [selectKelas, setSelectKelas] = useState(\"\");\r\n    const [selectbabSoal, setSelectBabSoal] = useState(\"\");\r\n    const [selectTingkatKesulitan, setSelectTingkatKesulitan] = useState(\"\");\r\n    const [tipeSoal, setTipeSoal] = useState(\"essai\");\r\n    const [soal, setSoal] = useState(\"\");\r\n    const [imgSoal, setImgSoal] = useState([]);\r\n    const [imgSoalFile, setImgSoalFile] = useState([]);\r\n    const [imgSoalName, setImgSoalName] = useState([]);\r\n    // const [imgSoalNa, setImgSoalNa] = useState(0);\r\n    const [soalCache, setSoalCache] = useState(\"\");\r\n    const [latestId, setLatestId] = useState(\"\");\r\n    const [soalConverted, setSoalConverted] = useState(\"\");\r\n    const [jawaban, setJawaban] = useState(\"\");\r\n    const [pembahasan, setPembahasan] = useState(\"\");\r\n    const [pil_a, setPil_a] = useState(\"\");\r\n    const [pil_b, setPil_b] = useState(\"\");\r\n    const [pil_c, setPil_c] = useState(\"\");\r\n    const [pil_d, setPil_d] = useState(\"\");\r\n    const [pil_e, setPil_e] = useState(\"\");\r\n    const [popUpMenu, setPopUpMenu] = useState(false);\r\n    const [popUpTitle, setPopUpTitle] = useState(\"\");\r\n    const [inputDeskripsi, setInputDeskripsi] = useState(\"\");\r\n    const [addDeskripsiClicked, setAddDeskripsiClicked] = useState(false);\r\n    const [addDataClicked, setAddDataClicked] = useState(false);\r\n    const [onImageChangeClicked, setOnImageChangeClicked] = useState(false);\r\n    const [imgSoalTotalChangedPlus, setOnIimgSoalTotalChangedPlus] = useState(false);\r\n    const [imgSoalTotalChangedMinus, setOnIimgSoalTotalChangedMinus] = useState(false);\r\n\r\n    const base_url = \"http://localhost/app_bimbel_api\";\r\n\r\n    const onImageChangeActivated = () => {\r\n        console.log(\"ture\");\r\n        setOnImageChangeClicked(true);\r\n        // onImageChange.bind(this, input);\r\n    }\r\n\r\n    const cekimgsoal = () => {\r\n        console.log(imgSoal);\r\n        setImgSoal(imgSoal);\r\n        console.log(\"cek index0 \"+imgSoal[0]);\r\n        console.log(\"cek index1 \"+imgSoal[1]);\r\n        console.log(\"cek index2 \"+imgSoal[2]);\r\n        imgSoal.map((item, index) => {\r\n            console.log(\"index = \"+index);\r\n        })\r\n    }\r\n    \r\n\r\n    const onImageChange = (input, event) => {\r\n        setOnImageChangeClicked(true);\r\n        let files = event.target.files;\r\n        setImgSoalFile(imgSoal => imgSoal.concat(files[0]));\r\n        \r\n        if (FileReader && files && files.length) {\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(files[0]);\r\n            reader.onload = e => {\r\n                setImgSoal(imgSoal => imgSoal.concat(e.target.result));\r\n                // setImgSoalTotal(imgSoalTotal => imgSoalTotal + 1);\r\n            };\r\n            var curPos =  \r\n        document.getElementById(input).selectionStart; \r\n        let x;\r\n        let text_to_insert = \" img\" + (imgSoal.length) + \" \";\r\n        setImgSoalName(imgSoalName => imgSoalName.concat(\"img\" + (imgSoal.length)));\r\n            \r\n        switch (input) {\r\n            case \"soal\":\r\n                x = soal; \r\n                setSoal(x.slice(0, curPos) + text_to_insert + x.slice(curPos));\r\n                break;\r\n            case \"jawaban\":\r\n                x = jawaban; \r\n                setJawaban(x.slice(0, curPos) + text_to_insert + x.slice(curPos));\r\n                break;\r\n                case \"pembahasan\":\r\n                x = pembahasan; \r\n                setPembahasan(x.slice(0, curPos) + text_to_insert + x.slice(curPos));\r\n                break;\r\n            case \"pil_a\":\r\n                x = pil_a; \r\n                setPil_a(x.slice(0, curPos) + text_to_insert + x.slice(curPos));\r\n                break;\r\n                case \"pil_b\":\r\n                    x = pil_b; \r\n                    setPil_b(x.slice(0, curPos) + text_to_insert + x.slice(curPos));\r\n                break;\r\n            case \"pil_c\":\r\n                x = pil_c; \r\n                setPil_c(x.slice(0, curPos) + text_to_insert + x.slice(curPos));\r\n                break;\r\n            case \"pil_d\":\r\n                x = pil_d; \r\n                setPil_d(x.slice(0, curPos) + text_to_insert + x.slice(curPos));\r\n                break;\r\n                case \"pil_e\":\r\n                    x = pil_e; \r\n                    setPil_e(x.slice(0, curPos) + text_to_insert + x.slice(curPos));\r\n                    break;\r\n        \r\n                    default:\r\n                        break;\r\n                    }\r\n        }\r\n       \r\n        \r\n                    \r\n                    \r\n                    \r\n    }\r\n                \r\n\r\n    const removeImageActivated = () => {\r\n         setOnImageChangeClicked(true);\r\n    }\r\n    \r\n    const removeImage = (input,id) => {\r\n        let imgRemove;\r\n        switch (input) {\r\n            case \"soal\":\r\n                 imgRemove = soal.replace(\" img\" + id + \" \", \"\");\r\n                 setSoal(imgRemove);\r\n                break;\r\n            case \"jawaban\":\r\n                 imgRemove = jawaban.replace(\" img\" + id + \" \", \"\");\r\n                 setJawaban(imgRemove);\r\n                break;\r\n            case \"pembahasan\":\r\n                imgRemove = pembahasan.replace(\" img\" + id + \" \", \"\");\r\n                 setPembahasan(imgRemove);\r\n                break;\r\n            case \"pil_a\":\r\n                imgRemove = pil_a.replace(\" img\" + id + \" \", \"\");\r\n                 setPil_a(imgRemove);\r\n                break;\r\n                case \"pil_b\":\r\n                    imgRemove = pil_b.replace(\" img\" + id + \" \", \"\");\r\n                 setPil_b(imgRemove);\r\n                break;\r\n            case \"pil_c\":\r\n                imgRemove = pil_c.replace(\" img\" + id + \" \", \"\");\r\n                 setPil_c(imgRemove);\r\n                break;\r\n            case \"pil_d\":\r\n                imgRemove = pil_d.replace(\" img\" + id + \" \", \"\");\r\n                 setPil_d(imgRemove);\r\n                break;\r\n            case \"pil_e\":\r\n                    imgRemove = pil_e.replace(\" img\" + id + \" \", \"\");\r\n                 setPil_e(imgRemove);\r\n                    break;\r\n        \r\n            default:\r\n                    break;\r\n            }\r\n        \r\n    }\r\n\r\n    const translationLatexPreview = (input,item,index) => {\r\n       if (/\\$(.*?)\\$/s.test(item)) {\r\n            return (<Latex key={index.toString()}>{item+\" \"}</Latex>);\r\n        } else if (/@(.*?)@/s.test(item)) {\r\n            return (<Latex key={index.toString()} displayMode={true}>{item.replaceAll(\"@\",\"$$\")+\" \"}</Latex>);\r\n        } else if (/img\\d+/s.test(item)) {\r\n           const numberImages = item.match(/(?<=img)\\d+/s);\r\n        //    console.log(\"numberImages[0] = \" + numberImages[0]);\r\n        //    console.log(\"imgSoal[numberImages[0] = \" + imgSoal[numberImages[0]]);\r\n           return (\r\n               <div key={index.toString()} className=\"img__group\" id=\"img__group__soal\">\r\n                   <img src={imgSoal[numberImages[0]]} alt=\"aad\" />\r\n                   {/* <button style={{ position: \"absolute\",right: \"10px\",width: \"40px\",height: \"30px\",cursor: \"pointer\"}} onClick={() => removeImage(input, numberImages[0])}>X</button> */}\r\n               </div>\r\n           );\r\n        } else { \r\n            return (<span key={index.toString()}>{item+\" \"}</span>);\r\n        }\r\n    }\r\n\r\n    const cekarraygambar = () => {\r\n        // const imgGroup = soal.match(/img\\d+/g);\r\n        // console.log(\"sebelum imgsoal =\");\r\n        // console.log(imgSoal);\r\n        // console.log(imgSoalFile);\r\n        // console.log(imgGroup);\r\n        // console.log(imgSoalTotal);\r\n        // if (imgGroup && imgSoal) {\r\n        //     // console.log(imgGroup.length !== imgSoal.length);\r\n        //     // console.log(imgSoal.length);\r\n        //     // console.log(imgGroup.length);\r\n        //     if (imgGroup.length !== imgSoal.length) {\r\n        //         const numberImages = soal.match(/(?<=img)\\d+/gs).sort();\r\n        //         console.log(numberImages);\r\n\r\n        //         for (let i = 0; i < imgSoalTotal; i++) {\r\n        //             console.log(numberImages[i]);\r\n        //             console.log(i.toString());\r\n        //             console.log(numberImages[i] !== i.toString());\r\n        //             // if (numberImages[i] !== i) {\r\n        //             //     setImgSoal(imgSoal => imgSoal.splice(i, 1));\r\n        //             // }\r\n        //         }\r\n                 \r\n        //         // imgSoal.map((item, index) => {\r\n        //         //     if(typeof numberImages[index] !== 'undefined') {\r\n        //         //         setImgSoal(imgSoal => imgSoal.splice(index, 1));\r\n        //         //     }      \r\n        //         // })           \r\n        //         setImgSoalTotal(imgSoal.length);\r\n        //     }\r\n        // }\r\n        // console.log(\"sesudah imgsoal =\");\r\n        // console.log(imgSoal);\r\n          const data = new FormData() \r\n        \r\n        data.append('nameimg', imgSoalName)\r\n        imgSoalFile.map((item, index) => {\r\n            console.log(index);\r\n            data.append('file'+index, item)\r\n        });\r\n        console.log(data);\r\n        // axios.post(url, data, { // receive two parameter endpoint url ,form data \r\n        // })\r\n            axios.post('/gambar_soal',data)\r\n                .then(function (response) {\r\n                    // console.log(response.data);\r\n                    console.log(response);\r\n                });\r\n        // .then(res => { // then print response status\r\n        //     console.warn(res);\r\n        // })\r\n        // let url = \"http://localhost:8000/upload.php\";\r\n\r\n        // axios.post(url, data, { // receive two parameter endpoint url ,form data \r\n        // })\r\n        // .then(res => { // then print response status\r\n        //     console.warn(res);\r\n        // })\r\n    };\r\n\r\n      \r\n\r\n    \r\n    const translationLatex = (input) => {\r\n        \r\n        if (typeof input !== 'undefined') {\r\n            let result = input\r\n                .replaceAll(\"\\\\begin{align*}\", String.fromCharCode(32) + \"@\\\\begin{aligned}\")\r\n                .replaceAll(\"\\\\end{align*}\", \"\\\\end{aligned}@\" + String.fromCharCode(32))\r\n                .replaceAll(\"\\\\begin{equation*}\", String.fromCharCode(32) + \"@\\\\begin{aligned}\")\r\n                .replaceAll(\"\\\\end{equation*}\", \"\\\\end{aligned}@\" + String.fromCharCode(32));\r\n        \r\n            const angFunction = result.match(/\\\\ang{.*?}/g);\r\n            if (angFunction !== null) {\r\n                angFunction.map((item) => {\r\n                    const param = item.match(/{.*?}/g);\r\n                    const covertItem = replaceAllCurlyBraces(param[0]) + \"\\\\degree\";\r\n                    result = result.replace(item, covertItem);\r\n                })\r\n        }\r\n        const inlineEquation = result.match(/\\$(.*?)\\$/g);\r\n        const blockEquation = result.match(/(@)(.+?)(@)/gs);\r\n        const siunitXCondition =\r\n            /\\\\SI{.*?}{.*?}|\\\\SI\\[.*?]{.*?}{.*?}|\\\\SI{.*?}|\\\\NUM{.*?}/gi\r\n        const siunitX1 = result.match(siunitXCondition);\r\n        \r\n        // console.log(\"siunitX1\");\r\n        // console.log(imgGroup);\r\n        // console.log(imgSoal);\r\n       \r\n          \r\n        if (inlineEquation !== null) {\r\n            inlineEquation.map((item) => {\r\n            const covertItem = item.replaceAll(String.fromCharCode(32), '\\\\,');\r\n            // console.log(covertItem);\r\n\r\n            result = result.replace(item, covertItem);\r\n        })\r\n        }\r\n        if (blockEquation !== null) {\r\n            blockEquation.map((item) => {\r\n                const covertItem = item\r\n                .replaceAll(String.fromCharCode(32)+\"\\\\\"+String.fromCharCode(32), \"\\\\,\")\r\n                    .replaceAll(String.fromCharCode(32), '\\\\,')\r\n                    .replaceAll(String.fromCharCode(13), '')\r\n                    .replaceAll(String.fromCharCode(9), '')\r\n                    .replaceAll(\"{}&\",\"\")\r\n                    .replaceAll(\"$\",\"\")\r\n                    .replaceAll(\"=\",\"&=\")\r\n                    .replaceAll(\"\\\\approx\",\"&\\\\approx\")\r\n                    .replaceAll(\"[per-mode&=symbol]\",\"[per-mode=symbol]\")\r\n                    // .replaceAll(\"=\",\"&=\")\r\n            \r\n            result = result.replace(item, covertItem);\r\n            })\r\n        }\r\n\r\n        if (siunitX1 !== null) {\r\n            siunitX1.map((item) => {\r\n                let convertResult = \"\";\r\n                let itemProseced;\r\n                let paramItemProseced;\r\n                let par;\r\n                let tothe;\r\n                if (/tothe/s.test(item)) {\r\n                    itemProseced = item+\"}\";\r\n                } else {\r\n                    itemProseced = item;\r\n                }\r\n                // console.log(\"siunitX1\");\r\n                // console.log(itemProseced);\r\n                \r\n                const mode = itemProseced.match(/\\[.*?]/s);\r\n                const param = itemProseced.match(/{.*?}/g);\r\n                // console.log(\"mode = \" + mode);\r\n                // console.log(\"param = \" + param);\r\n                if (mode !== null) {\r\n                    param.map((paramItem) => {\r\n                        if (/tothe/s.test(paramItem)) {\r\n                            paramItemProseced = paramItem + \"}\";\r\n                        } else {\r\n                            paramItemProseced = paramItem;\r\n                        }\r\n                        par = replaceAllCurlyBraces(paramItemProseced);\r\n                        // console.log(\"if not null mode = \" + mode[0]);\r\n                        convertResult += replaceSiunitx(mode[0], par) + \" \";\r\n                    })   \r\n                } else {\r\n                    param.map((paramItem) => {\r\n                         if (/tothe/s.test(paramItem)) {\r\n                             paramItemProseced = paramItem + \"}\";\r\n                             const findTothe = paramItemProseced.match(/(?<=tothe).*/s);\r\n                             tothe = \"^{\"+replaceAllCurlyBraces(findTothe[0])+\"}\";\r\n                             paramItemProseced = paramItemProseced.replaceAll(/(?<=tothe).*/g, \"\");\r\n                            //  console.log(\"paramItemProseced = \"+paramItemProseced)\r\n                            //  console.log(\"tothe = \"+tothe)\r\n                        } else {\r\n                             paramItemProseced = paramItem;\r\n                             tothe= \"\";\r\n                        }\r\n                        par = replaceAllCurlyBraces(paramItemProseced);\r\n                        convertResult += replaceSiunitx(\"\", par)+tothe+ \" \";\r\n                    })   \r\n                }\r\n                convertResult = convertResult.replaceAll(String.fromCharCode(32), '\\\\,');\r\n                result = result.replace(itemProseced, convertResult);\r\n                // console.log(\"convertResult = \" + convertResult);\r\n            })\r\n        }\r\n\r\n        // console.log(\"ini hasil resyo = \"+result);\r\n        // setSoalConverted(result);\r\n        // setSoalCache(soal);\r\n            return result;\r\n        } else {\r\n            return input;\r\n            // console.log(\"nothing change\")\r\n        }\r\n        \r\n        \r\n    }\r\n   \r\n\r\n    const replaceSiunitx = (mode , str) => {\r\n        let result;\r\n        let CodeMatch = false;\r\n        \r\n        SiunitX.map((item) => {\r\n            // console.log(\"mode replaceunix= \" + mode);\r\n            if (str === item.code && mode === \"\" && CodeMatch === false) {\r\n                result =  item.translation;\r\n                CodeMatch = true;\r\n            } else if (str === item.code && mode === \"[per-mode=symbol]\" && CodeMatch === false) { \r\n                result = item[\"per-mode=symbol\"];\r\n                CodeMatch = true;\r\n            } else if(str !== item.code && CodeMatch === false){\r\n                if (/-?\\d+(?=e).-?\\d+/s.test(str) || /(?=e).-?\\d+/s.test(str)) {\r\n                    const pangkat = str.match(/(?<=e).?\\d+/s);\r\n                    const nominal = str.match(/-?\\d+(?=e)|-?\\d+\\,\\d+(?=e)/s);\r\n                    if (pangkat !== null && nominal !== null) {\r\n                        result = nominal[0] + \" x 10^{\" + pangkat[0]+\"}\";\r\n                    } else if (pangkat !== null && nominal === null) {\r\n                        result = \"10^\" + pangkat[0];\r\n                    }else {\r\n                        result = str;\r\n                    }\r\n                } else {\r\n                    result = str;     \r\n                }\r\n                    // result = str;     \r\n            }\r\n        })\r\n        // console.log(result);\r\n        return result;\r\n    }\r\n\r\n    // console.log(SiunitX);\r\n\r\n\r\n    const replaceAllMultiCondition = (sentences, params) => {\r\n        let temp = sentences;\r\n        const result = params.map(item => {\r\n            temp = temp.replaceAll(item.before, item.after);\r\n            return temp;\r\n        })\r\n\r\n        return temp;\r\n        \r\n    }\r\n    \r\n    const replaceAllCurlyBraces = (sentences) => {\r\n        const temp = sentences.replaceAll(\"{\",\"\").replaceAll(\"}\",\"\");\r\n    \r\n        return temp;\r\n        \r\n    }\r\n\r\n    const replaceFormulasLatex = (str) => {\r\n        const inlineEquation = str.match(/\\$(.*?)\\$/g);\r\n        const result = inlineEquation.map(i => {\r\n            return i.replace(/\\$/g, \"\");\r\n        })\r\n        // console.log(str.split(\" \"));\r\n        return result;\r\n        \r\n    }\r\n\r\n    const selectMapelChanged = (e) => {\r\n        setSelectMapel(e.target.value);\r\n    }\r\n   \r\n    const tipeSoalChanged = (e) => {\r\n        setTipeSoal(e.target.value);\r\n    }\r\n    \r\n    const soalType = (e) => {\r\n        setSoal(e.target.value)\r\n        setSoalConverted(e.target.value)\r\n    }\r\n    const jawabanType = (e) => {\r\n        setJawaban(e.target.value)\r\n    }\r\n    const pembahasanType = (e) => {\r\n        setPembahasan(e.target.value)\r\n    }\r\n    const selectKelasChanged = (e) => {\r\n        setSelectKelas(e.target.value)\r\n    }\r\n    \r\n    const selectBabSoalChanged = (e) => {\r\n        setSelectBabSoal(e.target.value)\r\n    }\r\n    \r\n    const selectTingkatKesulitanChanged = (e) => {\r\n        setSelectTingkatKesulitan(e.target.value)\r\n    }\r\n    \r\n    const pil_aChanged = (e) => {\r\n        setPil_a(e.target.value)\r\n    }\r\n    const pil_bChanged = (e) => {\r\n        setPil_b(e.target.value)\r\n    }\r\n    const pil_cChanged = (e) => {\r\n        setPil_c(e.target.value)\r\n    }\r\n    const pil_dChanged = (e) => {\r\n        setPil_d(e.target.value)\r\n    }\r\n    const pil_eChanged = (e) => {\r\n        setPil_e(e.target.value)\r\n    }\r\n  \r\n    const tambahDeskripsi = (title) => {\r\n        setPopUpMenu(true);\r\n        if (selectMapel === \"\" && title === \"Bab Soal\") {\r\n            alert(\"Pilih Mapel Terlebih dahulu\");\r\n            setPopUpMenu(false);\r\n        }\r\n        setPopUpTitle(title);\r\n    }\r\n\r\n    \r\n    const addData = (e) => {\r\n        let data;\r\n        if (tipeSoal === \"essai\") {\r\n            data = {\r\n                soal: soal,\r\n                jawaban: jawaban,\r\n                pembahasan: pembahasan,\r\n                tipe_soal: tipeSoal,\r\n                id_mapel: selectMapel,\r\n                id_tingkat_kesulitan: selectTingkatKesulitan,\r\n                id_kelas: selectKelas,\r\n                id_bab_soal: selectbabSoal\r\n            }\r\n        } else {\r\n            data = {\r\n                soal: soal,\r\n                pil_a: pil_a,\r\n                pil_b: pil_b,\r\n                pil_c: pil_c,\r\n                pil_d: pil_d,\r\n                pil_e: pil_e,\r\n                jawaban: jawaban,\r\n                pembahasan: pembahasan,\r\n                tipe_soal: tipeSoal,\r\n                id_mapel: selectMapel,\r\n                id_tingkat_kesulitan: selectTingkatKesulitan,\r\n                id_kelas: selectKelas,\r\n                id_bab_soal: selectbabSoal\r\n            }\r\n        }\r\n        \r\n         axios.post('/bank_soal',data)\r\n                .then(function (response) {\r\n                    // console.log(response.data);\r\n                    setAddDataClicked(true);\r\n                });\r\n        \r\n        \r\n       \r\n        \r\n    }\r\n    \r\n    const addDeskripsi = () => {\r\n        setAddDeskripsiClicked(true);\r\n        // const data = {\r\n        //         deskripsi: deskripsi,\r\n        // }\r\n\r\n        let tableName;\r\n        let data;\r\n        data = {\r\n            deskripsi : inputDeskripsi\r\n        }\r\n        switch (popUpTitle) {\r\n            case \"Mapel\":\r\n                tableName = \"mapel\";\r\n                break;\r\n            case \"Kelas\":\r\n                tableName = \"kelas\";\r\n                break;\r\n            case \"Bab Soal\":\r\n                tableName = \"bab_soal\";\r\n                data = {\r\n                    deskripsi: inputDeskripsi,\r\n                    id_mapel: selectMapel\r\n                }\r\n                break;\r\n            case \"Tingkat Kesulitan\":\r\n                tableName = \"tingkat_kesulitan\";\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n\r\n        // console.log(tableName);\r\n        \r\n        axios.post('/' + tableName,data)\r\n                .then(function (response) {\r\n                    // console.log(response.data);\r\n                });\r\n        \r\n        setPopUpMenu(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        async function saveImages() { \r\n            axios.get('/bank_soal?last=\"1\"')\r\n                .then(function (response) {\r\n                    // setLatestId(response.data[0][\"id\"]);\r\n                    const dataform = new FormData() \r\n        \r\n                    dataform.append('nameimg', imgSoalName)\r\n                    // console.log(\"asd\" + response.data[0][\"id\"])\r\n                    dataform.append('id', response.data[0][\"id\"])\r\n                    imgSoalFile.map((item, index) => {\r\n                        dataform.append('file'+index, item)\r\n                    });\r\n       \r\n                    axios.post('/gambar_soal',dataform)\r\n                        .then(function (response) {\r\n                            console.log(response);\r\n                    });\r\n                });\r\n        }\r\n        // async function postImg() { \r\n           \r\n        \r\n        //  const dataform = new FormData() \r\n        \r\n        //     dataform.append('nameimg', imgSoalName)\r\n        //     console.log(\"asd\" + latestId)\r\n        // dataform.append('id', latestId)\r\n        // imgSoalFile.map((item, index) => {\r\n        //     // console.log(index);\r\n        //     dataform.append('file'+index, item)\r\n        // });\r\n        // // console.log(data);\r\n        // // axios.post(url, data, { // receive two parameter endpoint url ,form data \r\n        // // })\r\n        //     axios.post('/gambar_soal',dataform)\r\n        //         .then(function (response) {\r\n        //             // console.log(response.data);\r\n        //             console.log(response);\r\n        //         });\r\n        // }\r\n        \r\n        async function fetchdata() {\r\n            \r\n            axios.get('/mapel')\r\n                .then(function (response) {\r\n                    setMapel(response.data);\r\n                });\r\n            \r\n            axios.get('/kelas')\r\n                .then(function (response) {\r\n                    setKelas(response.data);\r\n                });\r\n            \r\n            axios.get('/tingkat_kesulitan')\r\n                .then(function (response) {\r\n                    setTingkatKesulitan(response.data);\r\n                });\r\n        }\r\n        fetchdata();\r\n        if (selectMapel !== \"\") {\r\n            axios.get('/bab_soal?id_mapel=' + selectMapel)\r\n                .then(function (response) {\r\n                    setBabSoal(response.data);\r\n            });\r\n        }\r\n        if (addDeskripsiClicked) {\r\n            fetchdata();\r\n            setAddDeskripsiClicked(false);\r\n        }\r\n        if (addDataClicked) {\r\n            saveImages();\r\n            // postImg();\r\n            setAddDataClicked(false);\r\n        }\r\n        if (setOnImageChangeClicked) {\r\n            // setImgSoal(imgSoal => imgSoal.concat(\"e.target.result\"));\r\n            \r\n            setOnImageChangeClicked(false);\r\n        }\r\n        // if (imgSoalTotalChangedPlus) {\r\n        //     // setImgSoal(imgSoal => imgSoal.concat(\"e.target.result\"));\r\n        //     console.log(\"plus\")\r\n        //     setimgSoalTotal(imgSoalTotal => imgSoalTotal + 1);\r\n        //     setOnImageChangeClicked(false);\r\n        // }\r\n        // if (imgSoalTotalChangedMinus) {\r\n        //     // setImgSoal(imgSoal => imgSoal.concat(\"e.target.result\"));\r\n        //     console.log(\"minus\")\r\n        //     setimgSoalTotal(imgSoalTotal => imgSoalTotal - 1);\r\n        //     setOnImageChangeClicked(false);\r\n        // }\r\n        // if (soalConverted !== null) {\r\n        //     translationLatex();\r\n        // }\r\n        // if (true) {\r\n        //     setImgSoal(imgSoal => imgSoal.concat(\"e.target.result\"));\r\n        //     console.log(imgSoal);\r\n        // }\r\n    }, [selectMapel,addDataClicked, addDeskripsiClicked, soalConverted,soal,onImageChangeClicked,imgSoalTotalChangedPlus,imgSoalTotalChangedMinus]);\r\n    \r\n    // const str = \"\"\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            \r\n             {/* <CKEditor\r\n                    editor={ClassicEditor}\r\n                    config={{\r\n                        toolbar: {\r\n                            items: [\r\n                                'heading', 'MathType', 'ChemType',\r\n                                '|',\r\n                                'bold',\r\n                                'italic',\r\n                                // 'link',\r\n                                // 'bulletedList',\r\n                                // 'numberedList',\r\n                                'imageUpload',\r\n                                // 'mediaEmbed',\r\n                                // 'insertTable',\r\n                                // 'blockQuote',\r\n                                'undo',\r\n                                'redo'\r\n                            ]\r\n                        },\r\n                    }}\r\n                    data=\"<p>Hello from CKEditor 5 with MathType!</p>\"\r\n                     onChange={ ( event, editor ) => {\r\n                        const data = editor.getData();\r\n                        console.log(data);\r\n                    } }\r\n                    onInit={editor => {\r\n                        // You can store the \"editor\" and use when it is needed.\r\n                        console.log( 'Editor is ready to use!', editor );\r\n                    }}\r\n                /> */}\r\n            \r\n                <br/>\r\n            {popUpMenu ? \r\n            <div className={styles.popup__menu__container}>\r\n                <div className={styles.popup__menu}>\r\n                    <h5>{popUpTitle}</h5>\r\n                    <input type=\"text\" placeholder={popUpTitle} onChange={(e)=>{setInputDeskripsi(e.target.value)}} />\r\n                    <div className={styles.button__group}>\r\n                    <button onClick={()=>{setPopUpMenu(false)}}>Close</button>\r\n                    <button onClick={addDeskripsi}>Submit</button>\r\n                    </div>    \r\n                </div>\r\n            </div>\r\n            :\r\n            \"\"\r\n            }\r\n            <span>mata pelajaran </span>\r\n            <select value={selectMapel} onChange={selectMapelChanged}>   \r\n            <option value=\"\" disabled ></option>\r\n            {/* <input type=\"text\" name=\"\" id=\"\"/> */}\r\n                {mapel.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n                {/* <option value=\"\" onClick={tambahDeskripsi}>+</option> */}\r\n            </select>\r\n            <button onClick={(title) => tambahDeskripsi(\"Mapel\")}>+</button>\r\n            <br/>\r\n            <span>kelas </span>\r\n            <select value={selectKelas} onChange={selectKelasChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {kelas.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <button onClick={(title) => tambahDeskripsi(\"Kelas\")}>+</button>\r\n            <br/>\r\n            <span>Bab </span>\r\n            <select value={selectbabSoal} onChange={selectBabSoalChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {babSoal.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <button onClick={(title) => tambahDeskripsi(\"Bab Soal\")}>+</button>\r\n            <br/>\r\n            <span>tingkat kesulitan </span>\r\n            <select value={selectTingkatKesulitan} onChange={selectTingkatKesulitanChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {tingkatKesulitan.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <button onClick={(title) => tambahDeskripsi(\"Tingkat Kesulitan\")}>+</button>\r\n            <br/>\r\n            <span>tipe soal : </span>\r\n            <select value={tipeSoal} onChange={tipeSoalChanged}>\r\n                <option value=\"essai\">essai</option>\r\n                <option value=\"pilgan\">pilihan ganda</option>\r\n            </select>\r\n            <br />\r\n            {/* <span>Generate Latex : </span> */}\r\n            \r\n            <br />\r\n            <span>soal : </span>\r\n            <br/>\r\n            <div className={styles.editor}>\r\n                <textarea value={soal} onChange={soalType} name=\"soal\" id=\"soal\" cols=\"30\" rows=\"10\"></textarea>  \r\n                <span>pilih Gambar </span>\r\n                <button onClick={()=>cekarraygambar()}>-</button>\r\n                {/* <button onClick={()=>addImage(\"soal\")}>+</button> */}\r\n                {/* <button onClick={()=>cekimgsoal()}>+</button> */}\r\n                <input type=\"file\" onChange={onImageChange.bind(this, \"soal\")} className=\"filetype\" />\r\n                <div className=\"img__group\" id=\"img__group__soal\">\r\n\r\n                </div>\r\n                <br/>\r\n                \r\n                {/* <Latex dangerouslySetInnerHTML={{__html: soal}}></Latex> */}\r\n                {translationLatex(soal).split(\" \").map((item,index) => {\r\n                    return translationLatexPreview(\"soal\",item,index)\r\n                })}\r\n            </div>\r\n            <br />\r\n            {tipeSoal === \"essai\" ?\r\n                <div></div>\r\n            :\r\n                <div className={styles.pilihan__ganda}>\r\n                    <span>Pilihan A</span>\r\n                     <div className={styles.editor}>\r\n                    <textarea value={pil_a} onChange={e => {setPil_a(e.target.value)}} cols=\"30\" rows=\"10\" id=\"pil_a\"></textarea>\r\n                    <span>Pilih Gambar </span>\r\n                    <input type=\"file\" onChange={onImageChange.bind(this, \"pil_a\")} className=\"filetype\" />\r\n                    <br/>\r\n                    {/* <Latex>{pil_a}</Latex> */}\r\n                    {translationLatex(pil_a).split(\" \").map((item,index) => {\r\n                        return translationLatexPreview(\"pil_a\",item,index)\r\n                    })}\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan B</span>\r\n                    <div className={styles.editor}>\r\n                    <textarea value={pil_b} onChange={e => {setPil_b(e.target.value)}} cols=\"30\" rows=\"10\" id=\"pil_b\"></textarea>\r\n                    <span>Pilih Gambar </span>\r\n                    <input type=\"file\" onChange={onImageChange.bind(this, \"pil_b\")} className=\"filetype\" />\r\n                    <br/>\r\n                    {/* <Latex>{pil_b}</Latex> */}\r\n                    {translationLatex(pil_b).split(\" \").map((item,index) => {\r\n                        return translationLatexPreview(\"pil_b\",item,index)\r\n                    })}\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan C</span>\r\n                     <div className={styles.editor}>\r\n                    <textarea value={pil_c} onChange={e => {setPil_c(e.target.value)}} cols=\"30\" rows=\"10\" id=\"pil_c\"></textarea>\r\n                    <span>Pilih Gambar </span>\r\n                    <input type=\"file\" onChange={onImageChange.bind(this, \"pil_c\")} className=\"filetype\" />\r\n                    <br/>\r\n                    {/* <Latex>{pil_c}</Latex> */}\r\n                    {translationLatex(pil_c).split(\" \").map((item,index) => {\r\n                        return translationLatexPreview(\"pil_c\",item,index)\r\n                    })}\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan D</span>\r\n                    <div className={styles.editor}>\r\n                    <textarea value={pil_d} onChange={e => {setPil_d(e.target.value)}} cols=\"30\" rows=\"10\" id=\"pil_d\"></textarea>\r\n                    <span>Pilih Gambar </span>\r\n                    <input type=\"file\" onChange={onImageChange.bind(this, \"pil_d\")} className=\"filetype\" />\r\n                    <br/>\r\n                    {/* <Latex>{pil_d}</Latex> */}\r\n                    {translationLatex(pil_d).split(\" \").map((item,index) => {\r\n                        return translationLatexPreview(\"pil_d\",item,index)\r\n                    })}\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan E</span>\r\n                    <div className={styles.editor}>\r\n                    <textarea value={pil_e} onChange={e => {setPil_e(e.target.value)}} cols=\"30\" rows=\"10\" id=\"pil_e\"></textarea>\r\n                    <span>Pilih Gambar </span>\r\n                    <input type=\"file\" onChange={onImageChange.bind(this, \"pil_e\")} className=\"filetype\" />\r\n                    <br/>\r\n                    {/* <Latex>{pil_e}</Latex> */}\r\n                    {translationLatex(pil_e).split(\" \").map((item,index) => {\r\n                        return translationLatexPreview(\"pil_e\",item,index)\r\n                    })}\r\n                    </div>\r\n                    <br/>\r\n                </div>\r\n            }\r\n            <span>jawaban : </span>\r\n            <br />\r\n            {tipeSoal === \"essai\" ?\r\n            <div className={styles.editor}>\r\n                    <textarea value={jawaban} onChange={jawabanType} id=\"jawaban\" cols=\"30\" rows=\"10\"></textarea>\r\n                    <span>Pilih Gambar </span>\r\n                    <input type=\"file\" onChange={onImageChange.bind(this, \"jawaban\")} className=\"filetype\" />\r\n                    <br/>\r\n                    {/* <Latex>{jawaban} */}\r\n                    {/* <Latex displayMode={true}>$\\pi$</Latex> */}\r\n                    {/* </Latex> */}\r\n                    {/* {ReactHtmlParser(jawaban)} */}\r\n                    {/* {jawaban} */}\r\n                    {/* <div dangerouslySetInnerHTML={{__html: jawaban}}></div> */}\r\n                    {translationLatex(jawaban).split(\" \").map((item,index) => {\r\n                    return translationLatexPreview(\"jawaban\",item,index)\r\n                    })}\r\n            </div>\r\n                :\r\n            <div className={styles.jwb_pilgan}>\r\n                <select value={jawaban} onChange={jawabanType}>\r\n                    <option value=\"\"></option>\r\n                    <option value=\"a\">a</option>\r\n                    <option value=\"b\">b</option>\r\n                    <option value=\"c\">c</option>\r\n                    <option value=\"d\">d</option>\r\n                    <option value=\"e\">e</option>\r\n                </select>\r\n            </div>   \r\n            }\r\n            <br />\r\n            <span>pembahasan : </span>\r\n            <br/>\r\n            <div className={styles.editor}>\r\n                <textarea value={pembahasan} onChange={pembahasanType} name=\"\" id=\"pembahasan\" cols=\"30\" rows=\"10\"></textarea>\r\n                <span>Pilih Gambar </span>\r\n                <input type=\"file\" onChange={onImageChange.bind(this, \"pembahasan\")} className=\"filetype\" />\r\n                <br/>\r\n                {/* <Latex>{pembahasan}</Latex> */}\r\n                {translationLatex(pembahasan).split(\" \").map((item,index) => {\r\n                    return translationLatexPreview(\"pembahasan\",item,index)\r\n                })}\r\n            </div>\r\n            <br />\r\n            \r\n            <Button title=\"Submit\" onClick={addData} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddForm\r\n","D:\\Projek\\AppBimbel\\view\\view\\src\\pages\\EditForm\\index.js",["106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128"],"import React,{ useEffect, useState } from 'react'\r\nimport Button from '../../component/Button'\r\nimport styles from './styles.module.css'\r\nimport axios from '../../axios'\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { useParams } from \"react-router-dom\";\r\nimport SiunitX from '../../JSON/Siunitx'\r\n// import CKEditor from 'ckeditor4-react';\r\n// import { CKEditor } from '@ckeditor/ckeditor5-react';\r\n// import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n// import CKEditor from '@ckeditor/ckeditor5-react';\r\n// import ClassicEditor from 'ckeditor5-classic-with-mathtype';\r\n// import MathType from '@wiris/mathtype-ckeditor5';\r\n\r\n\r\nfunction EditForm(props) {\r\n    const Latex = require('react-latex');\r\n    const [mapel, setMapel] = useState([]);\r\n    const [bankSoal, setBankSoal] = useState([]);\r\n    const [kelas, setKelas] = useState([]);\r\n    const [babSoal, setBabSoal] = useState([]);\r\n    const [tingkatKesulitan, setTingkatKesulitan] = useState([]);\r\n    const [selectMapel, setSelectMapel] = useState(\"\");\r\n    const [selectKelas, setSelectKelas] = useState(\"\");\r\n    const [selectbabSoal, setSelectBabSoal] = useState(\"\");\r\n    const [selectTingkatKesulitan, setSelectTingkatKesulitan] = useState(\"\");\r\n    const [tipeSoal, setTipeSoal] = useState(\"essai\");\r\n    const [soal, setSoal] = useState(\"\");\r\n    const [imgSoal, setImgSoal] = useState([]);\r\n    const [imgSoalFile, setImgSoalFile] = useState([]);\r\n    const [imgSoalName, setImgSoalName] = useState([]);\r\n    const [imgSoalTotal, setImgSoalTotal] = useState(0);\r\n    const [jawaban, setJawaban] = useState(\"\");\r\n    const [pembahasan, setPembahasan] = useState(\"\");\r\n    const [pil_a, setPil_a] = useState(\"\");\r\n    const [pil_b, setPil_b] = useState(\"\");\r\n    const [pil_c, setPil_c] = useState(\"\");\r\n    const [pil_d, setPil_d] = useState(\"\");\r\n    const [pil_e, setPil_e] = useState(\"\");\r\n    const [onImageChangeClicked, setOnImageChangeClicked] = useState(false);\r\n    const [addDataClicked, setAddDataClicked] = useState(false);\r\n    const [link, setLink] = useState([]);\r\n    let { id } = useParams();\r\n\r\n    const onImageChange = (input, event) => {\r\n        setOnImageChangeClicked(true);\r\n        let files = event.target.files;\r\n        setImgSoalFile(imgSoal => imgSoal.concat(files[0]));\r\n        \r\n        if (FileReader && files && files.length) {\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(files[0]);\r\n            reader.onload = e => {\r\n                setImgSoal(imgSoal => imgSoal.concat(e.target.result));\r\n                setImgSoalTotal(imgSoalTotal => imgSoalTotal + 1);\r\n            };\r\n            var curPos =  \r\n        document.getElementById(input).selectionStart; \r\n        let x;\r\n        let text_to_insert = \" img\"+(imgSoal.length)+\" \";\r\n        switch (input) {\r\n            case \"soal\":\r\n                x = soal; \r\n                setSoal(x.slice(0, curPos) + text_to_insert + x.slice(curPos));\r\n                break;\r\n            case \"jawaban\":\r\n                x = jawaban; \r\n                setJawaban(x.slice(0, curPos) + text_to_insert + x.slice(curPos));\r\n                break;\r\n                case \"pembahasan\":\r\n                x = pembahasan; \r\n                setPembahasan(x.slice(0, curPos) + text_to_insert + x.slice(curPos));\r\n                break;\r\n            case \"pil_a\":\r\n                x = pil_a; \r\n                setPil_a(x.slice(0, curPos) + text_to_insert + x.slice(curPos));\r\n                break;\r\n                case \"pil_b\":\r\n                    x = pil_b; \r\n                    setPil_b(x.slice(0, curPos) + text_to_insert + x.slice(curPos));\r\n                break;\r\n            case \"pil_c\":\r\n                x = pil_c; \r\n                setPil_c(x.slice(0, curPos) + text_to_insert + x.slice(curPos));\r\n                break;\r\n            case \"pil_d\":\r\n                x = pil_d; \r\n                setPil_d(x.slice(0, curPos) + text_to_insert + x.slice(curPos));\r\n                break;\r\n                case \"pil_e\":\r\n                    x = pil_e; \r\n                    setPil_e(x.slice(0, curPos) + text_to_insert + x.slice(curPos));\r\n                    break;\r\n        \r\n                    default:\r\n                        break;\r\n                    }\r\n        }\r\n                    \r\n    }\r\n\r\n    const removeImage = (input,id) => {\r\n        let imgRemove;\r\n        switch (input) {\r\n            case \"soal\":\r\n                 imgRemove = soal.replace(\" img\" + id + \" \", \"\");\r\n                 setSoal(imgRemove);\r\n                break;\r\n            case \"jawaban\":\r\n                 imgRemove = jawaban.replace(\" img\" + id + \" \", \"\");\r\n                 setJawaban(imgRemove);\r\n                break;\r\n            case \"pembahasan\":\r\n                imgRemove = pembahasan.replace(\" img\" + id + \" \", \"\");\r\n                 setPembahasan(imgRemove);\r\n                break;\r\n            case \"pil_a\":\r\n                imgRemove = pil_a.replace(\" img\" + id + \" \", \"\");\r\n                 setPil_a(imgRemove);\r\n                break;\r\n                case \"pil_b\":\r\n                    imgRemove = pil_b.replace(\" img\" + id + \" \", \"\");\r\n                 setPil_b(imgRemove);\r\n                break;\r\n            case \"pil_c\":\r\n                imgRemove = pil_c.replace(\" img\" + id + \" \", \"\");\r\n                 setPil_c(imgRemove);\r\n                break;\r\n            case \"pil_d\":\r\n                imgRemove = pil_d.replace(\" img\" + id + \" \", \"\");\r\n                 setPil_d(imgRemove);\r\n                break;\r\n            case \"pil_e\":\r\n                    imgRemove = pil_e.replace(\" img\" + id + \" \", \"\");\r\n                 setPil_e(imgRemove);\r\n                    break;\r\n        \r\n            default:\r\n                    break;\r\n            }\r\n        \r\n    }\r\n     const replaceAllCurlyBraces = (sentences) => {\r\n        const temp = sentences.replaceAll(\"{\",\"\").replaceAll(\"}\",\"\");\r\n    \r\n        return temp;\r\n        \r\n    }\r\n\r\n    const translationLatexPreview = (input,item,index) => {\r\n       if (/\\$(.*?)\\$/s.test(item)) {\r\n            return (<Latex key={index.toString()}>{item+\" \"}</Latex>);\r\n        } else if (/@(.*?)@/s.test(item)) {\r\n            return (<Latex key={index.toString()} displayMode={true}>{item.replaceAll(\"@\",\"$$\")+\" \"}</Latex>);\r\n        } else if (/img\\d+/s.test(item)) {\r\n           const numberImages = item.match(/(?<=img)\\d+/s);\r\n        //    console.log(\"numberImages[0] = \" + numberImages[0]);\r\n        //    console.log(\"imgSoal[numberImages[0] = \" + imgSoal[numberImages[0]]);\r\n           return (\r\n               <div key={index.toString()} className=\"img__group\" id=\"img__group__soal\">\r\n                   <img src={imgSoal[numberImages[0]]} alt=\"aad\" />\r\n                   <button style={{ position: \"absolute\",right: \"10px\",width: \"40px\",height: \"30px\",cursor: \"pointer\"}} onClick={() => removeImage(input, numberImages[0])}>X</button>\r\n               </div>\r\n           );\r\n        } else { \r\n            return (<span key={index.toString()}>{item+\" \"}</span>);\r\n        }\r\n    }\r\n\r\n    const translationLatex = (input) => {\r\n        \r\n        if (typeof input !== 'undefined') {\r\n            let result = input\r\n                .replaceAll(\"\\\\begin{align*}\", String.fromCharCode(32) + \"@\\\\begin{aligned}\")\r\n                .replaceAll(\"\\\\end{align*}\", \"\\\\end{aligned}@\" + String.fromCharCode(32))\r\n                .replaceAll(\"\\\\begin{equation*}\", String.fromCharCode(32) + \"@\\\\begin{aligned}\")\r\n                .replaceAll(\"\\\\end{equation*}\", \"\\\\end{aligned}@\" + String.fromCharCode(32));\r\n        \r\n            const angFunction = result.match(/\\\\ang{.*?}/g);\r\n            if (angFunction !== null) {\r\n                angFunction.map((item) => {\r\n                    const param = item.match(/{.*?}/g);\r\n                    const covertItem = replaceAllCurlyBraces(param[0]) + \"\\\\degree\";\r\n                    result = result.replace(item, covertItem);\r\n                })\r\n        }\r\n        const inlineEquation = result.match(/\\$(.*?)\\$/g);\r\n        const blockEquation = result.match(/(@)(.+?)(@)/gs);\r\n        const siunitXCondition =\r\n            /\\\\SI{.*?}{.*?}|\\\\SI\\[.*?]{.*?}{.*?}|\\\\SI{.*?}|\\\\NUM{.*?}/gi\r\n        const siunitX1 = result.match(siunitXCondition);\r\n        \r\n        console.log(\"siunitX1\");\r\n        // console.log(imgGroup);\r\n        // console.log(imgSoal);\r\n       \r\n          \r\n        if (inlineEquation !== null) {\r\n            inlineEquation.map((item) => {\r\n            const covertItem = item.replaceAll(String.fromCharCode(32), '\\\\,');\r\n            // console.log(covertItem);\r\n\r\n            result = result.replace(item, covertItem);\r\n        })\r\n        }\r\n        if (blockEquation !== null) {\r\n            blockEquation.map((item) => {\r\n                const covertItem = item\r\n                .replaceAll(String.fromCharCode(32)+\"\\\\\"+String.fromCharCode(32), \"\\\\,\")\r\n                    .replaceAll(String.fromCharCode(32), '\\\\,')\r\n                    .replaceAll(String.fromCharCode(13), '')\r\n                    .replaceAll(String.fromCharCode(9), '')\r\n                    .replaceAll(\"{}&\",\"\")\r\n                    .replaceAll(\"$\",\"\")\r\n                    .replaceAll(\"=\",\"&=\")\r\n                    .replaceAll(\"\\\\approx\",\"&\\\\approx\")\r\n                    .replaceAll(\"[per-mode&=symbol]\",\"[per-mode=symbol]\")\r\n                    // .replaceAll(\"=\",\"&=\")\r\n            \r\n            result = result.replace(item, covertItem);\r\n            })\r\n        }\r\n\r\n        if (siunitX1 !== null) {\r\n            siunitX1.map((item) => {\r\n                let convertResult = \"\";\r\n                let itemProseced;\r\n                let paramItemProseced;\r\n                let par;\r\n                let tothe;\r\n                if (/tothe/s.test(item)) {\r\n                    itemProseced = item+\"}\";\r\n                } else {\r\n                    itemProseced = item;\r\n                }\r\n                // console.log(\"siunitX1\");\r\n                // console.log(itemProseced);\r\n                \r\n                const mode = itemProseced.match(/\\[.*?]/s);\r\n                const param = itemProseced.match(/{.*?}/g);\r\n                // console.log(\"mode = \" + mode);\r\n                // console.log(\"param = \" + param);\r\n                if (mode !== null) {\r\n                    param.map((paramItem) => {\r\n                        if (/tothe/s.test(paramItem)) {\r\n                            paramItemProseced = paramItem + \"}\";\r\n                        } else {\r\n                            paramItemProseced = paramItem;\r\n                        }\r\n                        par = replaceAllCurlyBraces(paramItemProseced);\r\n                        // console.log(\"if not null mode = \" + mode[0]);\r\n                        convertResult += replaceSiunitx(mode[0], par) + \" \";\r\n                    })   \r\n                } else {\r\n                    param.map((paramItem) => {\r\n                         if (/tothe/s.test(paramItem)) {\r\n                             paramItemProseced = paramItem + \"}\";\r\n                             const findTothe = paramItemProseced.match(/(?<=tothe).*/s);\r\n                             tothe = \"^{\"+replaceAllCurlyBraces(findTothe[0])+\"}\";\r\n                             paramItemProseced = paramItemProseced.replaceAll(/(?<=tothe).*/g, \"\");\r\n                            //  console.log(\"paramItemProseced = \"+paramItemProseced)\r\n                            //  console.log(\"tothe = \"+tothe)\r\n                        } else {\r\n                             paramItemProseced = paramItem;\r\n                             tothe= \"\";\r\n                        }\r\n                        par = replaceAllCurlyBraces(paramItemProseced);\r\n                        convertResult += replaceSiunitx(\"\", par)+tothe+ \" \";\r\n                    })   \r\n                }\r\n                convertResult = convertResult.replaceAll(String.fromCharCode(32), '\\\\,');\r\n                result = result.replace(itemProseced, convertResult);\r\n                // console.log(\"convertResult = \" + convertResult);\r\n            })\r\n        }\r\n\r\n        // console.log(\"ini hasil resyo = \"+result);\r\n        // setSoalConverted(result);\r\n        // setSoalCache(soal);\r\n            return result;\r\n        } else {\r\n            return input;\r\n            // console.log(\"nothing change\")\r\n        }\r\n        \r\n        \r\n    }\r\n   \r\n\r\n    const replaceSiunitx = (mode , str) => {\r\n        let result;\r\n        let CodeMatch = false;\r\n        \r\n        SiunitX.map((item) => {\r\n            // console.log(\"mode replaceunix= \" + mode);\r\n            if (str === item.code && mode === \"\" && CodeMatch === false) {\r\n                result =  item.translation;\r\n                CodeMatch = true;\r\n            } else if (str === item.code && mode === \"[per-mode=symbol]\" && CodeMatch === false) { \r\n                result = item[\"per-mode=symbol\"];\r\n                CodeMatch = true;\r\n            } else if(str !== item.code && CodeMatch === false){\r\n                if (/-?\\d+(?=e).-?\\d+/s.test(str) || /(?=e).-?\\d+/s.test(str)) {\r\n                    const pangkat = str.match(/(?<=e).?\\d+/s);\r\n                    const nominal = str.match(/-?\\d+(?=e)|-?\\d+\\,\\d+(?=e)/s);\r\n                    if (pangkat !== null && nominal !== null) {\r\n                        result = nominal[0] + \" x 10^{\" + pangkat[0]+\"}\";\r\n                    } else if (pangkat !== null && nominal === null) {\r\n                        result = \"10^\" + pangkat[0];\r\n                    }else {\r\n                        result = str;\r\n                    }\r\n                } else {\r\n                    result = str;     \r\n                }\r\n                    // result = str;     \r\n            }\r\n        })\r\n        // console.log(result);\r\n        return result;\r\n    }\r\n\r\n\r\n    const selectMapelChanged = (e) => {\r\n        setSelectMapel(e.target.value);\r\n    }\r\n   \r\n    const tipeSoalChanged = (e) => {\r\n        setTipeSoal(e.target.value);\r\n    }\r\n    \r\n    const soalType = (e) => {\r\n        setSoal(e.target.value)\r\n    }\r\n    const jawabanType = (e) => {\r\n        setJawaban(e.target.value)\r\n    }\r\n    const pembahasanType = (e) => {\r\n        setPembahasan(e.target.value)\r\n    }\r\n    const selectKelasChanged = (e) => {\r\n        setSelectKelas(e.target.value)\r\n    }\r\n    \r\n    const selectBabSoalChanged = (e) => {\r\n        setSelectBabSoal(e.target.value)\r\n    }\r\n    \r\n    const selectTingkatKesulitanChanged = (e) => {\r\n        setSelectTingkatKesulitan(e.target.value)\r\n    }\r\n    \r\n    const pil_aChanged = (e) => {\r\n        setPil_a(e.target.value)\r\n    }\r\n    const pil_bChanged = (e) => {\r\n        setPil_b(e.target.value)\r\n    }\r\n    const pil_cChanged = (e) => {\r\n        setPil_c(e.target.value)\r\n    }\r\n    const pil_dChanged = (e) => {\r\n        setPil_d(e.target.value)\r\n    }\r\n    const pil_eChanged = (e) => {\r\n        setPil_e(e.target.value)\r\n    }\r\n    \r\n    const addData = (e) => {\r\n        setAddDataClicked(true);\r\n        let data;\r\n        if (tipeSoal === \"essai\") {\r\n            data = {\r\n                id: id,\r\n                soal: soal,\r\n                jawaban: jawaban,\r\n                pembahasan: pembahasan,\r\n                tipe_soal: tipeSoal,\r\n                id_mapel: selectMapel,\r\n                id_tingkat_kesulitan: selectTingkatKesulitan,\r\n                id_kelas: selectKelas,\r\n                id_bab_soal: selectbabSoal\r\n            }\r\n        } else {\r\n            data = {\r\n                id: id,\r\n                soal: soal,\r\n                pil_a: pil_a,\r\n                pil_b: pil_b,\r\n                pil_c: pil_c,\r\n                pil_d: pil_d,\r\n                pil_e: pil_e,\r\n                jawaban: jawaban,\r\n                pembahasan: pembahasan,\r\n                tipe_soal: tipeSoal,\r\n                id_mapel: selectMapel,\r\n                id_tingkat_kesulitan: selectTingkatKesulitan,\r\n                id_kelas: selectKelas,\r\n                id_bab_soal: selectbabSoal\r\n            }\r\n            \r\n        }\r\n        axios.put('/bank_soal',data)\r\n                .then(function (response) {\r\n                    console.log(response.data);\r\n                });\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        async function saveImages() { \r\n            axios.get('/bank_soal?last=\"1\"')\r\n                .then(function (response) {\r\n                    // setLatestId(response.data[0][\"id\"]);\r\n                    const dataform = new FormData() \r\n        \r\n                    dataform.append('nameimg', imgSoalName)\r\n                    // console.log(\"asd\" + response.data[0][\"id\"])\r\n                    dataform.append('id', response.data[0][\"id\"])\r\n                    imgSoalFile.map((item, index) => {\r\n                        dataform.append('file'+index, item)\r\n                    });\r\n\r\n                    axios.put('/gambar_soal',dataform)\r\n                        .then(function (response) {\r\n                            console.log(response);\r\n                    });\r\n                });\r\n        }\r\n\r\n        async function fetchdata() {\r\n            \r\n            axios.get('/bank_soal?id=' + id)\r\n                .then(function (response) {\r\n                    // setBankSoal(response.data);\r\n                    // console.log(bankSoal);\r\n                    const resSoal = response.data[0];\r\n                     \r\n                    axios.get('/mapel?id=' + resSoal.id_mapel)\r\n                        .then(function (response) {\r\n                            // setMapel(response.data);\r\n                            setSelectMapel(response.data[0].id)\r\n                        });\r\n                    \r\n                    axios.get('/kelas?id=' + resSoal.id_kelas)\r\n                    .then(function (response) {\r\n                        setKelas(response.data);\r\n                        setSelectKelas(response.data[0].id)\r\n                    });\r\n\r\n                    axios.get('/tingkat_kesulitan?id=' + resSoal.id_tingkat_kesulitan)\r\n                    .then(function (response) {\r\n                        // setTingkatKesulitan(response.data);\r\n                        setSelectTingkatKesulitan(response.data[0].id)\r\n                    });\r\n\r\n                    axios.get('/bab_soal?id=' + resSoal.id_bab_soal)\r\n                        .then(function (response) {\r\n                            // setBabSoal(response.data);\r\n                            setSelectBabSoal(response.data[0].id);\r\n                        });\r\n                    \r\n                    \r\n                    setTipeSoal(resSoal.tipe_soal);\r\n                    setSoal(resSoal.soal);\r\n                    setJawaban(resSoal.jawaban);\r\n                    setPembahasan(resSoal.pembahasan);\r\n\r\n                });\r\n            \r\n             axios.get('/mapel')\r\n                .then(function (response) {\r\n                    setMapel(response.data);\r\n                });\r\n            \r\n            axios.get('/kelas')\r\n                .then(function (response) {\r\n                    setKelas(response.data);\r\n                });\r\n            \r\n            axios.get('/tingkat_kesulitan')\r\n                .then(function (response) {\r\n                    setTingkatKesulitan(response.data);\r\n                });\r\n            \r\n              axios.get('/bab_soal?id_mapel=' + selectMapel)\r\n                .then(function (response) {\r\n                    setBabSoal(response.data);\r\n            });\r\n            \r\n                \r\n                \r\n           \r\n            \r\n            \r\n            \r\n            \r\n        }\r\n        fetchdata();\r\n        // if (selectMapel !== \"\") {\r\n        //     axios.get('/bab_soal?id_mapel=' + selectMapel)\r\n        //         .then(function (response) {\r\n        //             setBabSoal(response.data);\r\n        //     });\r\n        // }\r\n         if (addDataClicked) {\r\n            saveImages();\r\n            // postImg();\r\n            setAddDataClicked(false);\r\n        }\r\n    }, [addDataClicked]);\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {/* {\"id = \"+id}\r\n            <br /> */}\r\n            \r\n            {/* <div className=\"App\">\r\n                <h2>Using CKEditor 5 build in React</h2>\r\n                <CKEditor\r\n                    editor={ClassicEditor}\r\n                    // config={{\r\n                    //     plugins: [MathType],\r\n                    //      toolbar: [ 'bold', 'italic','MathType', 'ChemType', ]\r\n                    // }}\r\n                    data={soal}\r\n                    onReady={ editor => {\r\n                        // You can store the \"editor\" and use when it is needed.\r\n                        console.log( 'Editor is ready to use!', editor );\r\n                    } }\r\n                    onChange={ ( event, editor ) => {\r\n                        const data = editor.getData();\r\n                        setSoal(data);\r\n                        console.log( { event, editor, data } );\r\n                    } }\r\n                    onBlur={ ( event, editor ) => {\r\n                        console.log( 'Blur.', editor );\r\n                    } }\r\n                    onFocus={ ( event, editor ) => {\r\n                        console.log( 'Focus.', editor );\r\n                    } }\r\n                />\r\n            </div> */}\r\n            {/* <CKEditor\r\n                editor={ClassicEditor}\r\n                // config={{\r\n                //         plugins: [MathType],\r\n                //         toolbar: {\r\n                //             items:['MathType','ChemType']\r\n                //         }\r\n                //     }}\r\n                    // data=\"<p>Hello from CKEditor 5!</p>\"\r\n                    onReady={ editor => {\r\n                        // You can store the \"editor\" and use when it is needed.\r\n                        console.log( 'Editor is ready to use!', editor );\r\n                    } }\r\n                    onChange={ ( event, editor ) => {\r\n                        const data = editor.getData();\r\n                        console.log( { event, editor, data } );\r\n                    } }\r\n                    onBlur={ ( event, editor ) => {\r\n                        console.log( 'Blur.', editor );\r\n                    } }\r\n                    onFocus={ ( event, editor ) => {\r\n                        console.log( 'Focus.', editor );\r\n                    } }\r\n                /> */}\r\n            <span>mata pelajaran </span>\r\n            <select value={selectMapel} onChange={selectMapelChanged}>   \r\n            <option value=\"\" disabled ></option>\r\n                {mapel.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>kelas </span>\r\n            <select value={selectKelas} onChange={selectKelasChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {kelas.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>Bab </span>\r\n            <select value={selectbabSoal} onChange={selectBabSoalChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {babSoal.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>tingkat kesulitan </span>\r\n            <select value={selectTingkatKesulitan} onChange={selectTingkatKesulitanChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {tingkatKesulitan.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>tipe soal : </span>\r\n            <select value={tipeSoal} onChange={tipeSoalChanged}>\r\n                <option value=\"essai\">essai</option>\r\n                <option value=\"pilgan\">pilihan ganda</option>\r\n            </select>\r\n            <br />\r\n            <span>soal : </span>\r\n            <br/>\r\n            <div className={styles.editor}>\r\n            <textarea value={soal} onChange={soalType} name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>            \r\n                {/* <Latex>{soal}</Latex> */}\r\n                {/* {ReactHtmlParser(soal)} */}\r\n                <input type=\"file\" onChange={onImageChange.bind(this, \"soal\")} className=\"filetype\" />\r\n                <div className=\"img__group\" id=\"img__group__soal\">\r\n\r\n                </div>\r\n                <br />\r\n                {translationLatex(soal).split(\" \").map((item,index) => {\r\n                    return translationLatexPreview(\"soal\",item,index)\r\n                })}\r\n            </div>\r\n            <br />\r\n            {tipeSoal === \"essai\" ?\r\n                <div></div>\r\n            :\r\n                <div className={styles.pilihan__ganda}>\r\n                     <span>Pilihan A</span>\r\n                     <div className={styles.editor}>\r\n                    <textarea value={pil_a} onChange={e => {setPil_a(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <span>Pilih Gambar </span>\r\n                    <input type=\"file\" onChange={onImageChange.bind(this, \"pil_a\")} className=\"filetype\" />\r\n                    <br/>\r\n                    {/* <Latex>{pil_a}</Latex> */}\r\n                    {translationLatex(pil_a).split(\" \").map((item,index) => {\r\n                        return translationLatexPreview(\"pil_a\",item,index)\r\n                    })}\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan B</span>\r\n                     <div className={styles.editor}>\r\n                    <textarea value={pil_b} onChange={e => {setPil_b(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <span>Pilih Gambar </span>\r\n                    <input type=\"file\" onChange={onImageChange.bind(this, \"pil_b\")} className=\"filetype\" />\r\n                    <br/>\r\n                    {/* <Latex>{pil_b}</Latex> */}\r\n                    {translationLatex(pil_b).split(\" \").map((item,index) => {\r\n                        return translationLatexPreview(\"pil_b\",item,index)\r\n                    })}\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan C</span>\r\n                     <div className={styles.editor}>\r\n                    <textarea value={pil_c} onChange={e => {setPil_c(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <span>Pilih Gambar </span>\r\n                    <input type=\"file\" onChange={onImageChange.bind(this, \"pil_c\")} className=\"filetype\" />\r\n                    <br/>\r\n                    {/* <Latex>{pil_c}</Latex> */}\r\n                    {translationLatex(pil_c).split(\" \").map((item,index) => {\r\n                        return translationLatexPreview(\"pil_c\",item,index)\r\n                    })}\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan D</span>\r\n                    <div className={styles.editor}>\r\n                    <textarea value={pil_d} onChange={e => {setPil_d(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <span>Pilih Gambar </span>\r\n                    <input type=\"file\" onChange={onImageChange.bind(this, \"pil_d\")} className=\"filetype\" />\r\n                    <br/>\r\n                    {/* <Latex>{pil_d}</Latex> */}\r\n                    {translationLatex(pil_d).split(\" \").map((item,index) => {\r\n                        return translationLatexPreview(\"pil_d\",item,index)\r\n                    })}\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan E</span>\r\n                    <div className={styles.editor}>\r\n                    <textarea value={pil_e} onChange={e => {setPil_e(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <span>Pilih Gambar </span>\r\n                    <input type=\"file\" onChange={onImageChange.bind(this, \"pil_e\")} className=\"filetype\" />\r\n                    <br/>\r\n                    {/* <Latex>{pil_e}</Latex> */}\r\n                    {translationLatex(pil_e).split(\" \").map((item,index) => {\r\n                        return translationLatexPreview(\"pil_e\",item,index)\r\n                    })}\r\n                    </div>\r\n                    <br/>\r\n                </div>\r\n            }\r\n            <span>jawaban : </span>\r\n            <br />\r\n            {tipeSoal === \"essai\" ?\r\n            <div className={styles.editor}>\r\n                <textarea value={jawaban} onChange={jawabanType} name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n                <span>Pilih Gambar </span>\r\n                    <input type=\"file\" onChange={onImageChange.bind(this, \"jawaban\")} className=\"filetype\" />\r\n                    <br/>\r\n                    {/* <Latex>{jawaban} */}\r\n                    {/* <Latex displayMode={true}>$\\pi$</Latex> */}\r\n                    {/* </Latex> */}\r\n                    {/* {ReactHtmlParser(jawaban)} */}\r\n                    {/* {jawaban} */}\r\n                    {/* <div dangerouslySetInnerHTML={{__html: jawaban}}></div> */}\r\n                    {translationLatex(jawaban).split(\" \").map((item,index) => {\r\n                    return translationLatexPreview(\"jawaban\",item,index)\r\n                    })}\r\n            </div>\r\n                :\r\n            <div className={styles.jwb_pilgan}>\r\n                <select value={jawaban} onChange={jawabanType}>\r\n                    <option value=\"\"></option>\r\n                    <option value=\"a\">a</option>\r\n                    <option value=\"b\">b</option>\r\n                    <option value=\"c\">c</option>\r\n                    <option value=\"d\">d</option>\r\n                    <option value=\"e\">e</option>\r\n                </select>\r\n            </div>   \r\n            }\r\n            <br />\r\n            <span>pembahasan : </span>\r\n            <br/>\r\n            <div className={styles.editor}>\r\n            <textarea value={pembahasan} onChange={pembahasanType} name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n            <span>Pilih Gambar </span>\r\n                <input type=\"file\" onChange={onImageChange.bind(this, \"pembahasan\")} className=\"filetype\" />\r\n                <br/>\r\n                {/* <Latex>{pembahasan}</Latex> */}\r\n                {translationLatex(pembahasan).split(\" \").map((item,index) => {\r\n                    return translationLatexPreview(\"pembahasan\",item,index)\r\n                })}\r\n            </div>\r\n            <br />\r\n            \r\n            <Button title=\"Submit\" link=\"/\" onClick={addData} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditForm\r\n","D:\\Projek\\AppBimbel\\view\\view\\src\\JSON\\Siunitx.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"129","replacedBy":"133"},{"ruleId":"131","replacedBy":"134"},{"ruleId":"129","replacedBy":"135"},{"ruleId":"131","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":23,"column":12,"nodeType":"139","messageId":"140","endLine":23,"endColumn":19},{"ruleId":"137","severity":1,"message":"141","line":23,"column":21,"nodeType":"139","messageId":"140","endLine":23,"endColumn":31},{"ruleId":"137","severity":1,"message":"142","line":24,"column":12,"nodeType":"139","messageId":"140","endLine":24,"endColumn":19},{"ruleId":"137","severity":1,"message":"143","line":24,"column":21,"nodeType":"139","messageId":"140","endLine":24,"endColumn":31},{"ruleId":"137","severity":1,"message":"144","line":26,"column":12,"nodeType":"139","messageId":"140","endLine":26,"endColumn":20},{"ruleId":"145","severity":1,"message":"146","line":55,"column":40,"nodeType":"147","messageId":"148","endLine":55,"endColumn":42},{"ruleId":"145","severity":1,"message":"146","line":71,"column":39,"nodeType":"147","messageId":"148","endLine":71,"endColumn":41},{"ruleId":"145","severity":1,"message":"146","line":79,"column":38,"nodeType":"147","messageId":"148","endLine":79,"endColumn":40},{"ruleId":"145","severity":1,"message":"146","line":97,"column":33,"nodeType":"147","messageId":"148","endLine":97,"endColumn":35},{"ruleId":"145","severity":1,"message":"146","line":116,"column":43,"nodeType":"147","messageId":"148","endLine":116,"endColumn":45},{"ruleId":"145","severity":1,"message":"146","line":127,"column":43,"nodeType":"147","messageId":"148","endLine":127,"endColumn":45},{"ruleId":"145","severity":1,"message":"146","line":222,"column":28,"nodeType":"147","messageId":"148","endLine":222,"endColumn":30},{"ruleId":"149","severity":1,"message":"150","line":396,"column":8,"nodeType":"151","endLine":396,"endColumn":120,"suggestions":"152"},{"ruleId":"137","severity":1,"message":"153","line":39,"column":12,"nodeType":"139","messageId":"140","endLine":39,"endColumn":21},{"ruleId":"137","severity":1,"message":"154","line":39,"column":23,"nodeType":"139","messageId":"140","endLine":39,"endColumn":35},{"ruleId":"137","severity":1,"message":"155","line":40,"column":12,"nodeType":"139","messageId":"140","endLine":40,"endColumn":20},{"ruleId":"137","severity":1,"message":"156","line":40,"column":22,"nodeType":"139","messageId":"140","endLine":40,"endColumn":33},{"ruleId":"137","severity":1,"message":"157","line":55,"column":37,"nodeType":"139","messageId":"140","endLine":55,"endColumn":66},{"ruleId":"137","severity":1,"message":"158","line":56,"column":38,"nodeType":"139","messageId":"140","endLine":56,"endColumn":68},{"ruleId":"137","severity":1,"message":"159","line":58,"column":11,"nodeType":"139","messageId":"140","endLine":58,"endColumn":19},{"ruleId":"137","severity":1,"message":"160","line":60,"column":11,"nodeType":"139","messageId":"140","endLine":60,"endColumn":33},{"ruleId":"137","severity":1,"message":"161","line":66,"column":11,"nodeType":"139","messageId":"140","endLine":66,"endColumn":21},{"ruleId":"145","severity":1,"message":"146","line":72,"column":35,"nodeType":"147","messageId":"148","endLine":72,"endColumn":37},{"ruleId":"137","severity":1,"message":"162","line":142,"column":11,"nodeType":"139","messageId":"140","endLine":142,"endColumn":31},{"ruleId":"137","severity":1,"message":"163","line":146,"column":11,"nodeType":"139","messageId":"140","endLine":146,"endColumn":22},{"ruleId":"145","severity":1,"message":"146","line":245,"column":39,"nodeType":"147","messageId":"148","endLine":245,"endColumn":41},{"ruleId":"145","severity":1,"message":"146","line":283,"column":40,"nodeType":"147","messageId":"148","endLine":283,"endColumn":42},{"ruleId":"145","severity":1,"message":"146","line":301,"column":39,"nodeType":"147","messageId":"148","endLine":301,"endColumn":41},{"ruleId":"145","severity":1,"message":"146","line":309,"column":38,"nodeType":"147","messageId":"148","endLine":309,"endColumn":40},{"ruleId":"145","severity":1,"message":"146","line":327,"column":33,"nodeType":"147","messageId":"148","endLine":327,"endColumn":35},{"ruleId":"145","severity":1,"message":"146","line":346,"column":43,"nodeType":"147","messageId":"148","endLine":346,"endColumn":45},{"ruleId":"145","severity":1,"message":"146","line":357,"column":43,"nodeType":"147","messageId":"148","endLine":357,"endColumn":45},{"ruleId":"145","severity":1,"message":"146","line":396,"column":28,"nodeType":"147","messageId":"148","endLine":396,"endColumn":30},{"ruleId":"164","severity":1,"message":"165","line":407,"column":64,"nodeType":"166","messageId":"167","endLine":407,"endColumn":65,"suggestions":"168"},{"ruleId":"137","severity":1,"message":"169","line":428,"column":11,"nodeType":"139","messageId":"140","endLine":428,"endColumn":35},{"ruleId":"137","severity":1,"message":"170","line":430,"column":15,"nodeType":"139","messageId":"140","endLine":430,"endColumn":21},{"ruleId":"137","severity":1,"message":"171","line":446,"column":11,"nodeType":"139","messageId":"140","endLine":446,"endColumn":31},{"ruleId":"137","severity":1,"message":"172","line":486,"column":11,"nodeType":"139","messageId":"140","endLine":486,"endColumn":23},{"ruleId":"137","severity":1,"message":"173","line":489,"column":11,"nodeType":"139","messageId":"140","endLine":489,"endColumn":23},{"ruleId":"137","severity":1,"message":"174","line":492,"column":11,"nodeType":"139","messageId":"140","endLine":492,"endColumn":23},{"ruleId":"137","severity":1,"message":"175","line":495,"column":11,"nodeType":"139","messageId":"140","endLine":495,"endColumn":23},{"ruleId":"137","severity":1,"message":"176","line":498,"column":11,"nodeType":"139","messageId":"140","endLine":498,"endColumn":23},{"ruleId":"145","severity":1,"message":"146","line":608,"column":51,"nodeType":"147","messageId":"148","endLine":608,"endColumn":53},{"ruleId":"149","severity":1,"message":"177","line":697,"column":8,"nodeType":"151","endLine":697,"endColumn":147,"suggestions":"178"},{"ruleId":"137","severity":1,"message":"179","line":5,"column":8,"nodeType":"139","messageId":"140","endLine":5,"endColumn":23},{"ruleId":"137","severity":1,"message":"180","line":19,"column":12,"nodeType":"139","messageId":"140","endLine":19,"endColumn":20},{"ruleId":"137","severity":1,"message":"181","line":19,"column":22,"nodeType":"139","messageId":"140","endLine":19,"endColumn":33},{"ruleId":"137","severity":1,"message":"182","line":31,"column":25,"nodeType":"139","messageId":"140","endLine":31,"endColumn":39},{"ruleId":"137","severity":1,"message":"183","line":32,"column":12,"nodeType":"139","messageId":"140","endLine":32,"endColumn":24},{"ruleId":"137","severity":1,"message":"184","line":40,"column":12,"nodeType":"139","messageId":"140","endLine":40,"endColumn":32},{"ruleId":"137","severity":1,"message":"185","line":42,"column":12,"nodeType":"139","messageId":"140","endLine":42,"endColumn":16},{"ruleId":"137","severity":1,"message":"186","line":42,"column":18,"nodeType":"139","messageId":"140","endLine":42,"endColumn":25},{"ruleId":"145","severity":1,"message":"146","line":181,"column":40,"nodeType":"147","messageId":"148","endLine":181,"endColumn":42},{"ruleId":"145","severity":1,"message":"146","line":199,"column":39,"nodeType":"147","messageId":"148","endLine":199,"endColumn":41},{"ruleId":"145","severity":1,"message":"146","line":207,"column":38,"nodeType":"147","messageId":"148","endLine":207,"endColumn":40},{"ruleId":"145","severity":1,"message":"146","line":225,"column":33,"nodeType":"147","messageId":"148","endLine":225,"endColumn":35},{"ruleId":"145","severity":1,"message":"146","line":244,"column":43,"nodeType":"147","messageId":"148","endLine":244,"endColumn":45},{"ruleId":"145","severity":1,"message":"146","line":255,"column":43,"nodeType":"147","messageId":"148","endLine":255,"endColumn":45},{"ruleId":"145","severity":1,"message":"146","line":294,"column":28,"nodeType":"147","messageId":"148","endLine":294,"endColumn":30},{"ruleId":"164","severity":1,"message":"165","line":305,"column":64,"nodeType":"166","messageId":"167","endLine":305,"endColumn":65,"suggestions":"187"},{"ruleId":"137","severity":1,"message":"172","line":353,"column":11,"nodeType":"139","messageId":"140","endLine":353,"endColumn":23},{"ruleId":"137","severity":1,"message":"173","line":356,"column":11,"nodeType":"139","messageId":"140","endLine":356,"endColumn":23},{"ruleId":"137","severity":1,"message":"174","line":359,"column":11,"nodeType":"139","messageId":"140","endLine":359,"endColumn":23},{"ruleId":"137","severity":1,"message":"175","line":362,"column":11,"nodeType":"139","messageId":"140","endLine":362,"endColumn":23},{"ruleId":"137","severity":1,"message":"176","line":365,"column":11,"nodeType":"139","messageId":"140","endLine":365,"endColumn":23},{"ruleId":"145","severity":1,"message":"146","line":420,"column":51,"nodeType":"147","messageId":"148","endLine":420,"endColumn":53},{"ruleId":"149","severity":1,"message":"188","line":511,"column":8,"nodeType":"151","endLine":511,"endColumn":24,"suggestions":"189"},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],["190"],["191"],["190"],["191"],"no-unused-vars","'loadImg' is assigned a value but never used.","Identifier","unusedVar","'setLoadImg' is assigned a value but never used.","'imgSoal' is assigned a value but never used.","'setImgSoal' is assigned a value but never used.","'linkTemp' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchImageSoal', 'fetchUpdateBankSoal', and 'updateData'. Either include them or remove the dependency array.","ArrayExpression",["192"],"'soalCache' is assigned a value but never used.","'setSoalCache' is assigned a value but never used.","'latestId' is assigned a value but never used.","'setLatestId' is assigned a value but never used.","'setOnIimgSoalTotalChangedPlus' is assigned a value but never used.","'setOnIimgSoalTotalChangedMinus' is assigned a value but never used.","'base_url' is assigned a value but never used.","'onImageChangeActivated' is assigned a value but never used.","'cekimgsoal' is assigned a value but never used.","'removeImageActivated' is assigned a value but never used.","'removeImage' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\,.","Literal","unnecessaryEscape",["193","194"],"'replaceAllMultiCondition' is assigned a value but never used.","'result' is assigned a value but never used.","'replaceFormulasLatex' is assigned a value but never used.","'pil_aChanged' is assigned a value but never used.","'pil_bChanged' is assigned a value but never used.","'pil_cChanged' is assigned a value but never used.","'pil_dChanged' is assigned a value but never used.","'pil_eChanged' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'imgSoalFile' and 'imgSoalName'. Either include them or remove the dependency array.",["195"],"'ReactHtmlParser' is defined but never used.","'bankSoal' is assigned a value but never used.","'setBankSoal' is assigned a value but never used.","'setImgSoalName' is assigned a value but never used.","'imgSoalTotal' is assigned a value but never used.","'onImageChangeClicked' is assigned a value but never used.","'link' is assigned a value but never used.","'setLink' is assigned a value but never used.",["196","197"],"React Hook useEffect has missing dependencies: 'id', 'imgSoalFile', 'imgSoalName', and 'selectMapel'. Either include them or remove the dependency array.",["198"],"no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"messageId":"201","fix":"202","desc":"203"},{"messageId":"204","fix":"205","desc":"206"},{"desc":"207","fix":"208"},{"messageId":"201","fix":"209","desc":"203"},{"messageId":"204","fix":"210","desc":"206"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [selectMapel, selectKelas, selectbabSoal, selectTingkatKesulitan, nomor, nomorChangeTriggered, deleteData, id, bankSoal, updateData, fetchImageSoal, fetchUpdateBankSoal]",{"range":"213","text":"214"},"removeEscape",{"range":"215","text":"216"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"217","text":"218"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [selectMapel, addDataClicked, addDeskripsiClicked, soalConverted, soal, onImageChangeClicked, imgSoalTotalChangedPlus, imgSoalTotalChangedMinus, imgSoalName, imgSoalFile]",{"range":"219","text":"220"},{"range":"221","text":"216"},{"range":"222","text":"218"},"Update the dependencies array to be: [addDataClicked, id, imgSoalFile, imgSoalName, selectMapel]",{"range":"223","text":"224"},[16504,16616],"[selectMapel, selectKelas, selectbabSoal, selectTingkatKesulitan, nomor, nomorChangeTriggered, deleteData, id, bankSoal, updateData, fetchImageSoal, fetchUpdateBankSoal]",[17163,17164],"",[17163,17163],"\\",[26083,26222],"[selectMapel, addDataClicked, addDeskripsiClicked, soalConverted, soal, onImageChangeClicked, imgSoalTotalChangedPlus, imgSoalTotalChangedMinus, imgSoalName, imgSoalFile]",[13160,13161],[13160,13160],[19895,19911],"[addDataClicked, id, imgSoalFile, imgSoalName, selectMapel]"]