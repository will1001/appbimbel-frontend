[{"D:\\Projek\\AppBimbel\\view\\view\\src\\index.js":"1","D:\\Projek\\AppBimbel\\view\\view\\src\\axios.js":"2","D:\\Projek\\AppBimbel\\view\\view\\src\\component\\Button\\index.js":"3","D:\\Projek\\AppBimbel\\view\\view\\src\\App.js":"4","D:\\Projek\\AppBimbel\\view\\view\\src\\reportWebVitals.js":"5","D:\\Projek\\AppBimbel\\view\\view\\src\\App.test.js":"6","D:\\Projek\\AppBimbel\\view\\view\\src\\component\\Table\\index.js":"7","D:\\Projek\\AppBimbel\\view\\view\\src\\pages\\HomeSoal\\index.js":"8","D:\\Projek\\AppBimbel\\view\\view\\src\\setupTests.js":"9","D:\\Projek\\AppBimbel\\view\\view\\src\\pages\\AddForm\\index.js":"10","D:\\Projek\\AppBimbel\\view\\view\\src\\pages\\EditForm\\index.js":"11","D:\\Projek\\AppBimbel\\view\\view\\src\\JSON\\Siunitx.js":"12"},{"size":500,"mtime":1605345925540,"results":"13","hashOfConfig":"14"},{"size":136,"mtime":1606648957508,"results":"15","hashOfConfig":"14"},{"size":360,"mtime":1606348941460,"results":"16","hashOfConfig":"14"},{"size":573,"mtime":1606653960181,"results":"17","hashOfConfig":"14"},{"size":362,"mtime":1605345925540,"results":"18","hashOfConfig":"14"},{"size":246,"mtime":1605345925540,"results":"19","hashOfConfig":"20"},{"size":142,"mtime":1605582411831,"results":"21","hashOfConfig":"20"},{"size":7756,"mtime":1606572362472,"results":"22","hashOfConfig":"14"},{"size":241,"mtime":1605345925540,"results":"23","hashOfConfig":"20"},{"size":24015,"mtime":1608180837767,"results":"24","hashOfConfig":"14"},{"size":14195,"mtime":1606644837925,"results":"25","hashOfConfig":"14"},{"size":752,"mtime":1608176353973,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"7vxe8",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ltcuru",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projek\\AppBimbel\\view\\view\\src\\index.js",[],["57","58"],"D:\\Projek\\AppBimbel\\view\\view\\src\\axios.js",[],"D:\\Projek\\AppBimbel\\view\\view\\src\\component\\Button\\index.js",[],"D:\\Projek\\AppBimbel\\view\\view\\src\\App.js",[],["59","60"],"D:\\Projek\\AppBimbel\\view\\view\\src\\reportWebVitals.js",[],["61","62"],"D:\\Projek\\AppBimbel\\view\\view\\src\\App.test.js",[],"D:\\Projek\\AppBimbel\\view\\view\\src\\component\\Table\\index.js",[],"D:\\Projek\\AppBimbel\\view\\view\\src\\pages\\HomeSoal\\index.js",["63"],"import React,{ useEffect, useState } from 'react'\r\nimport styles from './styles.module.css'\r\nimport Button from '../../component/Button'\r\nimport axios from '../../axios'\r\n\r\nfunction HomeSoal(props) {\r\n    const Latex = require('react-latex');\r\n    const [bankSoal, setBankSoal] = useState([]);\r\n    const [mapel, setMapel] = useState([]);\r\n    const [kelas, setKelas] = useState([]);\r\n    const [babSoal, setBabSoal] = useState([]);\r\n    const [tingkatKesulitan, setTingkatKesulitan] = useState([]);\r\n    const [selectMapel, setSelectMapel] = useState(\"\");\r\n    const [selectKelas, setSelectKelas] = useState(\"\");\r\n    const [selectbabSoal, setSelectBabSoal] = useState(\"\");\r\n    const [selectTingkatKesulitan, setSelectTingkatKesulitan] = useState(\"\");\r\n    const [nomor, setNomor] = useState(1);\r\n    const [id, setId] = useState(\"\");\r\n    const [deleteData, setDeleteData] = useState(false);\r\n    const [updateData, setUpdateData] = useState(false);\r\n\r\n\r\n    const selectMapelChanged = (e) => {\r\n        setSelectMapel(e.target.value);\r\n        setUpdateData(true);\r\n        \r\n    }\r\n\r\n   \r\n    \r\n    const nomorChanged = (e) => {\r\n        setNomor(e.target.value)\r\n    }\r\n    const selectKelasChanged = (e) => {\r\n        setSelectKelas(e.target.value)\r\n        setUpdateData(true);\r\n    }\r\n    const selectBabSoalChanged = (e) => {\r\n        setSelectBabSoal(e.target.value)\r\n        setUpdateData(true);\r\n    }\r\n    const selectTingkatKesulitanChanged = (e) => {\r\n        setSelectTingkatKesulitan(e.target.value)\r\n        setUpdateData(true);\r\n    }\r\n    const fetchUpdateBankSoal = (e) => {\r\n        axios.get('/bank_soal?id_mapel='\r\n                + selectMapel +\r\n                '&id_kelas=' + selectKelas\r\n                + '&id_bab_soal=' + selectbabSoal\r\n                +'&id_tingkat_kesulitan=' + selectTingkatKesulitan)\r\n                .then(function (response) {\r\n                    setBankSoal(response.data);\r\n                    if (response.data.length !== 0 ) {\r\n                        if(nomor !== 0){\r\n                            setId(response.data[nomor - 1].id);\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchdata() {\r\n            \r\n            axios.get('/mapel')\r\n                .then(function (response) {\r\n                    setMapel(response.data);\r\n                });\r\n            \r\n            axios.get('/kelas')\r\n                .then(function (response) {\r\n                    setKelas(response.data);\r\n                });\r\n            \r\n            axios.get('/tingkat_kesulitan')\r\n                .then(function (response) {\r\n                    setTingkatKesulitan(response.data);\r\n                });\r\n        }\r\n        fetchdata();\r\n        if (selectMapel !== \"\") {\r\n            axios.get('/bab_soal?id_mapel=' + selectMapel)\r\n                .then(function (response) {\r\n                    setBabSoal(response.data);\r\n            });\r\n        }\r\n        if (deleteData) {\r\n            const data = {\r\n                id : id\r\n            }\r\n            axios.post('/bank_soal',data)\r\n                .then(function (response) {\r\n                    console.log(response.data);\r\n                });\r\n            setNomor(bankSoal.length - 1);\r\n            axios.get('/bank_soal?id_mapel='\r\n                + selectMapel +\r\n                '&id_kelas=' + selectKelas\r\n                + '&id_bab_soal=' + selectbabSoal\r\n                +'&id_tingkat_kesulitan=' + selectTingkatKesulitan)\r\n                .then(function (response) {\r\n                    setBankSoal(response.data);\r\n                    if (response.data.length !== 0) {\r\n                        if (nomor !== 0) {\r\n                            setId(response.data[response.data.length - 1].id);\r\n                        }\r\n                    }\r\n                });\r\n                setDeleteData(false)\r\n        }\r\n        // if (nomor > 0) {\r\n            \r\n        // }\r\n        if (\r\n            selectMapel !== \"\" &&\r\n            selectKelas !== \"\" &&\r\n            selectbabSoal !== \"\" &&\r\n            selectTingkatKesulitan !== \"\" &&\r\n            updateData\r\n        ) {\r\n            fetchUpdateBankSoal();\r\n            setUpdateData(false);\r\n            \r\n            }\r\n    }, [selectMapel,selectKelas,selectbabSoal,selectTingkatKesulitan,nomor,deleteData,id,bankSoal]);\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.button__group}>\r\n                <Button title=\"Tambah Soal\" link=\"/add_soal\" />\r\n                {bankSoal.length === 0 ? \r\n                    <>\r\n                    </>\r\n                :\r\n                    <>\r\n                        <Button title=\"Edit Soal\" link={'/edit_soal/'+ id } />\r\n                        <Button link=\"/\" title=\"Hapus Soal\" onClick={e =>{setDeleteData(true)}} />\r\n                    </>\r\n                }\r\n            </div>\r\n            <span>mata pelajaran </span>\r\n            <select value={selectMapel} onChange={selectMapelChanged}>   \r\n            <option value=\"\" disabled ></option>\r\n                {mapel.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>kelas </span>\r\n            <select value={selectKelas} onChange={selectKelasChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {kelas.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>Bab </span>\r\n            <select value={selectbabSoal} onChange={selectBabSoalChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {babSoal.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>tingkat kesulitan </span>\r\n            <select value={selectTingkatKesulitan} onChange={selectTingkatKesulitanChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {tingkatKesulitan.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>No </span>\r\n            <select value={nomor} onChange={nomorChanged}>\r\n                <option value=\"\"></option>\r\n                {bankSoal.map((item,index) => (\r\n                   <option key={item.id} value={index+1}>{index+1}</option>\r\n                ))}\r\n            </select>\r\n            <br />\r\n            {bankSoal.slice(nomor-1,nomor).map(item => (\r\n                <div key={item.id} className=\"\">\r\n                    {/* //    <option key={item.id} value={item.id}>{item.deskripsi}</option> */}\r\n                <strong>Soal :</strong>\r\n                <p><Latex>{item.soal}</Latex></p>\r\n                    {item.tipe_soal === \"pilgan\" ? \r\n                        <div className=\"\">\r\n                            <p>A. {item.pil_a}</p>\r\n                            <p>B. {item.pil_b}</p>\r\n                            <p>C. {item.pil_c}</p>\r\n                            <p>D. {item.pil_d}</p>\r\n                            <p>E. {item.pil_e}</p>\r\n                        </div>\r\n                    :\r\n                        <div className=\"\"></div>\r\n                }    \r\n                <strong>Jawaban :</strong>\r\n                <p><Latex>{item.jawaban}</Latex></p>\r\n                <strong>Pembahasan :</strong>\r\n                <p><Latex>{item.pembahasan}</Latex></p>\r\n                {/* <a href=\"#0\"></a> */}\r\n                </div>\r\n            ))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeSoal\r\n","D:\\Projek\\AppBimbel\\view\\view\\src\\setupTests.js",[],"D:\\Projek\\AppBimbel\\view\\view\\src\\pages\\AddForm\\index.js",["64"],"import React,{ useEffect, useState } from 'react'\r\nimport Button from '../../component/Button'\r\nimport styles from './styles.module.css'\r\nimport axios from '../../axios'\r\n// import ReactHtmlParser from 'react-html-parser';\r\n// import CKEditor from 'ckeditor4-react';\r\n// import { CKEditor } from '@ckeditor/ckeditor5-react';\r\n// import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n// import CKEditor from '@ckeditor/ckeditor5-react';\r\n// import ClassicEditor from 'ckeditor5-classic-with-mathtype';\r\n// import MathType from '@wiris/mathtype-ckeditor5';\r\n// import MathType from '@wiris/mathtype-ckeditor5';\r\n// import MathType from '@ckeditor/ckeditor5-react/';\r\n// import CKEditor from '@ckeditor/ckeditor5-react';\r\n// import ClassicEditor from 'ckeditor5-classic-with-mathtype';\r\nimport 'katex/dist/katex.min.css';\r\n// import TeX from '@matejmazur/react-katex';\r\n// import { MathComponent } from 'mathjax-react'\r\nimport SiunitX from '../../JSON/Siunitx'\r\n\r\n\r\n\r\nfunction AddForm(props) {\r\n    const Latex = require('react-latex');\r\n    const [mapel, setMapel] = useState([]);\r\n    const [kelas, setKelas] = useState([]);\r\n    const [babSoal, setBabSoal] = useState([]);\r\n    const [tingkatKesulitan, setTingkatKesulitan] = useState([]);\r\n    const [selectMapel, setSelectMapel] = useState(\"\");\r\n    const [selectKelas, setSelectKelas] = useState(\"\");\r\n    const [selectbabSoal, setSelectBabSoal] = useState(\"\");\r\n    const [selectTingkatKesulitan, setSelectTingkatKesulitan] = useState(\"\");\r\n    const [tipeSoal, setTipeSoal] = useState(\"essai\");\r\n    const [soal, setSoal] = useState(\"\");\r\n    const [jawaban, setJawaban] = useState(\"\");\r\n    const [pembahasan, setPembahasan] = useState(\"\");\r\n    const [pil_a, setPil_a] = useState(\"\");\r\n    const [pil_b, setPil_b] = useState(\"\");\r\n    const [pil_c, setPil_c] = useState(\"\");\r\n    const [pil_d, setPil_d] = useState(\"\");\r\n    const [pil_e, setPil_e] = useState(\"\");\r\n    const [popUpMenu, setPopUpMenu] = useState(false);\r\n    const [popUpTitle, setPopUpTitle] = useState(\"\");\r\n    const [inputDeskripsi, setInputDeskripsi] = useState(\"\");\r\n    const [addDeskripsiClicked, setAddDeskripsiClicked] = useState(false);\r\n\r\n    // const data = soal.replaceAll(String.fromCharCode(32), '')\r\n    //                     .replaceAll(String.fromCharCode(13), '')\r\n    //                     .replaceAll(\"{}&\",'');\r\n    //                     console.log(\"dataadnda : \"+data);\r\n    //                     // console.log(/\\@(.*?)\\@/g.test(data))\r\n\r\n    const replaceSiunitx = (mode , str) => {\r\n        let result;\r\n        let CodeMatch = false;\r\n        \r\n        SiunitX.map((item) => {\r\n            // console.log(\"mode = \"+ mode);\r\n            // console.log(\"item.code = \"+ item.code);\r\n            // console.log(\"str= \"+ str);\r\n            // console.log(mode === \"\");\r\n            // console.log(\"item code = \" + item.code);\r\n            // const code = String.raw`${item.code}\r\n            // console.log(\"code = \" + code);\r\n            if (str === item.code && mode === \"\" && CodeMatch === false) {\r\n                // console.log(item.translation);\r\n                // console.log(SiunitX);\r\n                // return item.translation;\r\n                result =  item.translation;\r\n                CodeMatch = true;\r\n            } else if (str === item.code && mode === \"per-mode=symbol\" && CodeMatch === false) { \r\n                result = item[\"per-mode=symbol\"];\r\n                CodeMatch = true;\r\n            } else if(str !== item.code && CodeMatch === false){\r\n                result = str;    \r\n            }\r\n        })\r\n        // console.log(result);\r\n        return result;\r\n    }\r\n\r\n    // console.log(SiunitX);\r\n\r\n\r\n    const charReplace = (sentences, params) => {\r\n        let temp = sentences;\r\n        const result = params.map(item => {\r\n            temp = temp.replaceAll(item.before, item.after);\r\n            return temp;\r\n        })\r\n\r\n        return temp;\r\n        \r\n    }\r\n\r\n    const replaceFormulasLatex = (str) => {\r\n        const inlineEquation = str.match(/\\$(.*?)\\$/g);\r\n        const result = inlineEquation.map(i => {\r\n            return i.replace(/\\$/g, \"\");\r\n        })\r\n        // console.log(str.split(\" \"));\r\n        return result;\r\n        \r\n    }\r\n\r\n    const selectMapelChanged = (e) => {\r\n        setSelectMapel(e.target.value);\r\n    }\r\n   \r\n    const tipeSoalChanged = (e) => {\r\n        setTipeSoal(e.target.value);\r\n    }\r\n    \r\n    const soalType = (e) => {\r\n        setSoal(e.target.value)\r\n    }\r\n    const jawabanType = (e) => {\r\n        setJawaban(e.target.value)\r\n    }\r\n    const pembahasanType = (e) => {\r\n        setPembahasan(e.target.value)\r\n    }\r\n    const selectKelasChanged = (e) => {\r\n        setSelectKelas(e.target.value)\r\n    }\r\n    \r\n    const selectBabSoalChanged = (e) => {\r\n        setSelectBabSoal(e.target.value)\r\n    }\r\n    \r\n    const selectTingkatKesulitanChanged = (e) => {\r\n        setSelectTingkatKesulitan(e.target.value)\r\n    }\r\n    \r\n    const pil_aChanged = (e) => {\r\n        setPil_a(e.target.value)\r\n    }\r\n    const pil_bChanged = (e) => {\r\n        setPil_b(e.target.value)\r\n    }\r\n    const pil_cChanged = (e) => {\r\n        setPil_c(e.target.value)\r\n    }\r\n    const pil_dChanged = (e) => {\r\n        setPil_d(e.target.value)\r\n    }\r\n    const pil_eChanged = (e) => {\r\n        setPil_e(e.target.value)\r\n    }\r\n  \r\n    const tambahDeskripsi = (title) => {\r\n        setPopUpMenu(true);\r\n        if (selectMapel === \"\" && title === \"Bab Soal\") {\r\n            alert(\"Pilih Mapel Terlebih dahulu\");\r\n            setPopUpMenu(false);\r\n        }\r\n        setPopUpTitle(title);\r\n    }\r\n\r\n    \r\n    const addData = (e) => {\r\n        let data;\r\n        if (tipeSoal === \"essai\") {\r\n            data = {\r\n                soal: soal,\r\n                jawaban: jawaban,\r\n                pembahasan: pembahasan,\r\n                tipe_soal: tipeSoal,\r\n                id_mapel: selectMapel,\r\n                id_tingkat_kesulitan: selectTingkatKesulitan,\r\n                id_kelas: selectKelas,\r\n                id_bab_soal: selectbabSoal\r\n            }\r\n        } else {\r\n            data = {\r\n                soal: soal,\r\n                pil_a: pil_a,\r\n                pil_b: pil_b,\r\n                pil_c: pil_c,\r\n                pil_d: pil_d,\r\n                pil_e: pil_e,\r\n                jawaban: jawaban,\r\n                pembahasan: pembahasan,\r\n                tipe_soal: tipeSoal,\r\n                id_mapel: selectMapel,\r\n                id_tingkat_kesulitan: selectTingkatKesulitan,\r\n                id_kelas: selectKelas,\r\n                id_bab_soal: selectbabSoal\r\n            }\r\n        }\r\n        axios.post('/bank_soal',data)\r\n                .then(function (response) {\r\n                    console.log(response.data);\r\n                });\r\n    }\r\n    \r\n    const addDeskripsi = () => {\r\n        setAddDeskripsiClicked(true);\r\n        // const data = {\r\n        //         deskripsi: deskripsi,\r\n        // }\r\n\r\n        let tableName;\r\n        let data;\r\n        data = {\r\n            deskripsi : inputDeskripsi\r\n        }\r\n        switch (popUpTitle) {\r\n            case \"Mapel\":\r\n                tableName = \"mapel\";\r\n                break;\r\n            case \"Kelas\":\r\n                tableName = \"kelas\";\r\n                break;\r\n            case \"Bab Soal\":\r\n                tableName = \"bab_soal\";\r\n                data = {\r\n                    deskripsi: inputDeskripsi,\r\n                    id_mapel: selectMapel\r\n                }\r\n                break;\r\n            case \"Tingkat Kesulitan\":\r\n                tableName = \"tingkat_kesulitan\";\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n\r\n        // console.log(tableName);\r\n        \r\n        axios.post('/' + tableName,data)\r\n                .then(function (response) {\r\n                    console.log(response.data);\r\n                });\r\n        \r\n        setPopUpMenu(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchdata() {\r\n            \r\n            axios.get('/mapel')\r\n                .then(function (response) {\r\n                    setMapel(response.data);\r\n                });\r\n            \r\n            axios.get('/kelas')\r\n                .then(function (response) {\r\n                    setKelas(response.data);\r\n                });\r\n            \r\n            axios.get('/tingkat_kesulitan')\r\n                .then(function (response) {\r\n                    setTingkatKesulitan(response.data);\r\n                });\r\n        }\r\n        fetchdata();\r\n        if (selectMapel !== \"\") {\r\n            axios.get('/bab_soal?id_mapel=' + selectMapel)\r\n                .then(function (response) {\r\n                    setBabSoal(response.data);\r\n            });\r\n        }\r\n        if (addDeskripsiClicked) {\r\n            fetchdata();\r\n            setAddDeskripsiClicked(false);\r\n        }\r\n    }, [selectMapel, addDeskripsiClicked]);\r\n    \r\n    // const str = \"\"\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            \r\n             {/* <CKEditor\r\n                    editor={ClassicEditor}\r\n                    config={{\r\n                        toolbar: {\r\n                            items: [\r\n                                'heading', 'MathType', 'ChemType',\r\n                                '|',\r\n                                'bold',\r\n                                'italic',\r\n                                // 'link',\r\n                                // 'bulletedList',\r\n                                // 'numberedList',\r\n                                'imageUpload',\r\n                                // 'mediaEmbed',\r\n                                // 'insertTable',\r\n                                // 'blockQuote',\r\n                                'undo',\r\n                                'redo'\r\n                            ]\r\n                        },\r\n                    }}\r\n                    data=\"<p>Hello from CKEditor 5 with MathType!</p>\"\r\n                     onChange={ ( event, editor ) => {\r\n                        const data = editor.getData();\r\n                        console.log(data);\r\n                    } }\r\n                    onInit={editor => {\r\n                        // You can store the \"editor\" and use when it is needed.\r\n                        console.log( 'Editor is ready to use!', editor );\r\n                    }}\r\n                /> */}\r\n            \r\n                <br/>\r\n            {popUpMenu ? \r\n            <div className={styles.popup__menu__container}>\r\n                <div className={styles.popup__menu}>\r\n                    <h5>{popUpTitle}</h5>\r\n                    <input type=\"text\" placeholder={popUpTitle} onChange={(e)=>{setInputDeskripsi(e.target.value)}} />\r\n                    <div className={styles.button__group}>\r\n                    <button onClick={()=>{setPopUpMenu(false)}}>Close</button>\r\n                    <button onClick={addDeskripsi}>Submit</button>\r\n                    </div>    \r\n                </div>\r\n            </div>\r\n            :\r\n            \"\"\r\n            }\r\n            <span>mata pelajaran </span>\r\n            <select value={selectMapel} onChange={selectMapelChanged}>   \r\n            <option value=\"\" disabled ></option>\r\n            <input type=\"text\" name=\"\" id=\"\"/>\r\n                {mapel.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n                {/* <option value=\"\" onClick={tambahDeskripsi}>+</option> */}\r\n            </select>\r\n            <button onClick={(title) => tambahDeskripsi(\"Mapel\")}>+</button>\r\n            <br/>\r\n            <span>kelas </span>\r\n            <select value={selectKelas} onChange={selectKelasChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {kelas.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <button onClick={(title) => tambahDeskripsi(\"Kelas\")}>+</button>\r\n            <br/>\r\n            <span>Bab </span>\r\n            <select value={selectbabSoal} onChange={selectBabSoalChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {babSoal.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <button onClick={(title) => tambahDeskripsi(\"Bab Soal\")}>+</button>\r\n            <br/>\r\n            <span>tingkat kesulitan </span>\r\n            <select value={selectTingkatKesulitan} onChange={selectTingkatKesulitanChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {tingkatKesulitan.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <button onClick={(title) => tambahDeskripsi(\"Tingkat Kesulitan\")}>+</button>\r\n            <br/>\r\n            <span>tipe soal : </span>\r\n            <select value={tipeSoal} onChange={tipeSoalChanged}>\r\n                <option value=\"essai\">essai</option>\r\n                <option value=\"pilgan\">pilihan ganda</option>\r\n            </select>\r\n            <br />\r\n            {/* <span>Generate Latex : </span> */}\r\n            \r\n            <br />\r\n            <span>soal : </span>\r\n            <br/>\r\n            <div className={styles.editor}>\r\n            <textarea value={soal} onChange={soalType} name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>            \r\n                <Latex dangerouslySetInnerHTML={{__html: soal}}></Latex>\r\n                {/* <div className={styles.text}>\r\n                    <Latex>{'$' +\r\n                        charReplace(soal,\r\n                            [\r\n                                {\r\n                                    'before': String.fromCharCode(32),\r\n                                    'after': String.fromCharCode(92) + String.fromCharCode(32)\r\n                                },\r\n                                {\r\n                                    'before': String.fromCharCode(10),\r\n                                    'after':    String.fromCharCode(92) + String.fromCharCode(92)\r\n                                }\r\n                            ]\r\n                        )\r\n                             +\r\n                        '$'}</Latex>\r\n                </div> */}\r\n                {/* <Latex displayMode={true}>{soal}</Latex> */}\r\n                {/* <p>aslkhdkjasd <Latex>{String.raw`$\\int_0^1 x^2\\ dx$`}</Latex> asldjlaksd <Latex displayMode={true}>{String.raw`$\\int_0^1 x^2\\ dx$`}</Latex></p> */}\r\n                {/* <div dangerouslySetInnerHTML={{__html: soal}}></div> */}\r\n                {/* {ReactHtmlParser(soal)} */}\r\n                {/* {Latex.render(\"c = \\\\pm\\\\sqrt{a^2 + b^2}\")} */}\r\n                {/* {soal}\r\n                <br/>\r\n                {soal.split(\"$\").map(i => (\r\n                    <div>{i}</div>\r\n                ))}\r\n                <br />\r\n                <h1>subs</h1>\r\n                {soal.substring(\r\n                    soal.lastIndexOf(\":\") + 1, \r\n                    soal.lastIndexOf(\";\")\r\n                )} */}\r\n                {/* <Latex>{ soal }</Latex> */}\r\n              \r\n                {soal.split(\" \").map((item,index) => {\r\n                    \r\n                    // console.log(item);\r\n                    // console.log(/(@)(.+?)(@)/s.test(item));\r\n                    //     if (/(@)(.+?)(@)/s.test(item)) {\r\n                        \r\n                    //     const data = item.replaceAll(String.fromCharCode(32), '')\r\n                    //     .replaceAll(String.fromCharCode(13), '')\r\n                    //     .replaceAll(\"{}&\",'');\r\n                    //         console.log(\"dataadnda : \" + data);\r\n                            \r\n                    //     // console.log(/\\@(.*?)\\@/g.test(data))\r\n                    //         // console.log(\"data = =\"+data);\r\n                    //     // let result = data.replaceAll(/\\\\si{(.*?)}{.*?}/g, '');\r\n                    //     // result = result.replaceAll(/\\\\SI|\\\\si|\\\\NUM|\\\\num/g, '');\r\n                    //     let results;\r\n                    //     results = data.replaceAll(\"@\", \"$$\")\r\n                    //     const findSiunitX = data.match(/\\\\si{(.*?)}{.*?}/g);\r\n                    //     // console.log(a);\r\n                    //     // return (<Latex key={index} displayMode={true}>{data.replaceAll(\"@\",\"$\")}</Latex>)\r\n                    // //       console.log(\"data = \"+data);\r\n                    // //       console.log(\"cond = \"+/\\\\SI|\\\\si|\\\\NUM|\\\\num/g.test(data));\r\n                    // //     if (/\\\\SI|\\\\si|\\\\NUM|\\\\num/g.test(data)) {\r\n                    // //         const a = data.match(/(?<=\\\\si).*/g); \r\n                    //     findSiunitX.map((item) => {\r\n                    //         const result = item.match(/(?<=\\{)(.*?)(?=\\})/g);\r\n                    //         const mode = item.match(/(?<=\\[)(.*?)(?=\\])/g);\r\n                    //         //         console.log(a);\r\n                            \r\n                        \r\n                    //         if (result.length > 1) {\r\n                    //             let param1;\r\n                    //             let param2;\r\n                    //             if (mode === null) {\r\n                    //                 param1 = replaceSiunitx(\"\", result[0]);\r\n                    //                 param2 = replaceSiunitx(\"\", result[1]);\r\n                    //             } else {\r\n                    //                 param1 = replaceSiunitx(mode[0], result[0]);\r\n                    //                 param2 = replaceSiunitx(mode[0], result[1]);\r\n                    //             }\r\n                    //             // console.log(\"result = \" + param1 + param2);\r\n                    //             results = results.replace(/\\\\si{(.*?)}{.*?}/s, param1 + param2);\r\n                    //             // return (<Latex key={index}>{abc}</Latex>);\r\n                    //         } else {\r\n                    //             let param1;\r\n                    //             mode === null ? param1 = replaceSiunitx(\"\", result[0]) : param1 = replaceSiunitx(mode[0], result[0]);\r\n                    //             // console.log(\"result param2 = \"+param2);\r\n                    //             // return (<Latex key={index} >{param1}</Latex>);\r\n                    //         }\r\n                    //     });\r\n                    //         return (<Latex key={index}>{results}</Latex>);\r\n\r\n                            \r\n\r\n                    // }else{\r\n                    //     return (<Latex key={index} displayMode={true}>{data.replaceAll(\"@\",\"$\")}</Latex>)\r\n                    // }\r\n                        \r\n                    // }\r\n                    //  else if (/\\$(.*?)\\$/g.test(item)) {\r\n                    //     return (<Latex key={index}>{ item + \" \" }</Latex>)\r\n                    // }\r\n                    //  else if (/\\\\begin{align*}(.*?)\\\\end{align*}/g.test(item)) {\r\n                    //     return (<Latex key={index} displayMode={true}>{ item }</Latex>)\r\n                    // }\r\n                    // else if (/\\\\SI|\\\\si|\\\\NUM|\\\\num/g.test(item)) {\r\n                    //     const result = item.match(/(?<=\\{)(.*?)(?=\\})/g);\r\n                    //     const mode = item.match(/(?<=\\[)(.*?)(?=\\])/g);\r\n                        \r\n                    //     if (result.length > 1) {\r\n                    //         let param1;\r\n                    //         let param2;\r\n                    //         if (mode === null) {\r\n                    //             param1 = replaceSiunitx(\"\",result[0]);\r\n                    //             param2 = replaceSiunitx(\"\",result[1]);\r\n                    //         } else {\r\n                    //             param1 = replaceSiunitx(mode[0],result[0]);\r\n                    //             param2 = replaceSiunitx(mode[0],result[1]);\r\n                    //         }\r\n                    //         // console.log(\"result param2 = \"+param2);\r\n                    //         return (<Latex key={index}>{param1 + \" \" + param2 + \" \"}</Latex>);\r\n                    //     } else {\r\n                    //         let param1;\r\n                    //         mode === null ? param1 = replaceSiunitx(\"\", result[0]) : param1 = replaceSiunitx(mode[0], result[0]);\r\n                    //         return (<Latex key={index}>{param1}</Latex>);\r\n                    //     }\r\n\r\n                    // }\r\n                    // else{\r\n                    //     return (<span key={index}>{ item + \" \" }</span>);\r\n                    // }\r\n                // })}\r\n            </div>\r\n            <br />\r\n            {tipeSoal === \"essai\" ?\r\n                <div></div>\r\n            :\r\n                <div className={styles.pilihan__ganda}>\r\n                    <span>Pilihan A</span>\r\n                     <div className={styles.editor}>\r\n                    <textarea value={pil_a} onChange={e => {setPil_a(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <Latex>{pil_a}</Latex>\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan B</span>\r\n                     <div className={styles.editor}>\r\n                    <textarea value={pil_b} onChange={e => {setPil_b(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <Latex>{pil_b}</Latex>\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan C</span>\r\n                     <div className={styles.editor}>\r\n                    <textarea value={pil_c} onChange={e => {setPil_c(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <Latex>{pil_c}</Latex>\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan D</span>\r\n                    <div className={styles.editor}>\r\n                    <textarea value={pil_d} onChange={e => {setPil_d(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <Latex>{pil_d}</Latex>\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan E</span>\r\n                    <div className={styles.editor}>\r\n                    <textarea value={pil_e} onChange={e => {setPil_e(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <Latex>{pil_e}</Latex>\r\n                    </div>\r\n                    <br/>\r\n                </div>\r\n            }\r\n            <span>jawaban : </span>\r\n            <br />\r\n            {tipeSoal === \"essai\" ?\r\n            <div className={styles.editor}>\r\n                <textarea value={jawaban} onChange={jawabanType} name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n                    <Latex>{jawaban}\r\n                    {/* <Latex displayMode={true}>$\\pi$</Latex> */}\r\n                    </Latex>\r\n                    {/* {ReactHtmlParser(jawaban)} */}\r\n                    {/* {jawaban} */}\r\n                    {/* <div dangerouslySetInnerHTML={{__html: jawaban}}></div> */}\r\n            </div>\r\n                :\r\n            <div className={styles.jwb_pilgan}>\r\n                <select value={jawaban} onChange={jawabanType}>\r\n                    <option value=\"\"></option>\r\n                    <option value=\"a\">a</option>\r\n                    <option value=\"b\">b</option>\r\n                    <option value=\"c\">c</option>\r\n                    <option value=\"d\">d</option>\r\n                    <option value=\"e\">e</option>\r\n                </select>\r\n            </div>   \r\n            }\r\n            <br />\r\n            <span>pembahasan : </span>\r\n            <br/>\r\n            <div className={styles.editor}>\r\n            <textarea value={pembahasan} onChange={pembahasanType} name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n            <Latex>{pembahasan}</Latex>\r\n            </div>\r\n            <br />\r\n            \r\n            <Button title=\"Submit\" link=\"/\" onClick={addData} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddForm\r\n","D:\\Projek\\AppBimbel\\view\\view\\src\\pages\\EditForm\\index.js",["65","66","67","68","69","70","71","72","73"],"import React,{ useEffect, useState } from 'react'\r\nimport Button from '../../component/Button'\r\nimport styles from './styles.module.css'\r\nimport axios from '../../axios'\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { useParams } from \"react-router-dom\";\r\n// import CKEditor from 'ckeditor4-react';\r\n// import { CKEditor } from '@ckeditor/ckeditor5-react';\r\n// import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n// import CKEditor from '@ckeditor/ckeditor5-react';\r\n// import ClassicEditor from 'ckeditor5-classic-with-mathtype';\r\n// import MathType from '@wiris/mathtype-ckeditor5';\r\n\r\n\r\nfunction EditForm(props) {\r\n    const Latex = require('react-latex');\r\n    const [mapel, setMapel] = useState([]);\r\n    const [bankSoal, setBankSoal] = useState([]);\r\n    const [kelas, setKelas] = useState([]);\r\n    const [babSoal, setBabSoal] = useState([]);\r\n    const [tingkatKesulitan, setTingkatKesulitan] = useState([]);\r\n    const [selectMapel, setSelectMapel] = useState(\"\");\r\n    const [selectKelas, setSelectKelas] = useState(\"\");\r\n    const [selectbabSoal, setSelectBabSoal] = useState(\"\");\r\n    const [selectTingkatKesulitan, setSelectTingkatKesulitan] = useState(\"\");\r\n    const [tipeSoal, setTipeSoal] = useState(\"essai\");\r\n    const [soal, setSoal] = useState(\"\");\r\n    const [jawaban, setJawaban] = useState(\"\");\r\n    const [pembahasan, setPembahasan] = useState(\"\");\r\n    const [pil_a, setPil_a] = useState(\"\");\r\n    const [pil_b, setPil_b] = useState(\"\");\r\n    const [pil_c, setPil_c] = useState(\"\");\r\n    const [pil_d, setPil_d] = useState(\"\");\r\n    const [pil_e, setPil_e] = useState(\"\");\r\n    let { id } = useParams();\r\n\r\n\r\n    const selectMapelChanged = (e) => {\r\n        setSelectMapel(e.target.value);\r\n    }\r\n   \r\n    const tipeSoalChanged = (e) => {\r\n        setTipeSoal(e.target.value);\r\n    }\r\n    \r\n    const soalType = (e) => {\r\n        setSoal(e.target.value)\r\n    }\r\n    const jawabanType = (e) => {\r\n        setJawaban(e.target.value)\r\n    }\r\n    const pembahasanType = (e) => {\r\n        setPembahasan(e.target.value)\r\n    }\r\n    const selectKelasChanged = (e) => {\r\n        setSelectKelas(e.target.value)\r\n    }\r\n    \r\n    const selectBabSoalChanged = (e) => {\r\n        setSelectBabSoal(e.target.value)\r\n    }\r\n    \r\n    const selectTingkatKesulitanChanged = (e) => {\r\n        setSelectTingkatKesulitan(e.target.value)\r\n    }\r\n    \r\n    const pil_aChanged = (e) => {\r\n        setPil_a(e.target.value)\r\n    }\r\n    const pil_bChanged = (e) => {\r\n        setPil_b(e.target.value)\r\n    }\r\n    const pil_cChanged = (e) => {\r\n        setPil_c(e.target.value)\r\n    }\r\n    const pil_dChanged = (e) => {\r\n        setPil_d(e.target.value)\r\n    }\r\n    const pil_eChanged = (e) => {\r\n        setPil_e(e.target.value)\r\n    }\r\n    \r\n    const addData = (e) => {\r\n        let data;\r\n        if (tipeSoal === \"essai\") {\r\n            data = {\r\n                id: id,\r\n                soal: soal,\r\n                jawaban: jawaban,\r\n                pembahasan: pembahasan,\r\n                tipe_soal: tipeSoal,\r\n                id_mapel: selectMapel,\r\n                id_tingkat_kesulitan: selectTingkatKesulitan,\r\n                id_kelas: selectKelas,\r\n                id_bab_soal: selectbabSoal\r\n            }\r\n        } else {\r\n            data = {\r\n                id: id,\r\n                soal: soal,\r\n                pil_a: pil_a,\r\n                pil_b: pil_b,\r\n                pil_c: pil_c,\r\n                pil_d: pil_d,\r\n                pil_e: pil_e,\r\n                jawaban: jawaban,\r\n                pembahasan: pembahasan,\r\n                tipe_soal: tipeSoal,\r\n                id_mapel: selectMapel,\r\n                id_tingkat_kesulitan: selectTingkatKesulitan,\r\n                id_kelas: selectKelas,\r\n                id_bab_soal: selectbabSoal\r\n            }\r\n            \r\n        }\r\n        axios.put('/bank_soal',data)\r\n                .then(function (response) {\r\n                    console.log(response.data);\r\n                });\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchdata() {\r\n            \r\n            axios.get('/bank_soal?id=' + id)\r\n                .then(function (response) {\r\n                    // setBankSoal(response.data);\r\n                    // console.log(bankSoal);\r\n                    const resSoal = response.data[0];\r\n                     \r\n                    axios.get('/mapel?id=' + resSoal.id_mapel)\r\n                        .then(function (response) {\r\n                            // setMapel(response.data);\r\n                            setSelectMapel(response.data[0].id)\r\n                        });\r\n                    \r\n                    axios.get('/kelas?id=' + resSoal.id_kelas)\r\n                    .then(function (response) {\r\n                        setKelas(response.data);\r\n                        setSelectKelas(response.data[0].id)\r\n                    });\r\n\r\n                    axios.get('/tingkat_kesulitan?id=' + resSoal.id_tingkat_kesulitan)\r\n                    .then(function (response) {\r\n                        // setTingkatKesulitan(response.data);\r\n                        setSelectTingkatKesulitan(response.data[0].id)\r\n                    });\r\n\r\n                    axios.get('/bab_soal?id=' + resSoal.id_bab_soal)\r\n                        .then(function (response) {\r\n                            // setBabSoal(response.data);\r\n                            setSelectBabSoal(response.data[0].id);\r\n                        });\r\n                    \r\n                    \r\n                    setTipeSoal(resSoal.tipe_soal);\r\n                    setSoal(resSoal.soal);\r\n                    setJawaban(resSoal.jawaban);\r\n                    setPembahasan(resSoal.pembahasan);\r\n\r\n                });\r\n            \r\n             axios.get('/mapel')\r\n                .then(function (response) {\r\n                    setMapel(response.data);\r\n                });\r\n            \r\n            axios.get('/kelas')\r\n                .then(function (response) {\r\n                    setKelas(response.data);\r\n                });\r\n            \r\n            axios.get('/tingkat_kesulitan')\r\n                .then(function (response) {\r\n                    setTingkatKesulitan(response.data);\r\n                });\r\n            \r\n              axios.get('/bab_soal?id_mapel=' + selectMapel)\r\n                .then(function (response) {\r\n                    setBabSoal(response.data);\r\n            });\r\n            \r\n                \r\n                \r\n           \r\n            \r\n            \r\n            \r\n            \r\n        }\r\n        fetchdata();\r\n        // if (selectMapel !== \"\") {\r\n        //     axios.get('/bab_soal?id_mapel=' + selectMapel)\r\n        //         .then(function (response) {\r\n        //             setBabSoal(response.data);\r\n        //     });\r\n        // }\r\n    }, []);\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {/* {\"id = \"+id}\r\n            <br /> */}\r\n            \r\n            {/* <div className=\"App\">\r\n                <h2>Using CKEditor 5 build in React</h2>\r\n                <CKEditor\r\n                    editor={ClassicEditor}\r\n                    // config={{\r\n                    //     plugins: [MathType],\r\n                    //      toolbar: [ 'bold', 'italic','MathType', 'ChemType', ]\r\n                    // }}\r\n                    data={soal}\r\n                    onReady={ editor => {\r\n                        // You can store the \"editor\" and use when it is needed.\r\n                        console.log( 'Editor is ready to use!', editor );\r\n                    } }\r\n                    onChange={ ( event, editor ) => {\r\n                        const data = editor.getData();\r\n                        setSoal(data);\r\n                        console.log( { event, editor, data } );\r\n                    } }\r\n                    onBlur={ ( event, editor ) => {\r\n                        console.log( 'Blur.', editor );\r\n                    } }\r\n                    onFocus={ ( event, editor ) => {\r\n                        console.log( 'Focus.', editor );\r\n                    } }\r\n                />\r\n            </div> */}\r\n            {/* <CKEditor\r\n                editor={ClassicEditor}\r\n                // config={{\r\n                //         plugins: [MathType],\r\n                //         toolbar: {\r\n                //             items:['MathType','ChemType']\r\n                //         }\r\n                //     }}\r\n                    // data=\"<p>Hello from CKEditor 5!</p>\"\r\n                    onReady={ editor => {\r\n                        // You can store the \"editor\" and use when it is needed.\r\n                        console.log( 'Editor is ready to use!', editor );\r\n                    } }\r\n                    onChange={ ( event, editor ) => {\r\n                        const data = editor.getData();\r\n                        console.log( { event, editor, data } );\r\n                    } }\r\n                    onBlur={ ( event, editor ) => {\r\n                        console.log( 'Blur.', editor );\r\n                    } }\r\n                    onFocus={ ( event, editor ) => {\r\n                        console.log( 'Focus.', editor );\r\n                    } }\r\n                /> */}\r\n            <span>mata pelajaran </span>\r\n            <select value={selectMapel} onChange={selectMapelChanged}>   \r\n            <option value=\"\" disabled ></option>\r\n                {mapel.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>kelas </span>\r\n            <select value={selectKelas} onChange={selectKelasChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {kelas.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>Bab </span>\r\n            <select value={selectbabSoal} onChange={selectBabSoalChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {babSoal.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>tingkat kesulitan </span>\r\n            <select value={selectTingkatKesulitan} onChange={selectTingkatKesulitanChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {tingkatKesulitan.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>tipe soal : </span>\r\n            <select value={tipeSoal} onChange={tipeSoalChanged}>\r\n                <option value=\"essai\">essai</option>\r\n                <option value=\"pilgan\">pilihan ganda</option>\r\n            </select>\r\n            <br />\r\n            <span>soal : </span>\r\n            <br/>\r\n            <div className={styles.editor}>\r\n            <textarea value={soal} onChange={soalType} name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>            \r\n                <Latex>{soal}</Latex>\r\n                {/* {ReactHtmlParser(soal)} */}\r\n            </div>\r\n            <br />\r\n            {tipeSoal === \"essai\" ?\r\n                <div></div>\r\n            :\r\n                <div className={styles.pilihan__ganda}>\r\n                     <span>Pilihan A</span>\r\n                     <div className={styles.editor}>\r\n                    <textarea value={pil_a} onChange={e => {setPil_a(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <Latex>{pil_a}</Latex>\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan B</span>\r\n                     <div className={styles.editor}>\r\n                    <textarea value={pil_b} onChange={e => {setPil_b(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <Latex>{pil_b}</Latex>\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan C</span>\r\n                     <div className={styles.editor}>\r\n                    <textarea value={pil_c} onChange={e => {setPil_c(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <Latex>{pil_c}</Latex>\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan D</span>\r\n                    <div className={styles.editor}>\r\n                    <textarea value={pil_d} onChange={e => {setPil_d(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <Latex>{pil_d}</Latex>\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan E</span>\r\n                    <div className={styles.editor}>\r\n                    <textarea value={pil_e} onChange={e => {setPil_e(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <Latex>{pil_e}</Latex>\r\n                    </div>\r\n                    <br/>\r\n                </div>\r\n            }\r\n            <span>jawaban : </span>\r\n            <br />\r\n            {tipeSoal === \"essai\" ?\r\n            <div className={styles.editor}>\r\n                <textarea value={jawaban} onChange={jawabanType} name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n                <Latex>{jawaban}</Latex>\r\n            </div>\r\n                :\r\n            <div className={styles.jwb_pilgan}>\r\n                <select value={jawaban} onChange={jawabanType}>\r\n                    <option value=\"\"></option>\r\n                    <option value=\"a\">a</option>\r\n                    <option value=\"b\">b</option>\r\n                    <option value=\"c\">c</option>\r\n                    <option value=\"d\">d</option>\r\n                    <option value=\"e\">e</option>\r\n                </select>\r\n            </div>   \r\n            }\r\n            <br />\r\n            <span>pembahasan : </span>\r\n            <br/>\r\n            <div className={styles.editor}>\r\n            <textarea value={pembahasan} onChange={pembahasanType} name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n            <Latex>{pembahasan}</Latex>\r\n            </div>\r\n            <br />\r\n            \r\n            <Button title=\"Submit\" link=\"/\" onClick={addData} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditForm\r\n","D:\\Projek\\AppBimbel\\view\\view\\src\\JSON\\Siunitx.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"78"},{"ruleId":"76","replacedBy":"79"},{"ruleId":"74","replacedBy":"80"},{"ruleId":"76","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":126,"column":8,"nodeType":"84","endLine":126,"endColumn":99,"suggestions":"85"},{"ruleId":null,"fatal":true,"severity":2,"message":"86","line":502,"column":14},{"ruleId":"87","severity":1,"message":"88","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":23},{"ruleId":"87","severity":1,"message":"91","line":18,"column":12,"nodeType":"89","messageId":"90","endLine":18,"endColumn":20},{"ruleId":"87","severity":1,"message":"92","line":18,"column":22,"nodeType":"89","messageId":"90","endLine":18,"endColumn":33},{"ruleId":"87","severity":1,"message":"93","line":67,"column":11,"nodeType":"89","messageId":"90","endLine":67,"endColumn":23},{"ruleId":"87","severity":1,"message":"94","line":70,"column":11,"nodeType":"89","messageId":"90","endLine":70,"endColumn":23},{"ruleId":"87","severity":1,"message":"95","line":73,"column":11,"nodeType":"89","messageId":"90","endLine":73,"endColumn":23},{"ruleId":"87","severity":1,"message":"96","line":76,"column":11,"nodeType":"89","messageId":"90","endLine":76,"endColumn":23},{"ruleId":"87","severity":1,"message":"97","line":79,"column":11,"nodeType":"89","messageId":"90","endLine":79,"endColumn":23},{"ruleId":"82","severity":1,"message":"98","line":198,"column":8,"nodeType":"84","endLine":198,"endColumn":10,"suggestions":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],["100"],["101"],["100"],["101"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchUpdateBankSoal' and 'updateData'. Either include them or remove the dependency array.","ArrayExpression",["102"],"Parsing error: Unexpected token\n\n  500 |                     // }\n  501 |                 // })}\n> 502 |             </div>\n      |              ^\n  503 |             <br />\n  504 |             {tipeSoal === \"essai\" ?\n  505 |                 <div></div>","no-unused-vars","'ReactHtmlParser' is defined but never used.","Identifier","unusedVar","'bankSoal' is assigned a value but never used.","'setBankSoal' is assigned a value but never used.","'pil_aChanged' is assigned a value but never used.","'pil_bChanged' is assigned a value but never used.","'pil_cChanged' is assigned a value but never used.","'pil_dChanged' is assigned a value but never used.","'pil_eChanged' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'selectMapel'. Either include them or remove the dependency array.",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [selectMapel, selectKelas, selectbabSoal, selectTingkatKesulitan, nomor, deleteData, id, bankSoal, updateData, fetchUpdateBankSoal]",{"range":"108","text":"109"},"Update the dependencies array to be: [id, selectMapel]",{"range":"110","text":"111"},[4287,4378],"[selectMapel, selectKelas, selectbabSoal, selectTingkatKesulitan, nomor, deleteData, id, bankSoal, updateData, fetchUpdateBankSoal]",[6810,6812],"[id, selectMapel]"]