[{"D:\\Projek\\AppBimbel\\view\\view\\src\\index.js":"1","D:\\Projek\\AppBimbel\\view\\view\\src\\axios.js":"2","D:\\Projek\\AppBimbel\\view\\view\\src\\component\\Button\\index.js":"3","D:\\Projek\\AppBimbel\\view\\view\\src\\App.js":"4","D:\\Projek\\AppBimbel\\view\\view\\src\\reportWebVitals.js":"5","D:\\Projek\\AppBimbel\\view\\view\\src\\App.test.js":"6","D:\\Projek\\AppBimbel\\view\\view\\src\\component\\Table\\index.js":"7","D:\\Projek\\AppBimbel\\view\\view\\src\\pages\\HomeSoal\\index.js":"8","D:\\Projek\\AppBimbel\\view\\view\\src\\setupTests.js":"9","D:\\Projek\\AppBimbel\\view\\view\\src\\pages\\AddForm\\index.js":"10","D:\\Projek\\AppBimbel\\view\\view\\src\\pages\\EditForm\\index.js":"11","D:\\Projek\\AppBimbel\\view\\view\\src\\JSON\\Siunitx.js":"12"},{"size":500,"mtime":1605345925540,"results":"13","hashOfConfig":"14"},{"size":141,"mtime":1608958606166,"results":"15","hashOfConfig":"14"},{"size":360,"mtime":1606348941460,"results":"16","hashOfConfig":"14"},{"size":573,"mtime":1606653960181,"results":"17","hashOfConfig":"14"},{"size":362,"mtime":1605345925540,"results":"18","hashOfConfig":"14"},{"size":246,"mtime":1605345925540,"results":"19","hashOfConfig":"20"},{"size":142,"mtime":1605582411831,"results":"21","hashOfConfig":"20"},{"size":16414,"mtime":1608959469449,"results":"22","hashOfConfig":"14"},{"size":241,"mtime":1605345925540,"results":"23","hashOfConfig":"20"},{"size":36971,"mtime":1609208006874,"results":"24","hashOfConfig":"14"},{"size":14195,"mtime":1606644837925,"results":"25","hashOfConfig":"14"},{"size":4070,"mtime":1608860099336,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"7vxe8",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ltcuru",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projek\\AppBimbel\\view\\view\\src\\index.js",[],["56","57"],"D:\\Projek\\AppBimbel\\view\\view\\src\\axios.js",[],"D:\\Projek\\AppBimbel\\view\\view\\src\\component\\Button\\index.js",[],"D:\\Projek\\AppBimbel\\view\\view\\src\\App.js",[],["58","59"],"D:\\Projek\\AppBimbel\\view\\view\\src\\reportWebVitals.js",[],["60","61"],"D:\\Projek\\AppBimbel\\view\\view\\src\\App.test.js",[],"D:\\Projek\\AppBimbel\\view\\view\\src\\component\\Table\\index.js",[],"D:\\Projek\\AppBimbel\\view\\view\\src\\pages\\HomeSoal\\index.js",["62","63","64","65","66","67","68","69","70"],"import React,{ useEffect, useState } from 'react'\r\nimport styles from './styles.module.css'\r\nimport Button from '../../component/Button'\r\nimport axios from '../../axios'\r\nimport SiunitX from '../../JSON/Siunitx'\r\n\r\nfunction HomeSoal(props) {\r\n    const Latex = require('react-latex');\r\n    const [bankSoal, setBankSoal] = useState([]);\r\n    const [mapel, setMapel] = useState([]);\r\n    const [kelas, setKelas] = useState([]);\r\n    const [babSoal, setBabSoal] = useState([]);\r\n    const [tingkatKesulitan, setTingkatKesulitan] = useState([]);\r\n    const [selectMapel, setSelectMapel] = useState(\"\");\r\n    const [selectKelas, setSelectKelas] = useState(\"\");\r\n    const [selectbabSoal, setSelectBabSoal] = useState(\"\");\r\n    const [selectTingkatKesulitan, setSelectTingkatKesulitan] = useState(\"\");\r\n    const [nomor, setNomor] = useState(1);\r\n    const [id, setId] = useState(\"\");\r\n    const [deleteData, setDeleteData] = useState(false);\r\n    const [updateData, setUpdateData] = useState(false);\r\n    const [imgSoal, setImgSoal] = useState([]);\r\n\r\n    const translationLatex = (input) => {\r\n        \r\n        if (typeof input !== 'undefined') {\r\n            let result = input\r\n                .replaceAll(\"\\\\begin{align*}\", String.fromCharCode(32) + \"@\\\\begin{aligned}\")\r\n                .replaceAll(\"\\\\end{align*}\", \"\\\\end{aligned}@\" + String.fromCharCode(32))\r\n                .replaceAll(\"\\\\begin{equation*}\", String.fromCharCode(32) + \"@\\\\begin{aligned}\")\r\n                .replaceAll(\"\\\\end{equation*}\", \"\\\\end{aligned}@\" + String.fromCharCode(32));\r\n        \r\n            const angFunction = result.match(/\\\\ang{.*?}/g);\r\n            if (angFunction !== null) {\r\n                angFunction.map((item) => {\r\n                    const param = item.match(/{.*?}/g);\r\n                    const covertItem = replaceAllCurlyBraces(param[0]) + \"\\\\degree\";\r\n                    result = result.replace(item, covertItem);\r\n                })\r\n        }\r\n        const inlineEquation = result.match(/\\$(.*?)\\$/g);\r\n        const blockEquation = result.match(/(@)(.+?)(@)/gs);\r\n        const siunitXCondition =\r\n            /\\\\SI{.*?}{.*?}|\\\\SI\\[.*?]{.*?}{.*?}|\\\\SI{.*?}|\\\\NUM{.*?}/gi\r\n        const siunitX1 = result.match(siunitXCondition);\r\n        // console.log(\"siunitX1\");\r\n        // console.log(siunitX1);\r\n        // console.log(siunitX1);\r\n          \r\n        if (inlineEquation !== null) {\r\n            inlineEquation.map((item) => {\r\n            const covertItem = item.replaceAll(String.fromCharCode(32), '\\\\,');\r\n            // console.log(covertItem);\r\n\r\n            result = result.replace(item, covertItem);\r\n        })\r\n        }\r\n        if (blockEquation !== null) {\r\n            blockEquation.map((item) => {\r\n                const covertItem = item\r\n                .replaceAll(String.fromCharCode(32)+\"\\\\\"+String.fromCharCode(32), \"\\\\,\")\r\n                    .replaceAll(String.fromCharCode(32), '\\\\,')\r\n                    .replaceAll(String.fromCharCode(13), '')\r\n                    .replaceAll(String.fromCharCode(9), '')\r\n                    .replaceAll(\"{}&\",\"\")\r\n                    .replaceAll(\"$\",\"\")\r\n                    .replaceAll(\"=\",\"&=\")\r\n                    .replaceAll(\"\\\\approx\",\"&\\\\approx\")\r\n                    .replaceAll(\"[per-mode&=symbol]\",\"[per-mode=symbol]\")\r\n                    // .replaceAll(\"=\",\"&=\")\r\n            \r\n            result = result.replace(item, covertItem);\r\n            })\r\n        }\r\n\r\n        if (siunitX1 !== null) {\r\n            siunitX1.map((item) => {\r\n                let convertResult = \"\";\r\n                let itemProseced;\r\n                let paramItemProseced;\r\n                let par;\r\n                let tothe;\r\n                if (/tothe/s.test(item)) {\r\n                    itemProseced = item+\"}\";\r\n                } else {\r\n                    itemProseced = item;\r\n                }\r\n                // console.log(\"siunitX1\");\r\n                // console.log(itemProseced);\r\n                \r\n                const mode = itemProseced.match(/\\[.*?]/s);\r\n                const param = itemProseced.match(/{.*?}/g);\r\n                // console.log(\"mode = \" + mode);\r\n                // console.log(\"param = \" + param);\r\n                if (mode !== null) {\r\n                    param.map((paramItem) => {\r\n                        if (/tothe/s.test(paramItem)) {\r\n                            paramItemProseced = paramItem + \"}\";\r\n                        } else {\r\n                            paramItemProseced = paramItem;\r\n                        }\r\n                        par = replaceAllCurlyBraces(paramItemProseced);\r\n                        // console.log(\"if not null mode = \" + mode[0]);\r\n                        convertResult += replaceSiunitx(mode[0], par) + \" \";\r\n                    })   \r\n                } else {\r\n                    param.map((paramItem) => {\r\n                         if (/tothe/s.test(paramItem)) {\r\n                             paramItemProseced = paramItem + \"}\";\r\n                             const findTothe = paramItemProseced.match(/(?<=tothe).*/s);\r\n                             tothe = \"^{\"+replaceAllCurlyBraces(findTothe[0])+\"}\";\r\n                             paramItemProseced = paramItemProseced.replaceAll(/(?<=tothe).*/g, \"\");\r\n                            //  console.log(\"paramItemProseced = \"+paramItemProseced)\r\n                            //  console.log(\"tothe = \"+tothe)\r\n                        } else {\r\n                             paramItemProseced = paramItem;\r\n                             tothe= \"\";\r\n                        }\r\n                        par = replaceAllCurlyBraces(paramItemProseced);\r\n                        convertResult += replaceSiunitx(\"\", par)+tothe+ \" \";\r\n                    })   \r\n                }\r\n                convertResult = convertResult.replaceAll(String.fromCharCode(32), '\\\\,');\r\n                result = result.replace(itemProseced, convertResult);\r\n                // console.log(\"convertResult = \" + convertResult);\r\n            })\r\n        }\r\n\r\n        // console.log(\"ini hasil resyo = \"+result);\r\n        // setSoalConverted(result);\r\n        // setSoalCache(soal);\r\n            return result;\r\n        } else {\r\n            return input;\r\n            // console.log(\"nothing change\")\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    const translationLatexPreview = (item) => {\r\n       if (/\\$(.*?)\\$/s.test(item)) {\r\n            return (<Latex>{item+\" \"}</Latex>);\r\n        } else if (/@(.*?)@/s.test(item)) {\r\n            return (<Latex displayMode={true}>{item.replaceAll(\"@\",\"$$\")+\" \"}</Latex>);\r\n        } else if (/img/s.test(item)) {\r\n        const numberImages = item.match(/(?<=img).*/s);\r\n            return (<img width=\"100%\" src={imgSoal[numberImages[0]-1]} alt=\"aad\"/>);\r\n        } else { \r\n            return (<span>{item+\" \"}</span>);\r\n        }\r\n    }\r\n\r\n    const replaceAllCurlyBraces = (sentences) => {\r\n        const temp = sentences.replaceAll(\"{\",\"\").replaceAll(\"}\",\"\");\r\n    \r\n        return temp;\r\n        \r\n    }\r\n\r\n    const replaceSiunitx = (mode , str) => {\r\n        let result;\r\n        let CodeMatch = false;\r\n        \r\n        SiunitX.map((item) => {\r\n            // console.log(\"mode replaceunix= \" + mode);\r\n            if (str === item.code && mode === \"\" && CodeMatch === false) {\r\n                result =  item.translation;\r\n                CodeMatch = true;\r\n            } else if (str === item.code && mode === \"[per-mode=symbol]\" && CodeMatch === false) { \r\n                result = item[\"per-mode=symbol\"];\r\n                CodeMatch = true;\r\n            } else if(str !== item.code && CodeMatch === false){\r\n                if (/-?\\d+(?=e).-?\\d+/s.test(str) || /(?=e).-?\\d+/s.test(str)) {\r\n                    const pangkat = str.match(/(?<=e).?\\d+/s);\r\n                    const nominal = str.match(/-?\\d+(?=e)/s);\r\n                    if (pangkat !== null && nominal !== null) {\r\n                        result = nominal[0] + \" x 10^{\" + pangkat[0]+\"}\";\r\n                    } else if (pangkat !== null && nominal === null) {\r\n                        result = \"10^\" + pangkat[0];\r\n                    }else {\r\n                        result = str;\r\n                    }\r\n                } else {\r\n                    result = str;     \r\n                }\r\n                    // result = str;     \r\n            }\r\n        })\r\n        // console.log(result);\r\n        return result;\r\n    }\r\n\r\n\r\n    const selectMapelChanged = (e) => {\r\n        setSelectMapel(e.target.value);\r\n        setUpdateData(true);\r\n        \r\n    }\r\n\r\n   \r\n    \r\n    const nomorChanged = (e) => {\r\n        setNomor(e.target.value)\r\n    }\r\n    const selectKelasChanged = (e) => {\r\n        setSelectKelas(e.target.value)\r\n        setUpdateData(true);\r\n    }\r\n    const selectBabSoalChanged = (e) => {\r\n        setSelectBabSoal(e.target.value)\r\n        setUpdateData(true);\r\n    }\r\n    const selectTingkatKesulitanChanged = (e) => {\r\n        setSelectTingkatKesulitan(e.target.value)\r\n        setUpdateData(true);\r\n    }\r\n    const fetchUpdateBankSoal = (e) => {\r\n        axios.get('/bank_soal?id_mapel='\r\n                + selectMapel +\r\n                '&id_kelas=' + selectKelas\r\n                + '&id_bab_soal=' + selectbabSoal\r\n                +'&id_tingkat_kesulitan=' + selectTingkatKesulitan)\r\n                .then(function (response) {\r\n                    setBankSoal(response.data);\r\n                    if (response.data.length !== 0 ) {\r\n                        if(nomor !== 0){\r\n                            setId(response.data[nomor - 1].id);\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchdata() {\r\n            \r\n            axios.get('/mapel')\r\n                .then(function (response) {\r\n                    setMapel(response.data);\r\n                });\r\n            \r\n            axios.get('/kelas')\r\n                .then(function (response) {\r\n                    setKelas(response.data);\r\n                });\r\n            \r\n            axios.get('/tingkat_kesulitan')\r\n                .then(function (response) {\r\n                    setTingkatKesulitan(response.data);\r\n                });\r\n        }\r\n        fetchdata();\r\n        if (selectMapel !== \"\") {\r\n            axios.get('/bab_soal?id_mapel=' + selectMapel)\r\n                .then(function (response) {\r\n                    setBabSoal(response.data);\r\n            });\r\n        }\r\n        if (deleteData) {\r\n            const data = {\r\n                id : id\r\n            }\r\n            axios.post('/bank_soal',data)\r\n                .then(function (response) {\r\n                    console.log(response.data);\r\n                });\r\n            setNomor(bankSoal.length - 1);\r\n            axios.get('/bank_soal?id_mapel='\r\n                + selectMapel +\r\n                '&id_kelas=' + selectKelas\r\n                + '&id_bab_soal=' + selectbabSoal\r\n                +'&id_tingkat_kesulitan=' + selectTingkatKesulitan)\r\n                .then(function (response) {\r\n                    setBankSoal(response.data);\r\n                    if (response.data.length !== 0) {\r\n                        if (nomor !== 0) {\r\n                            setId(response.data[response.data.length - 1].id);\r\n                        }\r\n                    }\r\n                });\r\n                setDeleteData(false)\r\n        }\r\n        // if (nomor > 0) {\r\n            \r\n        // }\r\n        if (\r\n            selectMapel !== \"\" &&\r\n            selectKelas !== \"\" &&\r\n            selectbabSoal !== \"\" &&\r\n            selectTingkatKesulitan !== \"\" &&\r\n            updateData\r\n        ) {\r\n            fetchUpdateBankSoal();\r\n            setUpdateData(false);\r\n            \r\n            }\r\n    }, [selectMapel,selectKelas,selectbabSoal,selectTingkatKesulitan,nomor,deleteData,id,bankSoal]);\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.button__group}>\r\n                <Button title=\"Tambah Soal\" link=\"/add_soal\" />\r\n                {bankSoal.length === 0 ? \r\n                    <>\r\n                    </>\r\n                :\r\n                    <>\r\n                        <Button title=\"Edit Soal\" link={'/edit_soal/'+ id } />\r\n                        <Button link=\"/\" title=\"Hapus Soal\" onClick={e =>{setDeleteData(true)}} />\r\n                    </>\r\n                }\r\n            </div>\r\n            <span>mata pelajaran </span>\r\n            <select value={selectMapel} onChange={selectMapelChanged}>   \r\n            <option value=\"\" disabled ></option>\r\n                {mapel.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>kelas </span>\r\n            <select value={selectKelas} onChange={selectKelasChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {kelas.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>Bab </span>\r\n            <select value={selectbabSoal} onChange={selectBabSoalChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {babSoal.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>tingkat kesulitan </span>\r\n            <select value={selectTingkatKesulitan} onChange={selectTingkatKesulitanChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {tingkatKesulitan.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>No </span>\r\n            <select value={nomor} onChange={nomorChanged}>\r\n                <option value=\"\"></option>\r\n                {bankSoal.map((item,index) => (\r\n                   <option key={item.id} value={index+1}>{index+1}</option>\r\n                ))}\r\n            </select>\r\n            <br />\r\n            {bankSoal.slice(nomor-1,nomor).map(item => (\r\n                <div key={item.id} className=\"\">\r\n                    {/* //    <option key={item.id} value={item.id}>{item.deskripsi}</option> */}\r\n                <strong>Soal :</strong>\r\n                    <p>\r\n                        {translationLatex(item.soal).split(\" \").map((item) => {\r\n                            return translationLatexPreview(item)\r\n                        })}\r\n                    </p>\r\n                    {item.tipe_soal === \"pilgan\" ? \r\n                        <div className=\"\">\r\n                            <p>A.  {translationLatex(item.pil_a).split(\" \").map((item) => {\r\n                                    return translationLatexPreview(item)\r\n                                    })}</p>\r\n                            <p>B.  {translationLatex(item.pil_b).split(\" \").map((item) => {\r\n                                    return translationLatexPreview(item)\r\n                                    })}</p>\r\n                            <p>C.  {translationLatex(item.pil_c).split(\" \").map((item) => {\r\n                                    return translationLatexPreview(item)\r\n                                    })}</p>\r\n                            <p>D.  {translationLatex(item.pil_d).split(\" \").map((item) => {\r\n                                    return translationLatexPreview(item)\r\n                                    })}</p>\r\n                            <p>E.  {translationLatex(item.pil_e).split(\" \").map((item) => {\r\n                                    return translationLatexPreview(item)\r\n                                    })}</p>\r\n                        </div>\r\n                    :\r\n                        <div className=\"\"></div>\r\n                }    \r\n                <strong>Jawaban :</strong>\r\n                <p>{translationLatex(item.jawaban).split(\" \").map((item) => {\r\n                    return translationLatexPreview(item)\r\n                })}</p>\r\n                <strong>Pembahasan :</strong>\r\n                <p>{translationLatex(item.pembahasan).split(\" \").map((item) => {\r\n                    return translationLatexPreview(item)\r\n                })}</p>\r\n                {/* <a href=\"#0\"></a> */}\r\n                </div>\r\n            ))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeSoal\r\n","D:\\Projek\\AppBimbel\\view\\view\\src\\setupTests.js",[],"D:\\Projek\\AppBimbel\\view\\view\\src\\pages\\AddForm\\index.js",["71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95"],"D:\\Projek\\AppBimbel\\view\\view\\src\\pages\\EditForm\\index.js",["96","97","98","99","100","101","102","103","104"],"import React,{ useEffect, useState } from 'react'\r\nimport Button from '../../component/Button'\r\nimport styles from './styles.module.css'\r\nimport axios from '../../axios'\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { useParams } from \"react-router-dom\";\r\n// import CKEditor from 'ckeditor4-react';\r\n// import { CKEditor } from '@ckeditor/ckeditor5-react';\r\n// import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n// import CKEditor from '@ckeditor/ckeditor5-react';\r\n// import ClassicEditor from 'ckeditor5-classic-with-mathtype';\r\n// import MathType from '@wiris/mathtype-ckeditor5';\r\n\r\n\r\nfunction EditForm(props) {\r\n    const Latex = require('react-latex');\r\n    const [mapel, setMapel] = useState([]);\r\n    const [bankSoal, setBankSoal] = useState([]);\r\n    const [kelas, setKelas] = useState([]);\r\n    const [babSoal, setBabSoal] = useState([]);\r\n    const [tingkatKesulitan, setTingkatKesulitan] = useState([]);\r\n    const [selectMapel, setSelectMapel] = useState(\"\");\r\n    const [selectKelas, setSelectKelas] = useState(\"\");\r\n    const [selectbabSoal, setSelectBabSoal] = useState(\"\");\r\n    const [selectTingkatKesulitan, setSelectTingkatKesulitan] = useState(\"\");\r\n    const [tipeSoal, setTipeSoal] = useState(\"essai\");\r\n    const [soal, setSoal] = useState(\"\");\r\n    const [jawaban, setJawaban] = useState(\"\");\r\n    const [pembahasan, setPembahasan] = useState(\"\");\r\n    const [pil_a, setPil_a] = useState(\"\");\r\n    const [pil_b, setPil_b] = useState(\"\");\r\n    const [pil_c, setPil_c] = useState(\"\");\r\n    const [pil_d, setPil_d] = useState(\"\");\r\n    const [pil_e, setPil_e] = useState(\"\");\r\n    let { id } = useParams();\r\n\r\n\r\n    const selectMapelChanged = (e) => {\r\n        setSelectMapel(e.target.value);\r\n    }\r\n   \r\n    const tipeSoalChanged = (e) => {\r\n        setTipeSoal(e.target.value);\r\n    }\r\n    \r\n    const soalType = (e) => {\r\n        setSoal(e.target.value)\r\n    }\r\n    const jawabanType = (e) => {\r\n        setJawaban(e.target.value)\r\n    }\r\n    const pembahasanType = (e) => {\r\n        setPembahasan(e.target.value)\r\n    }\r\n    const selectKelasChanged = (e) => {\r\n        setSelectKelas(e.target.value)\r\n    }\r\n    \r\n    const selectBabSoalChanged = (e) => {\r\n        setSelectBabSoal(e.target.value)\r\n    }\r\n    \r\n    const selectTingkatKesulitanChanged = (e) => {\r\n        setSelectTingkatKesulitan(e.target.value)\r\n    }\r\n    \r\n    const pil_aChanged = (e) => {\r\n        setPil_a(e.target.value)\r\n    }\r\n    const pil_bChanged = (e) => {\r\n        setPil_b(e.target.value)\r\n    }\r\n    const pil_cChanged = (e) => {\r\n        setPil_c(e.target.value)\r\n    }\r\n    const pil_dChanged = (e) => {\r\n        setPil_d(e.target.value)\r\n    }\r\n    const pil_eChanged = (e) => {\r\n        setPil_e(e.target.value)\r\n    }\r\n    \r\n    const addData = (e) => {\r\n        let data;\r\n        if (tipeSoal === \"essai\") {\r\n            data = {\r\n                id: id,\r\n                soal: soal,\r\n                jawaban: jawaban,\r\n                pembahasan: pembahasan,\r\n                tipe_soal: tipeSoal,\r\n                id_mapel: selectMapel,\r\n                id_tingkat_kesulitan: selectTingkatKesulitan,\r\n                id_kelas: selectKelas,\r\n                id_bab_soal: selectbabSoal\r\n            }\r\n        } else {\r\n            data = {\r\n                id: id,\r\n                soal: soal,\r\n                pil_a: pil_a,\r\n                pil_b: pil_b,\r\n                pil_c: pil_c,\r\n                pil_d: pil_d,\r\n                pil_e: pil_e,\r\n                jawaban: jawaban,\r\n                pembahasan: pembahasan,\r\n                tipe_soal: tipeSoal,\r\n                id_mapel: selectMapel,\r\n                id_tingkat_kesulitan: selectTingkatKesulitan,\r\n                id_kelas: selectKelas,\r\n                id_bab_soal: selectbabSoal\r\n            }\r\n            \r\n        }\r\n        axios.put('/bank_soal',data)\r\n                .then(function (response) {\r\n                    console.log(response.data);\r\n                });\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchdata() {\r\n            \r\n            axios.get('/bank_soal?id=' + id)\r\n                .then(function (response) {\r\n                    // setBankSoal(response.data);\r\n                    // console.log(bankSoal);\r\n                    const resSoal = response.data[0];\r\n                     \r\n                    axios.get('/mapel?id=' + resSoal.id_mapel)\r\n                        .then(function (response) {\r\n                            // setMapel(response.data);\r\n                            setSelectMapel(response.data[0].id)\r\n                        });\r\n                    \r\n                    axios.get('/kelas?id=' + resSoal.id_kelas)\r\n                    .then(function (response) {\r\n                        setKelas(response.data);\r\n                        setSelectKelas(response.data[0].id)\r\n                    });\r\n\r\n                    axios.get('/tingkat_kesulitan?id=' + resSoal.id_tingkat_kesulitan)\r\n                    .then(function (response) {\r\n                        // setTingkatKesulitan(response.data);\r\n                        setSelectTingkatKesulitan(response.data[0].id)\r\n                    });\r\n\r\n                    axios.get('/bab_soal?id=' + resSoal.id_bab_soal)\r\n                        .then(function (response) {\r\n                            // setBabSoal(response.data);\r\n                            setSelectBabSoal(response.data[0].id);\r\n                        });\r\n                    \r\n                    \r\n                    setTipeSoal(resSoal.tipe_soal);\r\n                    setSoal(resSoal.soal);\r\n                    setJawaban(resSoal.jawaban);\r\n                    setPembahasan(resSoal.pembahasan);\r\n\r\n                });\r\n            \r\n             axios.get('/mapel')\r\n                .then(function (response) {\r\n                    setMapel(response.data);\r\n                });\r\n            \r\n            axios.get('/kelas')\r\n                .then(function (response) {\r\n                    setKelas(response.data);\r\n                });\r\n            \r\n            axios.get('/tingkat_kesulitan')\r\n                .then(function (response) {\r\n                    setTingkatKesulitan(response.data);\r\n                });\r\n            \r\n              axios.get('/bab_soal?id_mapel=' + selectMapel)\r\n                .then(function (response) {\r\n                    setBabSoal(response.data);\r\n            });\r\n            \r\n                \r\n                \r\n           \r\n            \r\n            \r\n            \r\n            \r\n        }\r\n        fetchdata();\r\n        // if (selectMapel !== \"\") {\r\n        //     axios.get('/bab_soal?id_mapel=' + selectMapel)\r\n        //         .then(function (response) {\r\n        //             setBabSoal(response.data);\r\n        //     });\r\n        // }\r\n    }, []);\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {/* {\"id = \"+id}\r\n            <br /> */}\r\n            \r\n            {/* <div className=\"App\">\r\n                <h2>Using CKEditor 5 build in React</h2>\r\n                <CKEditor\r\n                    editor={ClassicEditor}\r\n                    // config={{\r\n                    //     plugins: [MathType],\r\n                    //      toolbar: [ 'bold', 'italic','MathType', 'ChemType', ]\r\n                    // }}\r\n                    data={soal}\r\n                    onReady={ editor => {\r\n                        // You can store the \"editor\" and use when it is needed.\r\n                        console.log( 'Editor is ready to use!', editor );\r\n                    } }\r\n                    onChange={ ( event, editor ) => {\r\n                        const data = editor.getData();\r\n                        setSoal(data);\r\n                        console.log( { event, editor, data } );\r\n                    } }\r\n                    onBlur={ ( event, editor ) => {\r\n                        console.log( 'Blur.', editor );\r\n                    } }\r\n                    onFocus={ ( event, editor ) => {\r\n                        console.log( 'Focus.', editor );\r\n                    } }\r\n                />\r\n            </div> */}\r\n            {/* <CKEditor\r\n                editor={ClassicEditor}\r\n                // config={{\r\n                //         plugins: [MathType],\r\n                //         toolbar: {\r\n                //             items:['MathType','ChemType']\r\n                //         }\r\n                //     }}\r\n                    // data=\"<p>Hello from CKEditor 5!</p>\"\r\n                    onReady={ editor => {\r\n                        // You can store the \"editor\" and use when it is needed.\r\n                        console.log( 'Editor is ready to use!', editor );\r\n                    } }\r\n                    onChange={ ( event, editor ) => {\r\n                        const data = editor.getData();\r\n                        console.log( { event, editor, data } );\r\n                    } }\r\n                    onBlur={ ( event, editor ) => {\r\n                        console.log( 'Blur.', editor );\r\n                    } }\r\n                    onFocus={ ( event, editor ) => {\r\n                        console.log( 'Focus.', editor );\r\n                    } }\r\n                /> */}\r\n            <span>mata pelajaran </span>\r\n            <select value={selectMapel} onChange={selectMapelChanged}>   \r\n            <option value=\"\" disabled ></option>\r\n                {mapel.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>kelas </span>\r\n            <select value={selectKelas} onChange={selectKelasChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {kelas.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>Bab </span>\r\n            <select value={selectbabSoal} onChange={selectBabSoalChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {babSoal.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>tingkat kesulitan </span>\r\n            <select value={selectTingkatKesulitan} onChange={selectTingkatKesulitanChanged}>\r\n                <option value=\"\" disabled ></option>\r\n                {tingkatKesulitan.map(item => (\r\n                   <option key={item.id} value={item.id}>{item.deskripsi}</option>\r\n                ))}\r\n            </select>\r\n            <span>tipe soal : </span>\r\n            <select value={tipeSoal} onChange={tipeSoalChanged}>\r\n                <option value=\"essai\">essai</option>\r\n                <option value=\"pilgan\">pilihan ganda</option>\r\n            </select>\r\n            <br />\r\n            <span>soal : </span>\r\n            <br/>\r\n            <div className={styles.editor}>\r\n            <textarea value={soal} onChange={soalType} name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>            \r\n                <Latex>{soal}</Latex>\r\n                {/* {ReactHtmlParser(soal)} */}\r\n            </div>\r\n            <br />\r\n            {tipeSoal === \"essai\" ?\r\n                <div></div>\r\n            :\r\n                <div className={styles.pilihan__ganda}>\r\n                     <span>Pilihan A</span>\r\n                     <div className={styles.editor}>\r\n                    <textarea value={pil_a} onChange={e => {setPil_a(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <Latex>{pil_a}</Latex>\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan B</span>\r\n                     <div className={styles.editor}>\r\n                    <textarea value={pil_b} onChange={e => {setPil_b(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <Latex>{pil_b}</Latex>\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan C</span>\r\n                     <div className={styles.editor}>\r\n                    <textarea value={pil_c} onChange={e => {setPil_c(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <Latex>{pil_c}</Latex>\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan D</span>\r\n                    <div className={styles.editor}>\r\n                    <textarea value={pil_d} onChange={e => {setPil_d(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <Latex>{pil_d}</Latex>\r\n                    </div>\r\n                    <br />\r\n                    <span>Pilihan E</span>\r\n                    <div className={styles.editor}>\r\n                    <textarea value={pil_e} onChange={e => {setPil_e(e.target.value)}} cols=\"30\" rows=\"10\"></textarea>\r\n                    <Latex>{pil_e}</Latex>\r\n                    </div>\r\n                    <br/>\r\n                </div>\r\n            }\r\n            <span>jawaban : </span>\r\n            <br />\r\n            {tipeSoal === \"essai\" ?\r\n            <div className={styles.editor}>\r\n                <textarea value={jawaban} onChange={jawabanType} name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n                <Latex>{jawaban}</Latex>\r\n            </div>\r\n                :\r\n            <div className={styles.jwb_pilgan}>\r\n                <select value={jawaban} onChange={jawabanType}>\r\n                    <option value=\"\"></option>\r\n                    <option value=\"a\">a</option>\r\n                    <option value=\"b\">b</option>\r\n                    <option value=\"c\">c</option>\r\n                    <option value=\"d\">d</option>\r\n                    <option value=\"e\">e</option>\r\n                </select>\r\n            </div>   \r\n            }\r\n            <br />\r\n            <span>pembahasan : </span>\r\n            <br/>\r\n            <div className={styles.editor}>\r\n            <textarea value={pembahasan} onChange={pembahasanType} name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n            <Latex>{pembahasan}</Latex>\r\n            </div>\r\n            <br />\r\n            \r\n            <Button title=\"Submit\" link=\"/\" onClick={addData} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditForm\r\n","D:\\Projek\\AppBimbel\\view\\view\\src\\JSON\\Siunitx.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"105","replacedBy":"109"},{"ruleId":"107","replacedBy":"110"},{"ruleId":"105","replacedBy":"111"},{"ruleId":"107","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":22,"column":21,"nodeType":"115","messageId":"116","endLine":22,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":35,"column":40,"nodeType":"119","messageId":"120","endLine":35,"endColumn":42},{"ruleId":"117","severity":1,"message":"118","line":51,"column":39,"nodeType":"119","messageId":"120","endLine":51,"endColumn":41},{"ruleId":"117","severity":1,"message":"118","line":59,"column":38,"nodeType":"119","messageId":"120","endLine":59,"endColumn":40},{"ruleId":"117","severity":1,"message":"118","line":77,"column":33,"nodeType":"119","messageId":"120","endLine":77,"endColumn":35},{"ruleId":"117","severity":1,"message":"118","line":96,"column":43,"nodeType":"119","messageId":"120","endLine":96,"endColumn":45},{"ruleId":"117","severity":1,"message":"118","line":107,"column":43,"nodeType":"119","messageId":"120","endLine":107,"endColumn":45},{"ruleId":"117","severity":1,"message":"118","line":165,"column":28,"nodeType":"119","messageId":"120","endLine":165,"endColumn":30},{"ruleId":"121","severity":1,"message":"122","line":298,"column":8,"nodeType":"123","endLine":298,"endColumn":99,"suggestions":"124"},{"ruleId":"113","severity":1,"message":"125","line":37,"column":12,"nodeType":"115","messageId":"116","endLine":37,"endColumn":24},{"ruleId":"113","severity":1,"message":"126","line":38,"column":12,"nodeType":"115","messageId":"116","endLine":38,"endColumn":21},{"ruleId":"113","severity":1,"message":"127","line":38,"column":23,"nodeType":"115","messageId":"116","endLine":38,"endColumn":35},{"ruleId":"113","severity":1,"message":"128","line":52,"column":37,"nodeType":"115","messageId":"116","endLine":52,"endColumn":66},{"ruleId":"113","severity":1,"message":"129","line":53,"column":38,"nodeType":"115","messageId":"116","endLine":53,"endColumn":68},{"ruleId":"113","severity":1,"message":"130","line":55,"column":11,"nodeType":"115","messageId":"116","endLine":55,"endColumn":33},{"ruleId":"113","severity":1,"message":"131","line":61,"column":11,"nodeType":"115","messageId":"116","endLine":61,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":67,"column":35,"nodeType":"119","messageId":"120","endLine":67,"endColumn":37},{"ruleId":"113","severity":1,"message":"132","line":161,"column":11,"nodeType":"115","messageId":"116","endLine":161,"endColumn":31},{"ruleId":"113","severity":1,"message":"133","line":254,"column":11,"nodeType":"115","messageId":"116","endLine":254,"endColumn":25},{"ruleId":"117","severity":1,"message":"118","line":314,"column":40,"nodeType":"119","messageId":"120","endLine":314,"endColumn":42},{"ruleId":"117","severity":1,"message":"118","line":332,"column":39,"nodeType":"119","messageId":"120","endLine":332,"endColumn":41},{"ruleId":"117","severity":1,"message":"118","line":340,"column":38,"nodeType":"119","messageId":"120","endLine":340,"endColumn":40},{"ruleId":"117","severity":1,"message":"118","line":358,"column":33,"nodeType":"119","messageId":"120","endLine":358,"endColumn":35},{"ruleId":"117","severity":1,"message":"118","line":377,"column":43,"nodeType":"119","messageId":"120","endLine":377,"endColumn":45},{"ruleId":"117","severity":1,"message":"118","line":388,"column":43,"nodeType":"119","messageId":"120","endLine":388,"endColumn":45},{"ruleId":"117","severity":1,"message":"118","line":427,"column":28,"nodeType":"119","messageId":"120","endLine":427,"endColumn":30},{"ruleId":"113","severity":1,"message":"134","line":459,"column":11,"nodeType":"115","messageId":"116","endLine":459,"endColumn":35},{"ruleId":"113","severity":1,"message":"135","line":461,"column":15,"nodeType":"115","messageId":"116","endLine":461,"endColumn":21},{"ruleId":"113","severity":1,"message":"136","line":477,"column":11,"nodeType":"115","messageId":"116","endLine":477,"endColumn":31},{"ruleId":"113","severity":1,"message":"137","line":517,"column":11,"nodeType":"115","messageId":"116","endLine":517,"endColumn":23},{"ruleId":"113","severity":1,"message":"138","line":520,"column":11,"nodeType":"115","messageId":"116","endLine":520,"endColumn":23},{"ruleId":"113","severity":1,"message":"139","line":523,"column":11,"nodeType":"115","messageId":"116","endLine":523,"endColumn":23},{"ruleId":"113","severity":1,"message":"140","line":526,"column":11,"nodeType":"115","messageId":"116","endLine":526,"endColumn":23},{"ruleId":"113","severity":1,"message":"141","line":529,"column":11,"nodeType":"115","messageId":"116","endLine":529,"endColumn":23},{"ruleId":"113","severity":1,"message":"142","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":23},{"ruleId":"113","severity":1,"message":"143","line":18,"column":12,"nodeType":"115","messageId":"116","endLine":18,"endColumn":20},{"ruleId":"113","severity":1,"message":"144","line":18,"column":22,"nodeType":"115","messageId":"116","endLine":18,"endColumn":33},{"ruleId":"113","severity":1,"message":"137","line":67,"column":11,"nodeType":"115","messageId":"116","endLine":67,"endColumn":23},{"ruleId":"113","severity":1,"message":"138","line":70,"column":11,"nodeType":"115","messageId":"116","endLine":70,"endColumn":23},{"ruleId":"113","severity":1,"message":"139","line":73,"column":11,"nodeType":"115","messageId":"116","endLine":73,"endColumn":23},{"ruleId":"113","severity":1,"message":"140","line":76,"column":11,"nodeType":"115","messageId":"116","endLine":76,"endColumn":23},{"ruleId":"113","severity":1,"message":"141","line":79,"column":11,"nodeType":"115","messageId":"116","endLine":79,"endColumn":23},{"ruleId":"121","severity":1,"message":"145","line":198,"column":8,"nodeType":"123","endLine":198,"endColumn":10,"suggestions":"146"},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],["147"],["148"],["147"],["148"],"no-unused-vars","'setImgSoal' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchUpdateBankSoal' and 'updateData'. Either include them or remove the dependency array.","ArrayExpression",["149"],"'imgSoalTotal' is assigned a value but never used.","'soalCache' is assigned a value but never used.","'setSoalCache' is assigned a value but never used.","'setOnIimgSoalTotalChangedPlus' is assigned a value but never used.","'setOnIimgSoalTotalChangedMinus' is assigned a value but never used.","'onImageChangeActivated' is assigned a value but never used.","'cekimgsoal' is assigned a value but never used.","'removeImageActivated' is assigned a value but never used.","'cekarraygambar' is assigned a value but never used.","'replaceAllMultiCondition' is assigned a value but never used.","'result' is assigned a value but never used.","'replaceFormulasLatex' is assigned a value but never used.","'pil_aChanged' is assigned a value but never used.","'pil_bChanged' is assigned a value but never used.","'pil_cChanged' is assigned a value but never used.","'pil_dChanged' is assigned a value but never used.","'pil_eChanged' is assigned a value but never used.","'ReactHtmlParser' is defined but never used.","'bankSoal' is assigned a value but never used.","'setBankSoal' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'selectMapel'. Either include them or remove the dependency array.",["150"],"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [selectMapel, selectKelas, selectbabSoal, selectTingkatKesulitan, nomor, deleteData, id, bankSoal, updateData, fetchUpdateBankSoal]",{"range":"155","text":"156"},"Update the dependencies array to be: [id, selectMapel]",{"range":"157","text":"158"},[11753,11844],"[selectMapel, selectKelas, selectbabSoal, selectTingkatKesulitan, nomor, deleteData, id, bankSoal, updateData, fetchUpdateBankSoal]",[6810,6812],"[id, selectMapel]"]